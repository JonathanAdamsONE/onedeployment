/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
export var acceptLanguage = {
    parameterPath: "acceptLanguage",
    mapper: {
        serializedName: "accept-language",
        defaultValue: 'en-US',
        type: {
            name: "String"
        }
    }
};
export var apiVersion = {
    parameterPath: "apiVersion",
    mapper: {
        required: true,
        serializedName: "api-version",
        type: {
            name: "String"
        }
    }
};
export var certificateName = {
    parameterPath: "certificateName",
    mapper: {
        required: true,
        serializedName: "certificateName",
        constraints: {
            Pattern: /^[A-Za-z0-9-._]{1,64}$/
        },
        type: {
            name: "String"
        }
    }
};
export var eventHubEndpointName = {
    parameterPath: "eventHubEndpointName",
    mapper: {
        required: true,
        serializedName: "eventHubEndpointName",
        type: {
            name: "String"
        }
    }
};
export var groupId = {
    parameterPath: "groupId",
    mapper: {
        required: true,
        serializedName: "groupId",
        type: {
            name: "String"
        }
    }
};
export var ifMatch0 = {
    parameterPath: [
        "options",
        "ifMatch"
    ],
    mapper: {
        serializedName: "If-Match",
        type: {
            name: "String"
        }
    }
};
export var ifMatch1 = {
    parameterPath: "ifMatch",
    mapper: {
        required: true,
        serializedName: "If-Match",
        type: {
            name: "String"
        }
    }
};
export var iotHubName = {
    parameterPath: "iotHubName",
    mapper: {
        required: true,
        serializedName: "iotHubName",
        type: {
            name: "String"
        }
    }
};
export var jobId = {
    parameterPath: "jobId",
    mapper: {
        required: true,
        serializedName: "jobId",
        type: {
            name: "String"
        }
    }
};
export var keyName = {
    parameterPath: "keyName",
    mapper: {
        required: true,
        serializedName: "keyName",
        type: {
            name: "String"
        }
    }
};
export var name = {
    parameterPath: "name",
    mapper: {
        required: true,
        serializedName: "name",
        type: {
            name: "String"
        }
    }
};
export var nextPageLink = {
    parameterPath: "nextPageLink",
    mapper: {
        required: true,
        serializedName: "nextLink",
        type: {
            name: "String"
        }
    },
    skipEncoding: true
};
export var privateEndpointConnectionName = {
    parameterPath: "privateEndpointConnectionName",
    mapper: {
        required: true,
        serializedName: "privateEndpointConnectionName",
        type: {
            name: "String"
        }
    }
};
export var resourceGroupName = {
    parameterPath: "resourceGroupName",
    mapper: {
        required: true,
        serializedName: "resourceGroupName",
        type: {
            name: "String"
        }
    }
};
export var resourceName = {
    parameterPath: "resourceName",
    mapper: {
        required: true,
        serializedName: "resourceName",
        type: {
            name: "String"
        }
    }
};
export var subscriptionId = {
    parameterPath: "subscriptionId",
    mapper: {
        required: true,
        serializedName: "subscriptionId",
        type: {
            name: "String"
        }
    }
};
//# sourceMappingURL=parameters.js.map