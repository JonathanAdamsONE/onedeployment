/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
import { __assign } from "tslib";
import * as msRest from "@azure/ms-rest-js";
import * as Mappers from "../models/iotHubMappers";
import * as Parameters from "../models/parameters";
/** Class representing a IotHub. */
var IotHub = /** @class */ (function () {
    /**
     * Create a IotHub.
     * @param {IotHubClientContext} client Reference to the service client.
     */
    function IotHub(client) {
        this.client = client;
    }
    /**
     * Manually initiate a failover for the IoT Hub to its secondary region. To learn more, see
     * https://aka.ms/manualfailover
     * @summary Manually initiate a failover for the IoT Hub to its secondary region
     * @param iotHubName Name of the IoT hub to failover
     * @param resourceGroupName Name of the resource group containing the IoT hub resource
     * @param failoverRegion Region the hub will be failed over to
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    IotHub.prototype.manualFailover = function (iotHubName, resourceGroupName, failoverRegion, options) {
        return this.beginManualFailover(iotHubName, resourceGroupName, failoverRegion, options)
            .then(function (lroPoller) { return lroPoller.pollUntilFinished(); });
    };
    /**
     * Manually initiate a failover for the IoT Hub to its secondary region. To learn more, see
     * https://aka.ms/manualfailover
     * @summary Manually initiate a failover for the IoT Hub to its secondary region
     * @param iotHubName Name of the IoT hub to failover
     * @param resourceGroupName Name of the resource group containing the IoT hub resource
     * @param failoverRegion Region the hub will be failed over to
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    IotHub.prototype.beginManualFailover = function (iotHubName, resourceGroupName, failoverRegion, options) {
        return this.client.sendLRORequest({
            iotHubName: iotHubName,
            resourceGroupName: resourceGroupName,
            failoverRegion: failoverRegion,
            options: options
        }, beginManualFailoverOperationSpec, options);
    };
    return IotHub;
}());
export { IotHub };
// Operation Specifications
var serializer = new msRest.Serializer(Mappers);
var beginManualFailoverOperationSpec = {
    httpMethod: "POST",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{iotHubName}/failover",
    urlParameters: [
        Parameters.iotHubName,
        Parameters.subscriptionId,
        Parameters.resourceGroupName
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    requestBody: {
        parameterPath: {
            failoverRegion: "failoverRegion"
        },
        mapper: __assign(__assign({}, Mappers.FailoverInput), { required: true })
    },
    responses: {
        200: {},
        202: {},
        default: {
            bodyMapper: Mappers.ErrorDetails
        }
    },
    serializer: serializer
};
//# sourceMappingURL=iotHub.js.map