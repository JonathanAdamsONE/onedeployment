import * as msRest from "@azure/ms-rest-js";
import * as msRestAzure from "@azure/ms-rest-azure-js";
import * as Models from "../models";
import { IotHubClientContext } from "../iotHubClientContext";
/** Class representing a IotHubResource. */
export declare class IotHubResource {
    private readonly client;
    /**
     * Create a IotHubResource.
     * @param {IotHubClientContext} client Reference to the service client.
     */
    constructor(client: IotHubClientContext);
    /**
     * Get the non-security related metadata of an IoT hub.
     * @summary Get the non-security related metadata of an IoT hub
     * @param resourceGroupName The name of the resource group that contains the IoT hub.
     * @param resourceName The name of the IoT hub.
     * @param [options] The optional parameters
     * @returns Promise<Models.IotHubResourceGetResponse>
     */
    get(resourceGroupName: string, resourceName: string, options?: msRest.RequestOptionsBase): Promise<Models.IotHubResourceGetResponse>;
    /**
     * @param resourceGroupName The name of the resource group that contains the IoT hub.
     * @param resourceName The name of the IoT hub.
     * @param callback The callback
     */
    get(resourceGroupName: string, resourceName: string, callback: msRest.ServiceCallback<Models.IotHubDescription>): void;
    /**
     * @param resourceGroupName The name of the resource group that contains the IoT hub.
     * @param resourceName The name of the IoT hub.
     * @param options The optional parameters
     * @param callback The callback
     */
    get(resourceGroupName: string, resourceName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.IotHubDescription>): void;
    /**
     * Create or update the metadata of an Iot hub. The usual pattern to modify a property is to
     * retrieve the IoT hub metadata and security metadata, and then combine them with the modified
     * values in a new body to update the IoT hub.
     * @summary Create or update the metadata of an IoT hub.
     * @param resourceGroupName The name of the resource group that contains the IoT hub.
     * @param resourceName The name of the IoT hub.
     * @param iotHubDescription The IoT hub metadata and security metadata.
     * @param [options] The optional parameters
     * @returns Promise<Models.IotHubResourceCreateOrUpdateResponse>
     */
    createOrUpdate(resourceGroupName: string, resourceName: string, iotHubDescription: Models.IotHubDescription, options?: Models.IotHubResourceCreateOrUpdateOptionalParams): Promise<Models.IotHubResourceCreateOrUpdateResponse>;
    /**
     * Update an existing IoT Hub tags. to update other fields use the CreateOrUpdate method
     * @summary Update an existing IoT Hubs tags.
     * @param resourceGroupName Resource group identifier.
     * @param resourceName Name of iot hub to update.
     * @param [options] The optional parameters
     * @returns Promise<Models.IotHubResourceUpdateResponse>
     */
    update(resourceGroupName: string, resourceName: string, options?: Models.IotHubResourceUpdateOptionalParams): Promise<Models.IotHubResourceUpdateResponse>;
    /**
     * Delete an IoT hub.
     * @summary Delete an IoT hub
     * @param resourceGroupName The name of the resource group that contains the IoT hub.
     * @param resourceName The name of the IoT hub.
     * @param [options] The optional parameters
     * @returns Promise<Models.IotHubResourceDeleteMethodResponse>
     */
    deleteMethod(resourceGroupName: string, resourceName: string, options?: msRest.RequestOptionsBase): Promise<Models.IotHubResourceDeleteMethodResponse>;
    /**
     * Get all the IoT hubs in a subscription.
     * @summary Get all the IoT hubs in a subscription
     * @param [options] The optional parameters
     * @returns Promise<Models.IotHubResourceListBySubscriptionResponse>
     */
    listBySubscription(options?: msRest.RequestOptionsBase): Promise<Models.IotHubResourceListBySubscriptionResponse>;
    /**
     * @param callback The callback
     */
    listBySubscription(callback: msRest.ServiceCallback<Models.IotHubDescriptionListResult>): void;
    /**
     * @param options The optional parameters
     * @param callback The callback
     */
    listBySubscription(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.IotHubDescriptionListResult>): void;
    /**
     * Get all the IoT hubs in a resource group.
     * @summary Get all the IoT hubs in a resource group
     * @param resourceGroupName The name of the resource group that contains the IoT hub.
     * @param [options] The optional parameters
     * @returns Promise<Models.IotHubResourceListByResourceGroupResponse>
     */
    listByResourceGroup(resourceGroupName: string, options?: msRest.RequestOptionsBase): Promise<Models.IotHubResourceListByResourceGroupResponse>;
    /**
     * @param resourceGroupName The name of the resource group that contains the IoT hub.
     * @param callback The callback
     */
    listByResourceGroup(resourceGroupName: string, callback: msRest.ServiceCallback<Models.IotHubDescriptionListResult>): void;
    /**
     * @param resourceGroupName The name of the resource group that contains the IoT hub.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByResourceGroup(resourceGroupName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.IotHubDescriptionListResult>): void;
    /**
     * Get the statistics from an IoT hub.
     * @summary Get the statistics from an IoT hub
     * @param resourceGroupName The name of the resource group that contains the IoT hub.
     * @param resourceName The name of the IoT hub.
     * @param [options] The optional parameters
     * @returns Promise<Models.IotHubResourceGetStatsResponse>
     */
    getStats(resourceGroupName: string, resourceName: string, options?: msRest.RequestOptionsBase): Promise<Models.IotHubResourceGetStatsResponse>;
    /**
     * @param resourceGroupName The name of the resource group that contains the IoT hub.
     * @param resourceName The name of the IoT hub.
     * @param callback The callback
     */
    getStats(resourceGroupName: string, resourceName: string, callback: msRest.ServiceCallback<Models.RegistryStatistics>): void;
    /**
     * @param resourceGroupName The name of the resource group that contains the IoT hub.
     * @param resourceName The name of the IoT hub.
     * @param options The optional parameters
     * @param callback The callback
     */
    getStats(resourceGroupName: string, resourceName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.RegistryStatistics>): void;
    /**
     * Get the list of valid SKUs for an IoT hub.
     * @summary Get the list of valid SKUs for an IoT hub
     * @param resourceGroupName The name of the resource group that contains the IoT hub.
     * @param resourceName The name of the IoT hub.
     * @param [options] The optional parameters
     * @returns Promise<Models.IotHubResourceGetValidSkusResponse>
     */
    getValidSkus(resourceGroupName: string, resourceName: string, options?: msRest.RequestOptionsBase): Promise<Models.IotHubResourceGetValidSkusResponse>;
    /**
     * @param resourceGroupName The name of the resource group that contains the IoT hub.
     * @param resourceName The name of the IoT hub.
     * @param callback The callback
     */
    getValidSkus(resourceGroupName: string, resourceName: string, callback: msRest.ServiceCallback<Models.IotHubSkuDescriptionListResult>): void;
    /**
     * @param resourceGroupName The name of the resource group that contains the IoT hub.
     * @param resourceName The name of the IoT hub.
     * @param options The optional parameters
     * @param callback The callback
     */
    getValidSkus(resourceGroupName: string, resourceName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.IotHubSkuDescriptionListResult>): void;
    /**
     * Get a list of the consumer groups in the Event Hub-compatible device-to-cloud endpoint in an IoT
     * hub.
     * @summary Get a list of the consumer groups in the Event Hub-compatible device-to-cloud endpoint
     * in an IoT hub
     * @param resourceGroupName The name of the resource group that contains the IoT hub.
     * @param resourceName The name of the IoT hub.
     * @param eventHubEndpointName The name of the Event Hub-compatible endpoint.
     * @param [options] The optional parameters
     * @returns Promise<Models.IotHubResourceListEventHubConsumerGroupsResponse>
     */
    listEventHubConsumerGroups(resourceGroupName: string, resourceName: string, eventHubEndpointName: string, options?: msRest.RequestOptionsBase): Promise<Models.IotHubResourceListEventHubConsumerGroupsResponse>;
    /**
     * @param resourceGroupName The name of the resource group that contains the IoT hub.
     * @param resourceName The name of the IoT hub.
     * @param eventHubEndpointName The name of the Event Hub-compatible endpoint.
     * @param callback The callback
     */
    listEventHubConsumerGroups(resourceGroupName: string, resourceName: string, eventHubEndpointName: string, callback: msRest.ServiceCallback<Models.EventHubConsumerGroupsListResult>): void;
    /**
     * @param resourceGroupName The name of the resource group that contains the IoT hub.
     * @param resourceName The name of the IoT hub.
     * @param eventHubEndpointName The name of the Event Hub-compatible endpoint.
     * @param options The optional parameters
     * @param callback The callback
     */
    listEventHubConsumerGroups(resourceGroupName: string, resourceName: string, eventHubEndpointName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.EventHubConsumerGroupsListResult>): void;
    /**
     * Get a consumer group from the Event Hub-compatible device-to-cloud endpoint for an IoT hub.
     * @summary Get a consumer group from the Event Hub-compatible device-to-cloud endpoint for an IoT
     * hub
     * @param resourceGroupName The name of the resource group that contains the IoT hub.
     * @param resourceName The name of the IoT hub.
     * @param eventHubEndpointName The name of the Event Hub-compatible endpoint in the IoT hub.
     * @param name The name of the consumer group to retrieve.
     * @param [options] The optional parameters
     * @returns Promise<Models.IotHubResourceGetEventHubConsumerGroupResponse>
     */
    getEventHubConsumerGroup(resourceGroupName: string, resourceName: string, eventHubEndpointName: string, name: string, options?: msRest.RequestOptionsBase): Promise<Models.IotHubResourceGetEventHubConsumerGroupResponse>;
    /**
     * @param resourceGroupName The name of the resource group that contains the IoT hub.
     * @param resourceName The name of the IoT hub.
     * @param eventHubEndpointName The name of the Event Hub-compatible endpoint in the IoT hub.
     * @param name The name of the consumer group to retrieve.
     * @param callback The callback
     */
    getEventHubConsumerGroup(resourceGroupName: string, resourceName: string, eventHubEndpointName: string, name: string, callback: msRest.ServiceCallback<Models.EventHubConsumerGroupInfo>): void;
    /**
     * @param resourceGroupName The name of the resource group that contains the IoT hub.
     * @param resourceName The name of the IoT hub.
     * @param eventHubEndpointName The name of the Event Hub-compatible endpoint in the IoT hub.
     * @param name The name of the consumer group to retrieve.
     * @param options The optional parameters
     * @param callback The callback
     */
    getEventHubConsumerGroup(resourceGroupName: string, resourceName: string, eventHubEndpointName: string, name: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.EventHubConsumerGroupInfo>): void;
    /**
     * Add a consumer group to an Event Hub-compatible endpoint in an IoT hub.
     * @summary Add a consumer group to an Event Hub-compatible endpoint in an IoT hub
     * @param resourceGroupName The name of the resource group that contains the IoT hub.
     * @param resourceName The name of the IoT hub.
     * @param eventHubEndpointName The name of the Event Hub-compatible endpoint in the IoT hub.
     * @param name The name of the consumer group to add.
     * @param [options] The optional parameters
     * @returns Promise<Models.IotHubResourceCreateEventHubConsumerGroupResponse>
     */
    createEventHubConsumerGroup(resourceGroupName: string, resourceName: string, eventHubEndpointName: string, name: string, options?: Models.IotHubResourceCreateEventHubConsumerGroupOptionalParams): Promise<Models.IotHubResourceCreateEventHubConsumerGroupResponse>;
    /**
     * @param resourceGroupName The name of the resource group that contains the IoT hub.
     * @param resourceName The name of the IoT hub.
     * @param eventHubEndpointName The name of the Event Hub-compatible endpoint in the IoT hub.
     * @param name The name of the consumer group to add.
     * @param callback The callback
     */
    createEventHubConsumerGroup(resourceGroupName: string, resourceName: string, eventHubEndpointName: string, name: string, callback: msRest.ServiceCallback<Models.EventHubConsumerGroupInfo>): void;
    /**
     * @param resourceGroupName The name of the resource group that contains the IoT hub.
     * @param resourceName The name of the IoT hub.
     * @param eventHubEndpointName The name of the Event Hub-compatible endpoint in the IoT hub.
     * @param name The name of the consumer group to add.
     * @param options The optional parameters
     * @param callback The callback
     */
    createEventHubConsumerGroup(resourceGroupName: string, resourceName: string, eventHubEndpointName: string, name: string, options: Models.IotHubResourceCreateEventHubConsumerGroupOptionalParams, callback: msRest.ServiceCallback<Models.EventHubConsumerGroupInfo>): void;
    /**
     * Delete a consumer group from an Event Hub-compatible endpoint in an IoT hub.
     * @summary Delete a consumer group from an Event Hub-compatible endpoint in an IoT hub
     * @param resourceGroupName The name of the resource group that contains the IoT hub.
     * @param resourceName The name of the IoT hub.
     * @param eventHubEndpointName The name of the Event Hub-compatible endpoint in the IoT hub.
     * @param name The name of the consumer group to delete.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    deleteEventHubConsumerGroup(resourceGroupName: string, resourceName: string, eventHubEndpointName: string, name: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * @param resourceGroupName The name of the resource group that contains the IoT hub.
     * @param resourceName The name of the IoT hub.
     * @param eventHubEndpointName The name of the Event Hub-compatible endpoint in the IoT hub.
     * @param name The name of the consumer group to delete.
     * @param callback The callback
     */
    deleteEventHubConsumerGroup(resourceGroupName: string, resourceName: string, eventHubEndpointName: string, name: string, callback: msRest.ServiceCallback<void>): void;
    /**
     * @param resourceGroupName The name of the resource group that contains the IoT hub.
     * @param resourceName The name of the IoT hub.
     * @param eventHubEndpointName The name of the Event Hub-compatible endpoint in the IoT hub.
     * @param name The name of the consumer group to delete.
     * @param options The optional parameters
     * @param callback The callback
     */
    deleteEventHubConsumerGroup(resourceGroupName: string, resourceName: string, eventHubEndpointName: string, name: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
    /**
     * Get a list of all the jobs in an IoT hub. For more information, see:
     * https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-identity-registry.
     * @summary Get a list of all the jobs in an IoT hub. For more information, see:
     * https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-identity-registry
     * @param resourceGroupName The name of the resource group that contains the IoT hub.
     * @param resourceName The name of the IoT hub.
     * @param [options] The optional parameters
     * @returns Promise<Models.IotHubResourceListJobsResponse>
     */
    listJobs(resourceGroupName: string, resourceName: string, options?: msRest.RequestOptionsBase): Promise<Models.IotHubResourceListJobsResponse>;
    /**
     * @param resourceGroupName The name of the resource group that contains the IoT hub.
     * @param resourceName The name of the IoT hub.
     * @param callback The callback
     */
    listJobs(resourceGroupName: string, resourceName: string, callback: msRest.ServiceCallback<Models.JobResponseListResult>): void;
    /**
     * @param resourceGroupName The name of the resource group that contains the IoT hub.
     * @param resourceName The name of the IoT hub.
     * @param options The optional parameters
     * @param callback The callback
     */
    listJobs(resourceGroupName: string, resourceName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.JobResponseListResult>): void;
    /**
     * Get the details of a job from an IoT hub. For more information, see:
     * https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-identity-registry.
     * @summary Get the details of a job from an IoT hub. For more information, see:
     * https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-identity-registry
     * @param resourceGroupName The name of the resource group that contains the IoT hub.
     * @param resourceName The name of the IoT hub.
     * @param jobId The job identifier.
     * @param [options] The optional parameters
     * @returns Promise<Models.IotHubResourceGetJobResponse>
     */
    getJob(resourceGroupName: string, resourceName: string, jobId: string, options?: msRest.RequestOptionsBase): Promise<Models.IotHubResourceGetJobResponse>;
    /**
     * @param resourceGroupName The name of the resource group that contains the IoT hub.
     * @param resourceName The name of the IoT hub.
     * @param jobId The job identifier.
     * @param callback The callback
     */
    getJob(resourceGroupName: string, resourceName: string, jobId: string, callback: msRest.ServiceCallback<Models.JobResponse>): void;
    /**
     * @param resourceGroupName The name of the resource group that contains the IoT hub.
     * @param resourceName The name of the IoT hub.
     * @param jobId The job identifier.
     * @param options The optional parameters
     * @param callback The callback
     */
    getJob(resourceGroupName: string, resourceName: string, jobId: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.JobResponse>): void;
    /**
     * Get the quota metrics for an IoT hub.
     * @summary Get the quota metrics for an IoT hub
     * @param resourceGroupName The name of the resource group that contains the IoT hub.
     * @param resourceName The name of the IoT hub.
     * @param [options] The optional parameters
     * @returns Promise<Models.IotHubResourceGetQuotaMetricsResponse>
     */
    getQuotaMetrics(resourceGroupName: string, resourceName: string, options?: msRest.RequestOptionsBase): Promise<Models.IotHubResourceGetQuotaMetricsResponse>;
    /**
     * @param resourceGroupName The name of the resource group that contains the IoT hub.
     * @param resourceName The name of the IoT hub.
     * @param callback The callback
     */
    getQuotaMetrics(resourceGroupName: string, resourceName: string, callback: msRest.ServiceCallback<Models.IotHubQuotaMetricInfoListResult>): void;
    /**
     * @param resourceGroupName The name of the resource group that contains the IoT hub.
     * @param resourceName The name of the IoT hub.
     * @param options The optional parameters
     * @param callback The callback
     */
    getQuotaMetrics(resourceGroupName: string, resourceName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.IotHubQuotaMetricInfoListResult>): void;
    /**
     * Get the health for routing endpoints.
     * @summary Get the health for routing endpoints
     * @param resourceGroupName
     * @param iotHubName
     * @param [options] The optional parameters
     * @returns Promise<Models.IotHubResourceGetEndpointHealthResponse>
     */
    getEndpointHealth(resourceGroupName: string, iotHubName: string, options?: msRest.RequestOptionsBase): Promise<Models.IotHubResourceGetEndpointHealthResponse>;
    /**
     * @param resourceGroupName
     * @param iotHubName
     * @param callback The callback
     */
    getEndpointHealth(resourceGroupName: string, iotHubName: string, callback: msRest.ServiceCallback<Models.EndpointHealthDataListResult>): void;
    /**
     * @param resourceGroupName
     * @param iotHubName
     * @param options The optional parameters
     * @param callback The callback
     */
    getEndpointHealth(resourceGroupName: string, iotHubName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.EndpointHealthDataListResult>): void;
    /**
     * Check if an IoT hub name is available.
     * @summary Check if an IoT hub name is available
     * @param name The name of the IoT hub to check.
     * @param [options] The optional parameters
     * @returns Promise<Models.IotHubResourceCheckNameAvailabilityResponse>
     */
    checkNameAvailability(name: string, options?: msRest.RequestOptionsBase): Promise<Models.IotHubResourceCheckNameAvailabilityResponse>;
    /**
     * @param name The name of the IoT hub to check.
     * @param callback The callback
     */
    checkNameAvailability(name: string, callback: msRest.ServiceCallback<Models.IotHubNameAvailabilityInfo>): void;
    /**
     * @param name The name of the IoT hub to check.
     * @param options The optional parameters
     * @param callback The callback
     */
    checkNameAvailability(name: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.IotHubNameAvailabilityInfo>): void;
    /**
     * Test all routes configured in this Iot Hub
     * @summary Test all routes
     * @param input Input for testing all routes
     * @param iotHubName IotHub to be tested
     * @param resourceGroupName resource group which Iot Hub belongs to
     * @param [options] The optional parameters
     * @returns Promise<Models.IotHubResourceTestAllRoutesResponse>
     */
    testAllRoutes(input: Models.TestAllRoutesInput, iotHubName: string, resourceGroupName: string, options?: msRest.RequestOptionsBase): Promise<Models.IotHubResourceTestAllRoutesResponse>;
    /**
     * @param input Input for testing all routes
     * @param iotHubName IotHub to be tested
     * @param resourceGroupName resource group which Iot Hub belongs to
     * @param callback The callback
     */
    testAllRoutes(input: Models.TestAllRoutesInput, iotHubName: string, resourceGroupName: string, callback: msRest.ServiceCallback<Models.TestAllRoutesResult>): void;
    /**
     * @param input Input for testing all routes
     * @param iotHubName IotHub to be tested
     * @param resourceGroupName resource group which Iot Hub belongs to
     * @param options The optional parameters
     * @param callback The callback
     */
    testAllRoutes(input: Models.TestAllRoutesInput, iotHubName: string, resourceGroupName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.TestAllRoutesResult>): void;
    /**
     * Test the new route for this Iot Hub
     * @summary Test the new route
     * @param input Route that needs to be tested
     * @param iotHubName IotHub to be tested
     * @param resourceGroupName resource group which Iot Hub belongs to
     * @param [options] The optional parameters
     * @returns Promise<Models.IotHubResourceTestRouteResponse>
     */
    testRoute(input: Models.TestRouteInput, iotHubName: string, resourceGroupName: string, options?: msRest.RequestOptionsBase): Promise<Models.IotHubResourceTestRouteResponse>;
    /**
     * @param input Route that needs to be tested
     * @param iotHubName IotHub to be tested
     * @param resourceGroupName resource group which Iot Hub belongs to
     * @param callback The callback
     */
    testRoute(input: Models.TestRouteInput, iotHubName: string, resourceGroupName: string, callback: msRest.ServiceCallback<Models.TestRouteResult>): void;
    /**
     * @param input Route that needs to be tested
     * @param iotHubName IotHub to be tested
     * @param resourceGroupName resource group which Iot Hub belongs to
     * @param options The optional parameters
     * @param callback The callback
     */
    testRoute(input: Models.TestRouteInput, iotHubName: string, resourceGroupName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.TestRouteResult>): void;
    /**
     * Get the security metadata for an IoT hub. For more information, see:
     * https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-security.
     * @summary Get the security metadata for an IoT hub. For more information, see:
     * https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-security
     * @param resourceGroupName The name of the resource group that contains the IoT hub.
     * @param resourceName The name of the IoT hub.
     * @param [options] The optional parameters
     * @returns Promise<Models.IotHubResourceListKeysResponse>
     */
    listKeys(resourceGroupName: string, resourceName: string, options?: msRest.RequestOptionsBase): Promise<Models.IotHubResourceListKeysResponse>;
    /**
     * @param resourceGroupName The name of the resource group that contains the IoT hub.
     * @param resourceName The name of the IoT hub.
     * @param callback The callback
     */
    listKeys(resourceGroupName: string, resourceName: string, callback: msRest.ServiceCallback<Models.SharedAccessSignatureAuthorizationRuleListResult>): void;
    /**
     * @param resourceGroupName The name of the resource group that contains the IoT hub.
     * @param resourceName The name of the IoT hub.
     * @param options The optional parameters
     * @param callback The callback
     */
    listKeys(resourceGroupName: string, resourceName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.SharedAccessSignatureAuthorizationRuleListResult>): void;
    /**
     * Get a shared access policy by name from an IoT hub. For more information, see:
     * https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-security.
     * @summary Get a shared access policy by name from an IoT hub. For more information, see:
     * https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-security
     * @param resourceGroupName The name of the resource group that contains the IoT hub.
     * @param resourceName The name of the IoT hub.
     * @param keyName The name of the shared access policy.
     * @param [options] The optional parameters
     * @returns Promise<Models.IotHubResourceGetKeysForKeyNameResponse>
     */
    getKeysForKeyName(resourceGroupName: string, resourceName: string, keyName: string, options?: msRest.RequestOptionsBase): Promise<Models.IotHubResourceGetKeysForKeyNameResponse>;
    /**
     * @param resourceGroupName The name of the resource group that contains the IoT hub.
     * @param resourceName The name of the IoT hub.
     * @param keyName The name of the shared access policy.
     * @param callback The callback
     */
    getKeysForKeyName(resourceGroupName: string, resourceName: string, keyName: string, callback: msRest.ServiceCallback<Models.SharedAccessSignatureAuthorizationRule>): void;
    /**
     * @param resourceGroupName The name of the resource group that contains the IoT hub.
     * @param resourceName The name of the IoT hub.
     * @param keyName The name of the shared access policy.
     * @param options The optional parameters
     * @param callback The callback
     */
    getKeysForKeyName(resourceGroupName: string, resourceName: string, keyName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.SharedAccessSignatureAuthorizationRule>): void;
    /**
     * Exports all the device identities in the IoT hub identity registry to an Azure Storage blob
     * container. For more information, see:
     * https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-identity-registry#import-and-export-device-identities.
     * @summary Exports all the device identities in the IoT hub identity registry to an Azure Storage
     * blob container. For more information, see:
     * https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-identity-registry#import-and-export-device-identities
     * @param resourceGroupName The name of the resource group that contains the IoT hub.
     * @param resourceName The name of the IoT hub.
     * @param exportDevicesParameters The parameters that specify the export devices operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.IotHubResourceExportDevicesResponse>
     */
    exportDevices(resourceGroupName: string, resourceName: string, exportDevicesParameters: Models.ExportDevicesRequest, options?: msRest.RequestOptionsBase): Promise<Models.IotHubResourceExportDevicesResponse>;
    /**
     * @param resourceGroupName The name of the resource group that contains the IoT hub.
     * @param resourceName The name of the IoT hub.
     * @param exportDevicesParameters The parameters that specify the export devices operation.
     * @param callback The callback
     */
    exportDevices(resourceGroupName: string, resourceName: string, exportDevicesParameters: Models.ExportDevicesRequest, callback: msRest.ServiceCallback<Models.JobResponse>): void;
    /**
     * @param resourceGroupName The name of the resource group that contains the IoT hub.
     * @param resourceName The name of the IoT hub.
     * @param exportDevicesParameters The parameters that specify the export devices operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    exportDevices(resourceGroupName: string, resourceName: string, exportDevicesParameters: Models.ExportDevicesRequest, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.JobResponse>): void;
    /**
     * Import, update, or delete device identities in the IoT hub identity registry from a blob. For
     * more information, see:
     * https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-identity-registry#import-and-export-device-identities.
     * @summary Import, update, or delete device identities in the IoT hub identity registry from a
     * blob. For more information, see:
     * https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-identity-registry#import-and-export-device-identities
     * @param resourceGroupName The name of the resource group that contains the IoT hub.
     * @param resourceName The name of the IoT hub.
     * @param importDevicesParameters The parameters that specify the import devices operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.IotHubResourceImportDevicesResponse>
     */
    importDevices(resourceGroupName: string, resourceName: string, importDevicesParameters: Models.ImportDevicesRequest, options?: msRest.RequestOptionsBase): Promise<Models.IotHubResourceImportDevicesResponse>;
    /**
     * @param resourceGroupName The name of the resource group that contains the IoT hub.
     * @param resourceName The name of the IoT hub.
     * @param importDevicesParameters The parameters that specify the import devices operation.
     * @param callback The callback
     */
    importDevices(resourceGroupName: string, resourceName: string, importDevicesParameters: Models.ImportDevicesRequest, callback: msRest.ServiceCallback<Models.JobResponse>): void;
    /**
     * @param resourceGroupName The name of the resource group that contains the IoT hub.
     * @param resourceName The name of the IoT hub.
     * @param importDevicesParameters The parameters that specify the import devices operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    importDevices(resourceGroupName: string, resourceName: string, importDevicesParameters: Models.ImportDevicesRequest, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.JobResponse>): void;
    /**
     * Create or update the metadata of an Iot hub. The usual pattern to modify a property is to
     * retrieve the IoT hub metadata and security metadata, and then combine them with the modified
     * values in a new body to update the IoT hub.
     * @summary Create or update the metadata of an IoT hub.
     * @param resourceGroupName The name of the resource group that contains the IoT hub.
     * @param resourceName The name of the IoT hub.
     * @param iotHubDescription The IoT hub metadata and security metadata.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    beginCreateOrUpdate(resourceGroupName: string, resourceName: string, iotHubDescription: Models.IotHubDescription, options?: Models.IotHubResourceBeginCreateOrUpdateOptionalParams): Promise<msRestAzure.LROPoller>;
    /**
     * Update an existing IoT Hub tags. to update other fields use the CreateOrUpdate method
     * @summary Update an existing IoT Hubs tags.
     * @param resourceGroupName Resource group identifier.
     * @param resourceName Name of iot hub to update.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    beginUpdate(resourceGroupName: string, resourceName: string, options?: Models.IotHubResourceBeginUpdateOptionalParams): Promise<msRestAzure.LROPoller>;
    /**
     * Delete an IoT hub.
     * @summary Delete an IoT hub
     * @param resourceGroupName The name of the resource group that contains the IoT hub.
     * @param resourceName The name of the IoT hub.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    beginDeleteMethod(resourceGroupName: string, resourceName: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller>;
    /**
     * Get all the IoT hubs in a subscription.
     * @summary Get all the IoT hubs in a subscription
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.IotHubResourceListBySubscriptionNextResponse>
     */
    listBySubscriptionNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.IotHubResourceListBySubscriptionNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listBySubscriptionNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.IotHubDescriptionListResult>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listBySubscriptionNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.IotHubDescriptionListResult>): void;
    /**
     * Get all the IoT hubs in a resource group.
     * @summary Get all the IoT hubs in a resource group
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.IotHubResourceListByResourceGroupNextResponse>
     */
    listByResourceGroupNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.IotHubResourceListByResourceGroupNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listByResourceGroupNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.IotHubDescriptionListResult>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByResourceGroupNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.IotHubDescriptionListResult>): void;
    /**
     * Get the list of valid SKUs for an IoT hub.
     * @summary Get the list of valid SKUs for an IoT hub
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.IotHubResourceGetValidSkusNextResponse>
     */
    getValidSkusNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.IotHubResourceGetValidSkusNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    getValidSkusNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.IotHubSkuDescriptionListResult>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    getValidSkusNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.IotHubSkuDescriptionListResult>): void;
    /**
     * Get a list of the consumer groups in the Event Hub-compatible device-to-cloud endpoint in an IoT
     * hub.
     * @summary Get a list of the consumer groups in the Event Hub-compatible device-to-cloud endpoint
     * in an IoT hub
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.IotHubResourceListEventHubConsumerGroupsNextResponse>
     */
    listEventHubConsumerGroupsNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.IotHubResourceListEventHubConsumerGroupsNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listEventHubConsumerGroupsNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.EventHubConsumerGroupsListResult>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listEventHubConsumerGroupsNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.EventHubConsumerGroupsListResult>): void;
    /**
     * Get a list of all the jobs in an IoT hub. For more information, see:
     * https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-identity-registry.
     * @summary Get a list of all the jobs in an IoT hub. For more information, see:
     * https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-identity-registry
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.IotHubResourceListJobsNextResponse>
     */
    listJobsNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.IotHubResourceListJobsNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listJobsNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.JobResponseListResult>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listJobsNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.JobResponseListResult>): void;
    /**
     * Get the quota metrics for an IoT hub.
     * @summary Get the quota metrics for an IoT hub
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.IotHubResourceGetQuotaMetricsNextResponse>
     */
    getQuotaMetricsNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.IotHubResourceGetQuotaMetricsNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    getQuotaMetricsNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.IotHubQuotaMetricInfoListResult>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    getQuotaMetricsNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.IotHubQuotaMetricInfoListResult>): void;
    /**
     * Get the health for routing endpoints.
     * @summary Get the health for routing endpoints
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.IotHubResourceGetEndpointHealthNextResponse>
     */
    getEndpointHealthNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.IotHubResourceGetEndpointHealthNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    getEndpointHealthNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.EndpointHealthDataListResult>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    getEndpointHealthNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.EndpointHealthDataListResult>): void;
    /**
     * Get the security metadata for an IoT hub. For more information, see:
     * https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-security.
     * @summary Get the security metadata for an IoT hub. For more information, see:
     * https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-security
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.IotHubResourceListKeysNextResponse>
     */
    listKeysNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.IotHubResourceListKeysNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listKeysNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.SharedAccessSignatureAuthorizationRuleListResult>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listKeysNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.SharedAccessSignatureAuthorizationRuleListResult>): void;
}
//# sourceMappingURL=iotHubResource.d.ts.map