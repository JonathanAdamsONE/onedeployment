{"version":3,"file":"arm-iothub.js","sources":["../node_modules/tslib/tslib.es6.js","../src/models/index.ts","../src/models/mappers.ts","../src/models/operationsMappers.ts","../src/models/parameters.ts","../src/operations/operations.ts","../src/models/iotHubResourceMappers.ts","../src/operations/iotHubResource.ts","../src/models/resourceProviderCommonMappers.ts","../src/operations/resourceProviderCommon.ts","../src/models/certificatesMappers.ts","../src/operations/certificates.ts","../src/models/iotHubMappers.ts","../src/operations/iotHub.ts","../src/models/privateLinkResourcesOperationsMappers.ts","../src/operations/privateLinkResourcesOperations.ts","../src/models/privateEndpointConnectionsMappers.ts","../src/operations/privateEndpointConnections.ts","../src/iotHubClientContext.ts","../src/iotHubClient.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { BaseResource, CloudError, AzureServiceClientOptions } from \"@azure/ms-rest-azure-js\";\nimport * as msRest from \"@azure/ms-rest-js\";\n\nexport { BaseResource, CloudError };\n\n/**\n * The JSON-serialized leaf certificate\n */\nexport interface CertificateVerificationDescription {\n  /**\n   * base-64 representation of X509 certificate .cer file or just .pem file content.\n   */\n  certificate?: string;\n}\n\n/**\n * The description of an X509 CA Certificate.\n */\nexport interface CertificateProperties {\n  /**\n   * The certificate's subject name.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly subject?: string;\n  /**\n   * The certificate's expiration date and time.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly expiry?: Date;\n  /**\n   * The certificate's thumbprint.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly thumbprint?: string;\n  /**\n   * Determines whether certificate has been verified.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly isVerified?: boolean;\n  /**\n   * The certificate's create date and time.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly created?: Date;\n  /**\n   * The certificate's last update date and time.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly updated?: Date;\n  /**\n   * The certificate content\n   */\n  certificate?: string;\n}\n\n/**\n * The X509 Certificate.\n */\nexport interface CertificateDescription extends BaseResource {\n  properties?: CertificateProperties;\n  /**\n   * The resource identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The name of the certificate.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * The entity tag.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly etag?: string;\n  /**\n   * The resource type.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly type?: string;\n}\n\n/**\n * The JSON-serialized array of Certificate objects.\n */\nexport interface CertificateListDescription {\n  /**\n   * The array of Certificate objects.\n   */\n  value?: CertificateDescription[];\n}\n\n/**\n * The JSON-serialized X509 Certificate.\n */\nexport interface CertificateBodyDescription {\n  /**\n   * base-64 representation of the X509 leaf certificate .cer file or just .pem file content.\n   */\n  certificate?: string;\n}\n\n/**\n * The description of an X509 CA Certificate including the challenge nonce issued for the\n * Proof-Of-Possession flow.\n */\nexport interface CertificatePropertiesWithNonce {\n  /**\n   * The certificate's subject name.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly subject?: string;\n  /**\n   * The certificate's expiration date and time.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly expiry?: Date;\n  /**\n   * The certificate's thumbprint.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly thumbprint?: string;\n  /**\n   * Determines whether certificate has been verified.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly isVerified?: boolean;\n  /**\n   * The certificate's create date and time.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly created?: Date;\n  /**\n   * The certificate's last update date and time.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly updated?: Date;\n  /**\n   * The certificate's verification code that will be used for proof of possession.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly verificationCode?: string;\n  /**\n   * The certificate content\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly certificate?: string;\n}\n\n/**\n * The X509 Certificate.\n */\nexport interface CertificateWithNonceDescription extends BaseResource {\n  properties?: CertificatePropertiesWithNonce;\n  /**\n   * The resource identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The name of the certificate.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * The entity tag.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly etag?: string;\n  /**\n   * The resource type.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly type?: string;\n}\n\n/**\n * The properties of an IoT hub shared access policy.\n */\nexport interface SharedAccessSignatureAuthorizationRule {\n  /**\n   * The name of the shared access policy.\n   */\n  keyName: string;\n  /**\n   * The primary key.\n   */\n  primaryKey?: string;\n  /**\n   * The secondary key.\n   */\n  secondaryKey?: string;\n  /**\n   * The permissions assigned to the shared access policy. Possible values include: 'RegistryRead',\n   * 'RegistryWrite', 'ServiceConnect', 'DeviceConnect', 'RegistryRead, RegistryWrite',\n   * 'RegistryRead, ServiceConnect', 'RegistryRead, DeviceConnect', 'RegistryWrite,\n   * ServiceConnect', 'RegistryWrite, DeviceConnect', 'ServiceConnect, DeviceConnect',\n   * 'RegistryRead, RegistryWrite, ServiceConnect', 'RegistryRead, RegistryWrite, DeviceConnect',\n   * 'RegistryRead, ServiceConnect, DeviceConnect', 'RegistryWrite, ServiceConnect, DeviceConnect',\n   * 'RegistryRead, RegistryWrite, ServiceConnect, DeviceConnect'\n   */\n  rights: AccessRights;\n}\n\n/**\n * The IP filter rules for the IoT hub.\n */\nexport interface IpFilterRule {\n  /**\n   * The name of the IP filter rule.\n   */\n  filterName: string;\n  /**\n   * The desired action for requests captured by this rule. Possible values include: 'Accept',\n   * 'Reject'\n   */\n  action: IpFilterActionType;\n  /**\n   * A string that contains the IP address range in CIDR notation for the rule.\n   */\n  ipMask: string;\n}\n\n/**\n * The private endpoint property of a private endpoint connection\n */\nexport interface PrivateEndpoint {\n  /**\n   * The resource identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n}\n\n/**\n * The current state of a private endpoint connection\n */\nexport interface PrivateLinkServiceConnectionState {\n  /**\n   * The status of a private endpoint connection. Possible values include: 'Pending', 'Approved',\n   * 'Rejected', 'Disconnected'\n   */\n  status: PrivateLinkServiceConnectionStatus;\n  /**\n   * The description for the current state of a private endpoint connection\n   */\n  description: string;\n  /**\n   * Actions required for a private endpoint connection\n   */\n  actionsRequired?: string;\n}\n\n/**\n * The properties of a private endpoint connection\n */\nexport interface PrivateEndpointConnectionProperties {\n  privateEndpoint?: PrivateEndpoint;\n  privateLinkServiceConnectionState: PrivateLinkServiceConnectionState;\n}\n\n/**\n * The private endpoint connection of an IotHub\n */\nexport interface PrivateEndpointConnection extends BaseResource {\n  /**\n   * The resource identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The resource name.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * The resource type.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly type?: string;\n  properties: PrivateEndpointConnectionProperties;\n}\n\n/**\n * The properties of the provisioned Event Hub-compatible endpoint used by the IoT hub.\n */\nexport interface EventHubProperties {\n  /**\n   * The retention time for device-to-cloud messages in days. See:\n   * https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#device-to-cloud-messages\n   */\n  retentionTimeInDays?: number;\n  /**\n   * The number of partitions for receiving device-to-cloud messages in the Event Hub-compatible\n   * endpoint. See:\n   * https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#device-to-cloud-messages.\n   */\n  partitionCount?: number;\n  /**\n   * The partition ids in the Event Hub-compatible endpoint.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly partitionIds?: string[];\n  /**\n   * The Event Hub-compatible name.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly path?: string;\n  /**\n   * The Event Hub-compatible endpoint.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly endpoint?: string;\n}\n\n/**\n * The properties related to service bus queue endpoint types.\n */\nexport interface RoutingServiceBusQueueEndpointProperties {\n  /**\n   * Id of the service bus queue endpoint\n   */\n  id?: string;\n  /**\n   * The connection string of the service bus queue endpoint.\n   */\n  connectionString?: string;\n  /**\n   * The url of the service bus queue endpoint. It must include the protocol sb://\n   */\n  endpointUri?: string;\n  /**\n   * Queue name on the service bus namespace\n   */\n  entityPath?: string;\n  /**\n   * Method used to authenticate against the service bus queue endpoint. Possible values include:\n   * 'keyBased', 'identityBased'\n   */\n  authenticationType?: AuthenticationType;\n  /**\n   * The name that identifies this endpoint. The name can only include alphanumeric characters,\n   * periods, underscores, hyphens and has a maximum length of 64 characters. The following names\n   * are reserved:  events, fileNotifications, $default. Endpoint names must be unique across\n   * endpoint types. The name need not be the same as the actual queue name.\n   */\n  name: string;\n  /**\n   * The subscription identifier of the service bus queue endpoint.\n   */\n  subscriptionId?: string;\n  /**\n   * The name of the resource group of the service bus queue endpoint.\n   */\n  resourceGroup?: string;\n}\n\n/**\n * The properties related to service bus topic endpoint types.\n */\nexport interface RoutingServiceBusTopicEndpointProperties {\n  /**\n   * Id of the service bus topic endpoint\n   */\n  id?: string;\n  /**\n   * The connection string of the service bus topic endpoint.\n   */\n  connectionString?: string;\n  /**\n   * The url of the service bus topic endpoint. It must include the protocol sb://\n   */\n  endpointUri?: string;\n  /**\n   * Queue name on the service bus topic\n   */\n  entityPath?: string;\n  /**\n   * Method used to authenticate against the service bus topic endpoint. Possible values include:\n   * 'keyBased', 'identityBased'\n   */\n  authenticationType?: AuthenticationType;\n  /**\n   * The name that identifies this endpoint. The name can only include alphanumeric characters,\n   * periods, underscores, hyphens and has a maximum length of 64 characters. The following names\n   * are reserved:  events, fileNotifications, $default. Endpoint names must be unique across\n   * endpoint types.  The name need not be the same as the actual topic name.\n   */\n  name: string;\n  /**\n   * The subscription identifier of the service bus topic endpoint.\n   */\n  subscriptionId?: string;\n  /**\n   * The name of the resource group of the service bus topic endpoint.\n   */\n  resourceGroup?: string;\n}\n\n/**\n * The properties related to an event hub endpoint.\n */\nexport interface RoutingEventHubProperties {\n  /**\n   * Id of the event hub endpoint\n   */\n  id?: string;\n  /**\n   * The connection string of the event hub endpoint.\n   */\n  connectionString?: string;\n  /**\n   * The url of the event hub endpoint. It must include the protocol sb://\n   */\n  endpointUri?: string;\n  /**\n   * Event hub name on the event hub namespace\n   */\n  entityPath?: string;\n  /**\n   * Method used to authenticate against the event hub endpoint. Possible values include:\n   * 'keyBased', 'identityBased'\n   */\n  authenticationType?: AuthenticationType;\n  /**\n   * The name that identifies this endpoint. The name can only include alphanumeric characters,\n   * periods, underscores, hyphens and has a maximum length of 64 characters. The following names\n   * are reserved:  events, fileNotifications, $default. Endpoint names must be unique across\n   * endpoint types.\n   */\n  name: string;\n  /**\n   * The subscription identifier of the event hub endpoint.\n   */\n  subscriptionId?: string;\n  /**\n   * The name of the resource group of the event hub endpoint.\n   */\n  resourceGroup?: string;\n}\n\n/**\n * The properties related to a storage container endpoint.\n */\nexport interface RoutingStorageContainerProperties {\n  /**\n   * Id of the storage container endpoint\n   */\n  id?: string;\n  /**\n   * The connection string of the storage account.\n   */\n  connectionString?: string;\n  /**\n   * The url of the storage endpoint. It must include the protocol https://\n   */\n  endpointUri?: string;\n  /**\n   * Method used to authenticate against the storage endpoint. Possible values include: 'keyBased',\n   * 'identityBased'\n   */\n  authenticationType?: AuthenticationType;\n  /**\n   * The name that identifies this endpoint. The name can only include alphanumeric characters,\n   * periods, underscores, hyphens and has a maximum length of 64 characters. The following names\n   * are reserved:  events, fileNotifications, $default. Endpoint names must be unique across\n   * endpoint types.\n   */\n  name: string;\n  /**\n   * The subscription identifier of the storage account.\n   */\n  subscriptionId?: string;\n  /**\n   * The name of the resource group of the storage account.\n   */\n  resourceGroup?: string;\n  /**\n   * The name of storage container in the storage account.\n   */\n  containerName: string;\n  /**\n   * File name format for the blob. Default format is\n   * {iothub}/{partition}/{YYYY}/{MM}/{DD}/{HH}/{mm}. All parameters are mandatory but can be\n   * reordered.\n   */\n  fileNameFormat?: string;\n  /**\n   * Time interval at which blobs are written to storage. Value should be between 60 and 720\n   * seconds. Default value is 300 seconds.\n   */\n  batchFrequencyInSeconds?: number;\n  /**\n   * Maximum number of bytes for each blob written to storage. Value should be between\n   * 10485760(10MB) and 524288000(500MB). Default value is 314572800(300MB).\n   */\n  maxChunkSizeInBytes?: number;\n  /**\n   * Encoding that is used to serialize messages to blobs. Supported values are 'avro',\n   * 'avrodeflate', and 'JSON'. Default value is 'avro'. Possible values include: 'Avro',\n   * 'AvroDeflate', 'JSON'\n   */\n  encoding?: Encoding;\n}\n\n/**\n * The properties related to the custom endpoints to which your IoT hub routes messages based on\n * the routing rules. A maximum of 10 custom endpoints are allowed across all endpoint types for\n * paid hubs and only 1 custom endpoint is allowed across all endpoint types for free hubs.\n */\nexport interface RoutingEndpoints {\n  /**\n   * The list of Service Bus queue endpoints that IoT hub routes the messages to, based on the\n   * routing rules.\n   */\n  serviceBusQueues?: RoutingServiceBusQueueEndpointProperties[];\n  /**\n   * The list of Service Bus topic endpoints that the IoT hub routes the messages to, based on the\n   * routing rules.\n   */\n  serviceBusTopics?: RoutingServiceBusTopicEndpointProperties[];\n  /**\n   * The list of Event Hubs endpoints that IoT hub routes messages to, based on the routing rules.\n   * This list does not include the built-in Event Hubs endpoint.\n   */\n  eventHubs?: RoutingEventHubProperties[];\n  /**\n   * The list of storage container endpoints that IoT hub routes messages to, based on the routing\n   * rules.\n   */\n  storageContainers?: RoutingStorageContainerProperties[];\n}\n\n/**\n * The properties of a routing rule that your IoT hub uses to route messages to endpoints.\n */\nexport interface RouteProperties {\n  /**\n   * The name of the route. The name can only include alphanumeric characters, periods,\n   * underscores, hyphens, has a maximum length of 64 characters, and must be unique.\n   */\n  name: string;\n  /**\n   * The source that the routing rule is to be applied to, such as DeviceMessages. Possible values\n   * include: 'Invalid', 'DeviceMessages', 'TwinChangeEvents', 'DeviceLifecycleEvents',\n   * 'DeviceJobLifecycleEvents', 'DigitalTwinChangeEvents'\n   */\n  source: RoutingSource;\n  /**\n   * The condition that is evaluated to apply the routing rule. If no condition is provided, it\n   * evaluates to true by default. For grammar, see:\n   * https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language\n   */\n  condition?: string;\n  /**\n   * The list of endpoints to which messages that satisfy the condition are routed. Currently only\n   * one endpoint is allowed.\n   */\n  endpointNames: string[];\n  /**\n   * Used to specify whether a route is enabled.\n   */\n  isEnabled: boolean;\n}\n\n/**\n * The properties of the fallback route. IoT Hub uses these properties when it routes messages to\n * the fallback endpoint.\n */\nexport interface FallbackRouteProperties {\n  /**\n   * The name of the route. The name can only include alphanumeric characters, periods,\n   * underscores, hyphens, has a maximum length of 64 characters, and must be unique.\n   */\n  name?: string;\n  /**\n   * The condition which is evaluated in order to apply the fallback route. If the condition is not\n   * provided it will evaluate to true by default. For grammar, See:\n   * https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language\n   */\n  condition?: string;\n  /**\n   * The list of endpoints to which the messages that satisfy the condition are routed to.\n   * Currently only 1 endpoint is allowed.\n   */\n  endpointNames: string[];\n  /**\n   * Used to specify whether the fallback route is enabled.\n   */\n  isEnabled: boolean;\n}\n\n/**\n * The properties of an enrichment that your IoT hub applies to messages delivered to endpoints.\n */\nexport interface EnrichmentProperties {\n  /**\n   * The key or name for the enrichment property.\n   */\n  key: string;\n  /**\n   * The value for the enrichment property.\n   */\n  value: string;\n  /**\n   * The list of endpoints for which the enrichment is applied to the message.\n   */\n  endpointNames: string[];\n}\n\n/**\n * The routing related properties of the IoT hub. See:\n * https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging\n */\nexport interface RoutingProperties {\n  endpoints?: RoutingEndpoints;\n  /**\n   * The list of user-provided routing rules that the IoT hub uses to route messages to built-in\n   * and custom endpoints. A maximum of 100 routing rules are allowed for paid hubs and a maximum\n   * of 5 routing rules are allowed for free hubs.\n   */\n  routes?: RouteProperties[];\n  /**\n   * The properties of the route that is used as a fall-back route when none of the conditions\n   * specified in the 'routes' section are met. This is an optional parameter. When this property\n   * is not set, the messages which do not meet any of the conditions specified in the 'routes'\n   * section get routed to the built-in eventhub endpoint.\n   */\n  fallbackRoute?: FallbackRouteProperties;\n  /**\n   * The list of user-provided enrichments that the IoT hub applies to messages to be delivered to\n   * built-in and custom endpoints. See: https://aka.ms/telemetryoneventgrid\n   */\n  enrichments?: EnrichmentProperties[];\n}\n\n/**\n * The properties of the Azure Storage endpoint for file upload.\n */\nexport interface StorageEndpointProperties {\n  /**\n   * The period of time for which the SAS URI generated by IoT Hub for file upload is valid. See:\n   * https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload#file-upload-notification-configuration-options.\n   */\n  sasTtlAsIso8601?: string;\n  /**\n   * The connection string for the Azure Storage account to which files are uploaded.\n   */\n  connectionString: string;\n  /**\n   * The name of the root container where you upload files. The container need not exist but should\n   * be creatable using the connectionString specified.\n   */\n  containerName: string;\n  /**\n   * Specifies authentication type being used for connecting to the storage account. Possible\n   * values include: 'keyBased', 'identityBased'\n   */\n  authenticationType?: AuthenticationType;\n}\n\n/**\n * The properties of the messaging endpoints used by this IoT hub.\n */\nexport interface MessagingEndpointProperties {\n  /**\n   * The lock duration. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload.\n   */\n  lockDurationAsIso8601?: string;\n  /**\n   * The period of time for which a message is available to consume before it is expired by the IoT\n   * hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload.\n   */\n  ttlAsIso8601?: string;\n  /**\n   * The number of times the IoT hub attempts to deliver a message. See:\n   * https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload.\n   */\n  maxDeliveryCount?: number;\n}\n\n/**\n * The properties of the feedback queue for cloud-to-device messages.\n */\nexport interface FeedbackProperties {\n  /**\n   * The lock duration for the feedback queue. See:\n   * https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.\n   */\n  lockDurationAsIso8601?: string;\n  /**\n   * The period of time for which a message is available to consume before it is expired by the IoT\n   * hub. See:\n   * https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.\n   */\n  ttlAsIso8601?: string;\n  /**\n   * The number of times the IoT hub attempts to deliver a message on the feedback queue. See:\n   * https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.\n   */\n  maxDeliveryCount?: number;\n}\n\n/**\n * The IoT hub cloud-to-device messaging properties.\n */\nexport interface CloudToDeviceProperties {\n  /**\n   * The max delivery count for cloud-to-device messages in the device queue. See:\n   * https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.\n   */\n  maxDeliveryCount?: number;\n  /**\n   * The default time to live for cloud-to-device messages in the device queue. See:\n   * https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.\n   */\n  defaultTtlAsIso8601?: string;\n  feedback?: FeedbackProperties;\n}\n\n/**\n * The device streams properties of iothub.\n */\nexport interface IotHubPropertiesDeviceStreams {\n  /**\n   * List of Device Streams Endpoints.\n   */\n  streamingEndpoints?: string[];\n}\n\n/**\n * The properties of the KeyVault key.\n */\nexport interface KeyVaultKeyProperties {\n  /**\n   * The identifier of the key.\n   */\n  keyIdentifier?: string;\n}\n\n/**\n * The encryption properties for the IoT hub.\n */\nexport interface EncryptionPropertiesDescription {\n  /**\n   * The source of the key.\n   */\n  keySource?: string;\n  /**\n   * The properties of the KeyVault key.\n   */\n  keyVaultProperties?: KeyVaultKeyProperties[];\n}\n\n/**\n * Public representation of one of the locations where a resource is provisioned.\n */\nexport interface IotHubLocationDescription {\n  /**\n   * The name of the Azure region\n   */\n  location?: string;\n  /**\n   * The role of the region, can be either primary or secondary. The primary region is where the\n   * IoT hub is currently provisioned. The secondary region is the Azure disaster recovery (DR)\n   * paired region and also the region where the IoT hub can failover to. Possible values include:\n   * 'primary', 'secondary'\n   */\n  role?: IotHubReplicaRoleType;\n}\n\n/**\n * The properties of an IoT hub.\n */\nexport interface IotHubProperties {\n  /**\n   * The shared access policies you can use to secure a connection to the IoT hub.\n   */\n  authorizationPolicies?: SharedAccessSignatureAuthorizationRule[];\n  /**\n   * Whether requests from Public Network are allowed. Possible values include: 'Enabled',\n   * 'Disabled'\n   */\n  publicNetworkAccess?: PublicNetworkAccess;\n  /**\n   * The IP filter rules.\n   */\n  ipFilterRules?: IpFilterRule[];\n  /**\n   * Specifies the minimum TLS version to support for this hub. Can be set to \"1.2\" to have clients\n   * that use a TLS version below 1.2 to be rejected.\n   */\n  minTlsVersion?: string;\n  /**\n   * Private endpoint connections created on this IotHub\n   */\n  privateEndpointConnections?: PrivateEndpointConnection[];\n  /**\n   * The provisioning state.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly provisioningState?: string;\n  /**\n   * The hub state.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly state?: string;\n  /**\n   * The name of the host.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly hostName?: string;\n  /**\n   * The Event Hub-compatible endpoint properties. The only possible keys to this dictionary is\n   * events. This key has to be present in the dictionary while making create or update calls for\n   * the IoT hub.\n   */\n  eventHubEndpoints?: { [propertyName: string]: EventHubProperties };\n  routing?: RoutingProperties;\n  /**\n   * The list of Azure Storage endpoints where you can upload files. Currently you can configure\n   * only one Azure Storage account and that MUST have its key as $default. Specifying more than\n   * one storage account causes an error to be thrown. Not specifying a value for this property\n   * when the enableFileUploadNotifications property is set to True, causes an error to be thrown.\n   */\n  storageEndpoints?: { [propertyName: string]: StorageEndpointProperties };\n  /**\n   * The messaging endpoint properties for the file upload notification queue.\n   */\n  messagingEndpoints?: { [propertyName: string]: MessagingEndpointProperties };\n  /**\n   * If True, file upload notifications are enabled.\n   */\n  enableFileUploadNotifications?: boolean;\n  cloudToDevice?: CloudToDeviceProperties;\n  /**\n   * IoT hub comments.\n   */\n  comments?: string;\n  /**\n   * The device streams properties of iothub.\n   */\n  deviceStreams?: IotHubPropertiesDeviceStreams;\n  /**\n   * The capabilities and features enabled for the IoT hub. Possible values include: 'None',\n   * 'DeviceManagement'\n   */\n  features?: Capabilities;\n  /**\n   * The encryption properties for the IoT hub.\n   */\n  encryption?: EncryptionPropertiesDescription;\n  /**\n   * Primary and secondary location for iot hub\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly locations?: IotHubLocationDescription[];\n}\n\n/**\n * Information about the SKU of the IoT hub.\n */\nexport interface IotHubSkuInfo {\n  /**\n   * The name of the SKU. Possible values include: 'F1', 'S1', 'S2', 'S3', 'B1', 'B2', 'B3'\n   */\n  name: IotHubSku;\n  /**\n   * The billing tier for the IoT hub. Possible values include: 'Free', 'Standard', 'Basic'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly tier?: IotHubSkuTier;\n  /**\n   * The number of provisioned IoT Hub units. See:\n   * https://docs.microsoft.com/azure/azure-subscription-service-limits#iot-hub-limits.\n   */\n  capacity?: number;\n}\n\n/**\n * The properties for a group information object\n */\nexport interface GroupIdInformationProperties {\n  /**\n   * The group id\n   */\n  groupId?: string;\n  /**\n   * The required members for a specific group id\n   */\n  requiredMembers?: string[];\n  /**\n   * The required DNS zones for a specific group id\n   */\n  requiredZoneNames?: string[];\n}\n\n/**\n * The group information for creating a private endpoint on an IotHub\n */\nexport interface GroupIdInformation {\n  /**\n   * The resource identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The resource name.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * The resource type.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly type?: string;\n  properties: GroupIdInformationProperties;\n}\n\n/**\n * The available private link resources for an IotHub\n */\nexport interface PrivateLinkResources {\n  /**\n   * The list of available private link resources for an IotHub\n   */\n  value?: GroupIdInformation[];\n}\n\n/**\n * The common properties of an Azure resource.\n */\nexport interface Resource extends BaseResource {\n  /**\n   * The resource identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The resource name.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * The resource type.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly type?: string;\n  /**\n   * The resource location.\n   */\n  location: string;\n  /**\n   * The resource tags.\n   */\n  tags?: { [propertyName: string]: string };\n}\n\n/**\n * The description of the IoT hub.\n */\nexport interface IotHubDescription extends Resource {\n  /**\n   * The Etag field is *not* required. If it is provided in the response body, it must also be\n   * provided as a header per the normal ETag convention.\n   */\n  etag?: string;\n  /**\n   * IotHub properties\n   */\n  properties?: IotHubProperties;\n  /**\n   * IotHub SKU info\n   */\n  sku: IotHubSkuInfo;\n}\n\n/**\n * The object that represents the operation.\n */\nexport interface OperationDisplay {\n  /**\n   * Service provider: Microsoft Devices\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly provider?: string;\n  /**\n   * Resource Type: IotHubs\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly resource?: string;\n  /**\n   * Name of the operation\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly operation?: string;\n  /**\n   * Description of the operation\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly description?: string;\n}\n\n/**\n * IoT Hub REST API operation\n */\nexport interface Operation {\n  /**\n   * Operation name: {provider}/{resource}/{read | write | action | delete}\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * The object that represents the operation.\n   */\n  display?: OperationDisplay;\n}\n\n/**\n * Error details.\n */\nexport interface ErrorDetails {\n  /**\n   * The error code.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly code?: string;\n  /**\n   * The HTTP status code.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly httpStatusCode?: string;\n  /**\n   * The error message.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly message?: string;\n  /**\n   * The error details.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly details?: string;\n}\n\n/**\n * Quota metrics properties.\n */\nexport interface IotHubQuotaMetricInfo {\n  /**\n   * The name of the quota metric.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * The current value for the quota metric.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly currentValue?: number;\n  /**\n   * The maximum value of the quota metric.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly maxValue?: number;\n}\n\n/**\n * The health data for an endpoint\n */\nexport interface EndpointHealthData {\n  /**\n   * Id of the endpoint\n   */\n  endpointId?: string;\n  /**\n   * Health statuses have following meanings. The 'healthy' status shows that the endpoint is\n   * accepting messages as expected. The 'unhealthy' status shows that the endpoint is not\n   * accepting messages as expected and IoT Hub is retrying to send data to this endpoint. The\n   * status of an unhealthy endpoint will be updated to healthy when IoT Hub has established an\n   * eventually consistent state of health. The 'dead' status shows that the endpoint is not\n   * accepting messages, after IoT Hub retried sending messages for the retrial period. See IoT Hub\n   * metrics to identify errors and monitor issues with endpoints. The 'unknown' status shows that\n   * the IoT Hub has not established a connection with the endpoint. No messages have been\n   * delivered to or rejected from this endpoint. Possible values include: 'unknown', 'healthy',\n   * 'degraded', 'unhealthy', 'dead'\n   */\n  healthStatus?: EndpointHealthStatus;\n  /**\n   * Last error obtained when a message failed to be delivered to iot hub\n   */\n  lastKnownError?: string;\n  /**\n   * Time at which the last known error occurred\n   */\n  lastKnownErrorTime?: Date;\n  /**\n   * Last time iot hub successfully sent a message to the endpoint\n   */\n  lastSuccessfulSendAttemptTime?: Date;\n  /**\n   * Last time iot hub tried to send a message to the endpoint\n   */\n  lastSendAttemptTime?: Date;\n}\n\n/**\n * Identity registry statistics.\n */\nexport interface RegistryStatistics {\n  /**\n   * The total count of devices in the identity registry.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly totalDeviceCount?: number;\n  /**\n   * The count of enabled devices in the identity registry.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly enabledDeviceCount?: number;\n  /**\n   * The count of disabled devices in the identity registry.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly disabledDeviceCount?: number;\n}\n\n/**\n * The properties of the Job Response object.\n */\nexport interface JobResponse {\n  /**\n   * The job identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly jobId?: string;\n  /**\n   * The start time of the job.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly startTimeUtc?: Date;\n  /**\n   * The time the job stopped processing.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly endTimeUtc?: Date;\n  /**\n   * The type of the job. Possible values include: 'unknown', 'export', 'import', 'backup',\n   * 'readDeviceProperties', 'writeDeviceProperties', 'updateDeviceConfiguration', 'rebootDevice',\n   * 'factoryResetDevice', 'firmwareUpdate'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly type?: JobType;\n  /**\n   * The status of the job. Possible values include: 'unknown', 'enqueued', 'running', 'completed',\n   * 'failed', 'cancelled'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly status?: JobStatus;\n  /**\n   * If status == failed, this string containing the reason for the failure.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly failureReason?: string;\n  /**\n   * The status message for the job.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly statusMessage?: string;\n  /**\n   * The job identifier of the parent job, if any.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly parentJobId?: string;\n}\n\n/**\n * IoT Hub capacity information.\n */\nexport interface IotHubCapacity {\n  /**\n   * The minimum number of units.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly minimum?: number;\n  /**\n   * The maximum number of units.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly maximum?: number;\n  /**\n   * The default number of units.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly default?: number;\n  /**\n   * The type of the scaling enabled. Possible values include: 'Automatic', 'Manual', 'None'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly scaleType?: IotHubScaleType;\n}\n\n/**\n * SKU properties.\n */\nexport interface IotHubSkuDescription {\n  /**\n   * The type of the resource.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly resourceType?: string;\n  /**\n   * The type of the resource.\n   */\n  sku: IotHubSkuInfo;\n  /**\n   * IotHub capacity\n   */\n  capacity: IotHubCapacity;\n}\n\n/**\n * A container holding only the Tags for a resource, allowing the user to update the tags on an IoT\n * Hub instance.\n */\nexport interface TagsResource {\n  /**\n   * Resource tags\n   */\n  tags?: { [propertyName: string]: string };\n}\n\n/**\n * The properties of the EventHubConsumerGroupInfo object.\n */\nexport interface EventHubConsumerGroupInfo extends BaseResource {\n  /**\n   * The tags.\n   */\n  properties?: { [propertyName: string]: string };\n  /**\n   * The Event Hub-compatible consumer group identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The Event Hub-compatible consumer group name.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * the resource type.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly type?: string;\n  /**\n   * The etag.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly etag?: string;\n}\n\n/**\n * The EventHub consumer group name.\n */\nexport interface EventHubConsumerGroupName {\n  /**\n   * EventHub consumer group name\n   */\n  name?: string;\n}\n\n/**\n * The EventHub consumer group.\n */\nexport interface EventHubConsumerGroupBodyDescription {\n  properties?: EventHubConsumerGroupName;\n}\n\n/**\n * Input values.\n */\nexport interface OperationInputs {\n  /**\n   * The name of the IoT hub to check.\n   */\n  name: string;\n}\n\n/**\n * The properties indicating whether a given IoT hub name is available.\n */\nexport interface IotHubNameAvailabilityInfo {\n  /**\n   * The value which indicates whether the provided name is available.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly nameAvailable?: boolean;\n  /**\n   * The reason for unavailability. Possible values include: 'Invalid', 'AlreadyExists'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly reason?: IotHubNameUnavailabilityReason;\n  /**\n   * The detailed reason message.\n   */\n  message?: string;\n}\n\n/**\n * Name of Iot Hub type\n */\nexport interface Name {\n  /**\n   * IotHub type\n   */\n  value?: string;\n  /**\n   * Localized value of name\n   */\n  localizedValue?: string;\n}\n\n/**\n * User subscription quota response\n */\nexport interface UserSubscriptionQuota {\n  /**\n   * IotHub type id\n   */\n  id?: string;\n  /**\n   * Response type\n   */\n  type?: string;\n  /**\n   * Unit of IotHub type\n   */\n  unit?: string;\n  /**\n   * Current number of IotHub type\n   */\n  currentValue?: number;\n  /**\n   * Numerical limit on IotHub type\n   */\n  limit?: number;\n  /**\n   * IotHub type\n   */\n  name?: Name;\n}\n\n/**\n * Json-serialized array of User subscription quota response\n */\nexport interface UserSubscriptionQuotaListResult {\n  value?: UserSubscriptionQuota[];\n  /**\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly nextLink?: string;\n}\n\n/**\n * Routing message\n */\nexport interface RoutingMessage {\n  /**\n   * Body of routing message\n   */\n  body?: string;\n  /**\n   * App properties\n   */\n  appProperties?: { [propertyName: string]: string };\n  /**\n   * System properties\n   */\n  systemProperties?: { [propertyName: string]: string };\n}\n\n/**\n * An interface representing RoutingTwinProperties.\n */\nexport interface RoutingTwinProperties {\n  /**\n   * Twin desired properties\n   */\n  desired?: any;\n  /**\n   * Twin desired properties\n   */\n  reported?: any;\n}\n\n/**\n * Twin reference input parameter. This is an optional parameter\n */\nexport interface RoutingTwin {\n  /**\n   * Twin Tags\n   */\n  tags?: any;\n  properties?: RoutingTwinProperties;\n}\n\n/**\n * Input for testing all routes\n */\nexport interface TestAllRoutesInput {\n  /**\n   * Routing source. Possible values include: 'Invalid', 'DeviceMessages', 'TwinChangeEvents',\n   * 'DeviceLifecycleEvents', 'DeviceJobLifecycleEvents', 'DigitalTwinChangeEvents'\n   */\n  routingSource?: RoutingSource;\n  /**\n   * Routing message\n   */\n  message?: RoutingMessage;\n  /**\n   * Routing Twin Reference\n   */\n  twin?: RoutingTwin;\n}\n\n/**\n * Routes that matched\n */\nexport interface MatchedRoute {\n  /**\n   * Properties of routes that matched\n   */\n  properties?: RouteProperties;\n}\n\n/**\n * Result of testing all routes\n */\nexport interface TestAllRoutesResult {\n  /**\n   * JSON-serialized array of matched routes\n   */\n  routes?: MatchedRoute[];\n}\n\n/**\n * Input for testing route\n */\nexport interface TestRouteInput {\n  /**\n   * Routing message\n   */\n  message?: RoutingMessage;\n  /**\n   * Route properties\n   */\n  route: RouteProperties;\n  /**\n   * Routing Twin Reference\n   */\n  twin?: RoutingTwin;\n}\n\n/**\n * Position where the route error happened\n */\nexport interface RouteErrorPosition {\n  /**\n   * Line where the route error happened\n   */\n  line?: number;\n  /**\n   * Column where the route error happened\n   */\n  column?: number;\n}\n\n/**\n * Range of route errors\n */\nexport interface RouteErrorRange {\n  /**\n   * Start where the route error happened\n   */\n  start?: RouteErrorPosition;\n  /**\n   * End where the route error happened\n   */\n  end?: RouteErrorPosition;\n}\n\n/**\n * Compilation error when evaluating route\n */\nexport interface RouteCompilationError {\n  /**\n   * Route error message\n   */\n  message?: string;\n  /**\n   * Severity of the route error. Possible values include: 'error', 'warning'\n   */\n  severity?: RouteErrorSeverity;\n  /**\n   * Location where the route error happened\n   */\n  location?: RouteErrorRange;\n}\n\n/**\n * Detailed result of testing a route\n */\nexport interface TestRouteResultDetails {\n  /**\n   * JSON-serialized list of route compilation errors\n   */\n  compilationErrors?: RouteCompilationError[];\n}\n\n/**\n * Result of testing one route\n */\nexport interface TestRouteResult {\n  /**\n   * Result of testing route. Possible values include: 'undefined', 'false', 'true'\n   */\n  result?: TestResultStatus;\n  /**\n   * Detailed result of testing route\n   */\n  details?: TestRouteResultDetails;\n}\n\n/**\n * Use to provide parameters when requesting an export of all devices in the IoT hub.\n */\nexport interface ExportDevicesRequest {\n  /**\n   * The export blob container URI.\n   */\n  exportBlobContainerUri: string;\n  /**\n   * The value indicating whether keys should be excluded during export.\n   */\n  excludeKeys: boolean;\n  /**\n   * The name of the blob that will be created in the provided output blob container. This blob\n   * will contain the exported device registry information for the IoT Hub.\n   */\n  exportBlobName?: string;\n  /**\n   * Specifies authentication type being used for connecting to the storage account. Possible\n   * values include: 'keyBased', 'identityBased'\n   */\n  authenticationType?: AuthenticationType;\n}\n\n/**\n * Use to provide parameters when requesting an import of all devices in the hub.\n */\nexport interface ImportDevicesRequest {\n  /**\n   * The input blob container URI.\n   */\n  inputBlobContainerUri: string;\n  /**\n   * The output blob container URI.\n   */\n  outputBlobContainerUri: string;\n  /**\n   * The blob name to be used when importing from the provided input blob container.\n   */\n  inputBlobName?: string;\n  /**\n   * The blob name to use for storing the status of the import job.\n   */\n  outputBlobName?: string;\n  /**\n   * Specifies authentication type being used for connecting to the storage account. Possible\n   * values include: 'keyBased', 'identityBased'\n   */\n  authenticationType?: AuthenticationType;\n}\n\n/**\n * Use to provide failover region when requesting manual Failover for a hub.\n */\nexport interface FailoverInput {\n  /**\n   * Region the hub will be failed over to\n   */\n  failoverRegion: string;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface IotHubResourceCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * ETag of the IoT Hub. Do not specify for creating a brand new IoT Hub. Required to update an\n   * existing IoT Hub.\n   */\n  ifMatch?: string;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface IotHubResourceUpdateOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * Resource tags\n   */\n  tags?: { [propertyName: string]: string };\n}\n\n/**\n * Optional Parameters.\n */\nexport interface IotHubResourceCreateEventHubConsumerGroupOptionalParams extends msRest.RequestOptionsBase {\n  properties?: EventHubConsumerGroupName;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface IotHubResourceBeginCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * ETag of the IoT Hub. Do not specify for creating a brand new IoT Hub. Required to update an\n   * existing IoT Hub.\n   */\n  ifMatch?: string;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface IotHubResourceBeginUpdateOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * Resource tags\n   */\n  tags?: { [propertyName: string]: string };\n}\n\n/**\n * Optional Parameters.\n */\nexport interface CertificatesCreateOrUpdateOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * ETag of the Certificate. Do not specify for creating a brand new certificate. Required to\n   * update an existing certificate.\n   */\n  ifMatch?: string;\n  properties?: CertificateProperties;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface CertificatesVerifyOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * base-64 representation of X509 certificate .cer file or just .pem file content.\n   */\n  certificate?: string;\n}\n\n/**\n * An interface representing IotHubClientOptions.\n */\nexport interface IotHubClientOptions extends AzureServiceClientOptions {\n  baseUri?: string;\n}\n\n/**\n * @interface\n * Result of the request to list IoT Hub operations. It contains a list of operations and a URL\n * link to get the next set of results.\n * @extends Array<Operation>\n */\nexport interface OperationListResult extends Array<Operation> {\n  /**\n   * URL to get the next set of operation list results if there are any.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly nextLink?: string;\n}\n\n/**\n * @interface\n * The JSON-serialized array of IotHubDescription objects with a next link.\n * @extends Array<IotHubDescription>\n */\nexport interface IotHubDescriptionListResult extends Array<IotHubDescription> {\n  /**\n   * The next link.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly nextLink?: string;\n}\n\n/**\n * @interface\n * The JSON-serialized array of IotHubSkuDescription objects with a next link.\n * @extends Array<IotHubSkuDescription>\n */\nexport interface IotHubSkuDescriptionListResult extends Array<IotHubSkuDescription> {\n  /**\n   * The next link.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly nextLink?: string;\n}\n\n/**\n * @interface\n * The JSON-serialized array of Event Hub-compatible consumer group names with a next link.\n * @extends Array<EventHubConsumerGroupInfo>\n */\nexport interface EventHubConsumerGroupsListResult extends Array<EventHubConsumerGroupInfo> {\n  /**\n   * The next link.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly nextLink?: string;\n}\n\n/**\n * @interface\n * The JSON-serialized array of JobResponse objects with a next link.\n * @extends Array<JobResponse>\n */\nexport interface JobResponseListResult extends Array<JobResponse> {\n  /**\n   * The next link.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly nextLink?: string;\n}\n\n/**\n * @interface\n * The JSON-serialized array of IotHubQuotaMetricInfo objects with a next link.\n * @extends Array<IotHubQuotaMetricInfo>\n */\nexport interface IotHubQuotaMetricInfoListResult extends Array<IotHubQuotaMetricInfo> {\n  /**\n   * The next link.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly nextLink?: string;\n}\n\n/**\n * @interface\n * The JSON-serialized array of EndpointHealthData objects with a next link.\n * @extends Array<EndpointHealthData>\n */\nexport interface EndpointHealthDataListResult extends Array<EndpointHealthData> {\n  /**\n   * Link to more results\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly nextLink?: string;\n}\n\n/**\n * @interface\n * The list of shared access policies with a next link.\n * @extends Array<SharedAccessSignatureAuthorizationRule>\n */\nexport interface SharedAccessSignatureAuthorizationRuleListResult extends Array<SharedAccessSignatureAuthorizationRule> {\n  /**\n   * The next link.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly nextLink?: string;\n}\n\n/**\n * Defines values for AccessRights.\n * Possible values include: 'RegistryRead', 'RegistryWrite', 'ServiceConnect', 'DeviceConnect',\n * 'RegistryRead, RegistryWrite', 'RegistryRead, ServiceConnect', 'RegistryRead, DeviceConnect',\n * 'RegistryWrite, ServiceConnect', 'RegistryWrite, DeviceConnect', 'ServiceConnect,\n * DeviceConnect', 'RegistryRead, RegistryWrite, ServiceConnect', 'RegistryRead, RegistryWrite,\n * DeviceConnect', 'RegistryRead, ServiceConnect, DeviceConnect', 'RegistryWrite, ServiceConnect,\n * DeviceConnect', 'RegistryRead, RegistryWrite, ServiceConnect, DeviceConnect'\n * @readonly\n * @enum {string}\n */\nexport type AccessRights = 'RegistryRead' | 'RegistryWrite' | 'ServiceConnect' | 'DeviceConnect' | 'RegistryRead, RegistryWrite' | 'RegistryRead, ServiceConnect' | 'RegistryRead, DeviceConnect' | 'RegistryWrite, ServiceConnect' | 'RegistryWrite, DeviceConnect' | 'ServiceConnect, DeviceConnect' | 'RegistryRead, RegistryWrite, ServiceConnect' | 'RegistryRead, RegistryWrite, DeviceConnect' | 'RegistryRead, ServiceConnect, DeviceConnect' | 'RegistryWrite, ServiceConnect, DeviceConnect' | 'RegistryRead, RegistryWrite, ServiceConnect, DeviceConnect';\n\n/**\n * Defines values for PublicNetworkAccess.\n * Possible values include: 'Enabled', 'Disabled'\n * @readonly\n * @enum {string}\n */\nexport type PublicNetworkAccess = 'Enabled' | 'Disabled';\n\n/**\n * Defines values for IpFilterActionType.\n * Possible values include: 'Accept', 'Reject'\n * @readonly\n * @enum {string}\n */\nexport type IpFilterActionType = 'Accept' | 'Reject';\n\n/**\n * Defines values for PrivateLinkServiceConnectionStatus.\n * Possible values include: 'Pending', 'Approved', 'Rejected', 'Disconnected'\n * @readonly\n * @enum {string}\n */\nexport type PrivateLinkServiceConnectionStatus = 'Pending' | 'Approved' | 'Rejected' | 'Disconnected';\n\n/**\n * Defines values for AuthenticationType.\n * Possible values include: 'keyBased', 'identityBased'\n * @readonly\n * @enum {string}\n */\nexport type AuthenticationType = 'keyBased' | 'identityBased';\n\n/**\n * Defines values for RoutingSource.\n * Possible values include: 'Invalid', 'DeviceMessages', 'TwinChangeEvents',\n * 'DeviceLifecycleEvents', 'DeviceJobLifecycleEvents', 'DigitalTwinChangeEvents'\n * @readonly\n * @enum {string}\n */\nexport type RoutingSource = 'Invalid' | 'DeviceMessages' | 'TwinChangeEvents' | 'DeviceLifecycleEvents' | 'DeviceJobLifecycleEvents' | 'DigitalTwinChangeEvents';\n\n/**\n * Defines values for Capabilities.\n * Possible values include: 'None', 'DeviceManagement'\n * @readonly\n * @enum {string}\n */\nexport type Capabilities = 'None' | 'DeviceManagement';\n\n/**\n * Defines values for IotHubReplicaRoleType.\n * Possible values include: 'primary', 'secondary'\n * @readonly\n * @enum {string}\n */\nexport type IotHubReplicaRoleType = 'primary' | 'secondary';\n\n/**\n * Defines values for IotHubSku.\n * Possible values include: 'F1', 'S1', 'S2', 'S3', 'B1', 'B2', 'B3'\n * @readonly\n * @enum {string}\n */\nexport type IotHubSku = 'F1' | 'S1' | 'S2' | 'S3' | 'B1' | 'B2' | 'B3';\n\n/**\n * Defines values for IotHubSkuTier.\n * Possible values include: 'Free', 'Standard', 'Basic'\n * @readonly\n * @enum {string}\n */\nexport type IotHubSkuTier = 'Free' | 'Standard' | 'Basic';\n\n/**\n * Defines values for EndpointHealthStatus.\n * Possible values include: 'unknown', 'healthy', 'degraded', 'unhealthy', 'dead'\n * @readonly\n * @enum {string}\n */\nexport type EndpointHealthStatus = 'unknown' | 'healthy' | 'degraded' | 'unhealthy' | 'dead';\n\n/**\n * Defines values for JobType.\n * Possible values include: 'unknown', 'export', 'import', 'backup', 'readDeviceProperties',\n * 'writeDeviceProperties', 'updateDeviceConfiguration', 'rebootDevice', 'factoryResetDevice',\n * 'firmwareUpdate'\n * @readonly\n * @enum {string}\n */\nexport type JobType = 'unknown' | 'export' | 'import' | 'backup' | 'readDeviceProperties' | 'writeDeviceProperties' | 'updateDeviceConfiguration' | 'rebootDevice' | 'factoryResetDevice' | 'firmwareUpdate';\n\n/**\n * Defines values for JobStatus.\n * Possible values include: 'unknown', 'enqueued', 'running', 'completed', 'failed', 'cancelled'\n * @readonly\n * @enum {string}\n */\nexport type JobStatus = 'unknown' | 'enqueued' | 'running' | 'completed' | 'failed' | 'cancelled';\n\n/**\n * Defines values for IotHubScaleType.\n * Possible values include: 'Automatic', 'Manual', 'None'\n * @readonly\n * @enum {string}\n */\nexport type IotHubScaleType = 'Automatic' | 'Manual' | 'None';\n\n/**\n * Defines values for IotHubNameUnavailabilityReason.\n * Possible values include: 'Invalid', 'AlreadyExists'\n * @readonly\n * @enum {string}\n */\nexport type IotHubNameUnavailabilityReason = 'Invalid' | 'AlreadyExists';\n\n/**\n * Defines values for TestResultStatus.\n * Possible values include: 'undefined', 'false', 'true'\n * @readonly\n * @enum {string}\n */\nexport type TestResultStatus = 'undefined' | 'false' | 'true';\n\n/**\n * Defines values for RouteErrorSeverity.\n * Possible values include: 'error', 'warning'\n * @readonly\n * @enum {string}\n */\nexport type RouteErrorSeverity = 'error' | 'warning';\n\n/**\n * Defines values for Encoding.\n * Possible values include: 'Avro', 'AvroDeflate', 'JSON'\n * @readonly\n * @enum {string}\n */\nexport type Encoding = 'Avro' | 'AvroDeflate' | 'JSON';\n\n/**\n * Contains response data for the list operation.\n */\nexport type OperationsListResponse = OperationListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: OperationListResult;\n    };\n};\n\n/**\n * Contains response data for the listNext operation.\n */\nexport type OperationsListNextResponse = OperationListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: OperationListResult;\n    };\n};\n\n/**\n * Contains response data for the get operation.\n */\nexport type IotHubResourceGetResponse = IotHubDescription & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: IotHubDescription;\n    };\n};\n\n/**\n * Contains response data for the createOrUpdate operation.\n */\nexport type IotHubResourceCreateOrUpdateResponse = IotHubDescription & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: IotHubDescription;\n    };\n};\n\n/**\n * Contains response data for the update operation.\n */\nexport type IotHubResourceUpdateResponse = IotHubDescription & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: IotHubDescription;\n    };\n};\n\n/**\n * Contains response data for the deleteMethod operation.\n */\nexport type IotHubResourceDeleteMethodResponse = {\n  /**\n   * The parsed response body.\n   */\n  body: any;\n\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: any;\n    };\n};\n\n/**\n * Contains response data for the listBySubscription operation.\n */\nexport type IotHubResourceListBySubscriptionResponse = IotHubDescriptionListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: IotHubDescriptionListResult;\n    };\n};\n\n/**\n * Contains response data for the listByResourceGroup operation.\n */\nexport type IotHubResourceListByResourceGroupResponse = IotHubDescriptionListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: IotHubDescriptionListResult;\n    };\n};\n\n/**\n * Contains response data for the getStats operation.\n */\nexport type IotHubResourceGetStatsResponse = RegistryStatistics & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: RegistryStatistics;\n    };\n};\n\n/**\n * Contains response data for the getValidSkus operation.\n */\nexport type IotHubResourceGetValidSkusResponse = IotHubSkuDescriptionListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: IotHubSkuDescriptionListResult;\n    };\n};\n\n/**\n * Contains response data for the listEventHubConsumerGroups operation.\n */\nexport type IotHubResourceListEventHubConsumerGroupsResponse = EventHubConsumerGroupsListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: EventHubConsumerGroupsListResult;\n    };\n};\n\n/**\n * Contains response data for the getEventHubConsumerGroup operation.\n */\nexport type IotHubResourceGetEventHubConsumerGroupResponse = EventHubConsumerGroupInfo & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: EventHubConsumerGroupInfo;\n    };\n};\n\n/**\n * Contains response data for the createEventHubConsumerGroup operation.\n */\nexport type IotHubResourceCreateEventHubConsumerGroupResponse = EventHubConsumerGroupInfo & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: EventHubConsumerGroupInfo;\n    };\n};\n\n/**\n * Contains response data for the listJobs operation.\n */\nexport type IotHubResourceListJobsResponse = JobResponseListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: JobResponseListResult;\n    };\n};\n\n/**\n * Contains response data for the getJob operation.\n */\nexport type IotHubResourceGetJobResponse = JobResponse & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: JobResponse;\n    };\n};\n\n/**\n * Contains response data for the getQuotaMetrics operation.\n */\nexport type IotHubResourceGetQuotaMetricsResponse = IotHubQuotaMetricInfoListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: IotHubQuotaMetricInfoListResult;\n    };\n};\n\n/**\n * Contains response data for the getEndpointHealth operation.\n */\nexport type IotHubResourceGetEndpointHealthResponse = EndpointHealthDataListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: EndpointHealthDataListResult;\n    };\n};\n\n/**\n * Contains response data for the checkNameAvailability operation.\n */\nexport type IotHubResourceCheckNameAvailabilityResponse = IotHubNameAvailabilityInfo & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: IotHubNameAvailabilityInfo;\n    };\n};\n\n/**\n * Contains response data for the testAllRoutes operation.\n */\nexport type IotHubResourceTestAllRoutesResponse = TestAllRoutesResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: TestAllRoutesResult;\n    };\n};\n\n/**\n * Contains response data for the testRoute operation.\n */\nexport type IotHubResourceTestRouteResponse = TestRouteResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: TestRouteResult;\n    };\n};\n\n/**\n * Contains response data for the listKeys operation.\n */\nexport type IotHubResourceListKeysResponse = SharedAccessSignatureAuthorizationRuleListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: SharedAccessSignatureAuthorizationRuleListResult;\n    };\n};\n\n/**\n * Contains response data for the getKeysForKeyName operation.\n */\nexport type IotHubResourceGetKeysForKeyNameResponse = SharedAccessSignatureAuthorizationRule & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: SharedAccessSignatureAuthorizationRule;\n    };\n};\n\n/**\n * Contains response data for the exportDevices operation.\n */\nexport type IotHubResourceExportDevicesResponse = JobResponse & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: JobResponse;\n    };\n};\n\n/**\n * Contains response data for the importDevices operation.\n */\nexport type IotHubResourceImportDevicesResponse = JobResponse & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: JobResponse;\n    };\n};\n\n/**\n * Contains response data for the beginCreateOrUpdate operation.\n */\nexport type IotHubResourceBeginCreateOrUpdateResponse = IotHubDescription & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: IotHubDescription;\n    };\n};\n\n/**\n * Contains response data for the beginUpdate operation.\n */\nexport type IotHubResourceBeginUpdateResponse = IotHubDescription & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: IotHubDescription;\n    };\n};\n\n/**\n * Contains response data for the beginDeleteMethod operation.\n */\nexport type IotHubResourceBeginDeleteMethodResponse = {\n  /**\n   * The parsed response body.\n   */\n  body: any;\n\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: any;\n    };\n};\n\n/**\n * Contains response data for the listBySubscriptionNext operation.\n */\nexport type IotHubResourceListBySubscriptionNextResponse = IotHubDescriptionListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: IotHubDescriptionListResult;\n    };\n};\n\n/**\n * Contains response data for the listByResourceGroupNext operation.\n */\nexport type IotHubResourceListByResourceGroupNextResponse = IotHubDescriptionListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: IotHubDescriptionListResult;\n    };\n};\n\n/**\n * Contains response data for the getValidSkusNext operation.\n */\nexport type IotHubResourceGetValidSkusNextResponse = IotHubSkuDescriptionListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: IotHubSkuDescriptionListResult;\n    };\n};\n\n/**\n * Contains response data for the listEventHubConsumerGroupsNext operation.\n */\nexport type IotHubResourceListEventHubConsumerGroupsNextResponse = EventHubConsumerGroupsListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: EventHubConsumerGroupsListResult;\n    };\n};\n\n/**\n * Contains response data for the listJobsNext operation.\n */\nexport type IotHubResourceListJobsNextResponse = JobResponseListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: JobResponseListResult;\n    };\n};\n\n/**\n * Contains response data for the getQuotaMetricsNext operation.\n */\nexport type IotHubResourceGetQuotaMetricsNextResponse = IotHubQuotaMetricInfoListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: IotHubQuotaMetricInfoListResult;\n    };\n};\n\n/**\n * Contains response data for the getEndpointHealthNext operation.\n */\nexport type IotHubResourceGetEndpointHealthNextResponse = EndpointHealthDataListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: EndpointHealthDataListResult;\n    };\n};\n\n/**\n * Contains response data for the listKeysNext operation.\n */\nexport type IotHubResourceListKeysNextResponse = SharedAccessSignatureAuthorizationRuleListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: SharedAccessSignatureAuthorizationRuleListResult;\n    };\n};\n\n/**\n * Contains response data for the getSubscriptionQuota operation.\n */\nexport type ResourceProviderCommonGetSubscriptionQuotaResponse = UserSubscriptionQuotaListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: UserSubscriptionQuotaListResult;\n    };\n};\n\n/**\n * Contains response data for the listByIotHub operation.\n */\nexport type CertificatesListByIotHubResponse = CertificateListDescription & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: CertificateListDescription;\n    };\n};\n\n/**\n * Contains response data for the get operation.\n */\nexport type CertificatesGetResponse = CertificateDescription & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: CertificateDescription;\n    };\n};\n\n/**\n * Contains response data for the createOrUpdate operation.\n */\nexport type CertificatesCreateOrUpdateResponse = CertificateDescription & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: CertificateDescription;\n    };\n};\n\n/**\n * Contains response data for the generateVerificationCode operation.\n */\nexport type CertificatesGenerateVerificationCodeResponse = CertificateWithNonceDescription & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: CertificateWithNonceDescription;\n    };\n};\n\n/**\n * Contains response data for the verify operation.\n */\nexport type CertificatesVerifyResponse = CertificateDescription & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: CertificateDescription;\n    };\n};\n\n/**\n * Contains response data for the list operation.\n */\nexport type PrivateLinkResourcesListResponse = PrivateLinkResources & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: PrivateLinkResources;\n    };\n};\n\n/**\n * Contains response data for the get operation.\n */\nexport type PrivateLinkResourcesGetResponse = GroupIdInformation & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: GroupIdInformation;\n    };\n};\n\n/**\n * Contains response data for the list operation.\n */\nexport type PrivateEndpointConnectionsListResponse = Array<PrivateEndpointConnection> & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: PrivateEndpointConnection[];\n    };\n};\n\n/**\n * Contains response data for the get operation.\n */\nexport type PrivateEndpointConnectionsGetResponse = PrivateEndpointConnection & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: PrivateEndpointConnection;\n    };\n};\n\n/**\n * Contains response data for the update operation.\n */\nexport type PrivateEndpointConnectionsUpdateResponse = PrivateEndpointConnection & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: PrivateEndpointConnection;\n    };\n};\n\n/**\n * Contains response data for the deleteMethod operation.\n */\nexport type PrivateEndpointConnectionsDeleteMethodResponse = PrivateEndpointConnection & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: PrivateEndpointConnection;\n    };\n};\n\n/**\n * Contains response data for the beginUpdate operation.\n */\nexport type PrivateEndpointConnectionsBeginUpdateResponse = PrivateEndpointConnection & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: PrivateEndpointConnection;\n    };\n};\n\n/**\n * Contains response data for the beginDeleteMethod operation.\n */\nexport type PrivateEndpointConnectionsBeginDeleteMethodResponse = PrivateEndpointConnection & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: PrivateEndpointConnection;\n    };\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { CloudErrorMapper, BaseResourceMapper } from \"@azure/ms-rest-azure-js\";\nimport * as msRest from \"@azure/ms-rest-js\";\n\nexport const CloudError = CloudErrorMapper;\nexport const BaseResource = BaseResourceMapper;\n\nexport const CertificateVerificationDescription: msRest.CompositeMapper = {\n  serializedName: \"CertificateVerificationDescription\",\n  type: {\n    name: \"Composite\",\n    className: \"CertificateVerificationDescription\",\n    modelProperties: {\n      certificate: {\n        serializedName: \"certificate\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CertificateProperties: msRest.CompositeMapper = {\n  serializedName: \"CertificateProperties\",\n  type: {\n    name: \"Composite\",\n    className: \"CertificateProperties\",\n    modelProperties: {\n      subject: {\n        readOnly: true,\n        serializedName: \"subject\",\n        type: {\n          name: \"String\"\n        }\n      },\n      expiry: {\n        readOnly: true,\n        serializedName: \"expiry\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      thumbprint: {\n        readOnly: true,\n        serializedName: \"thumbprint\",\n        type: {\n          name: \"String\"\n        }\n      },\n      isVerified: {\n        readOnly: true,\n        serializedName: \"isVerified\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      created: {\n        readOnly: true,\n        serializedName: \"created\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      updated: {\n        readOnly: true,\n        serializedName: \"updated\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      certificate: {\n        serializedName: \"certificate\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CertificateDescription: msRest.CompositeMapper = {\n  serializedName: \"CertificateDescription\",\n  type: {\n    name: \"Composite\",\n    className: \"CertificateDescription\",\n    modelProperties: {\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"CertificateProperties\"\n        }\n      },\n      id: {\n        readOnly: true,\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        readOnly: true,\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      etag: {\n        readOnly: true,\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        readOnly: true,\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CertificateListDescription: msRest.CompositeMapper = {\n  serializedName: \"CertificateListDescription\",\n  type: {\n    name: \"Composite\",\n    className: \"CertificateListDescription\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"CertificateDescription\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const CertificateBodyDescription: msRest.CompositeMapper = {\n  serializedName: \"CertificateBodyDescription\",\n  type: {\n    name: \"Composite\",\n    className: \"CertificateBodyDescription\",\n    modelProperties: {\n      certificate: {\n        serializedName: \"certificate\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CertificatePropertiesWithNonce: msRest.CompositeMapper = {\n  serializedName: \"CertificatePropertiesWithNonce\",\n  type: {\n    name: \"Composite\",\n    className: \"CertificatePropertiesWithNonce\",\n    modelProperties: {\n      subject: {\n        readOnly: true,\n        serializedName: \"subject\",\n        type: {\n          name: \"String\"\n        }\n      },\n      expiry: {\n        readOnly: true,\n        serializedName: \"expiry\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      thumbprint: {\n        readOnly: true,\n        serializedName: \"thumbprint\",\n        type: {\n          name: \"String\"\n        }\n      },\n      isVerified: {\n        readOnly: true,\n        serializedName: \"isVerified\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      created: {\n        readOnly: true,\n        serializedName: \"created\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      updated: {\n        readOnly: true,\n        serializedName: \"updated\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      verificationCode: {\n        readOnly: true,\n        serializedName: \"verificationCode\",\n        type: {\n          name: \"String\"\n        }\n      },\n      certificate: {\n        readOnly: true,\n        serializedName: \"certificate\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CertificateWithNonceDescription: msRest.CompositeMapper = {\n  serializedName: \"CertificateWithNonceDescription\",\n  type: {\n    name: \"Composite\",\n    className: \"CertificateWithNonceDescription\",\n    modelProperties: {\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"CertificatePropertiesWithNonce\"\n        }\n      },\n      id: {\n        readOnly: true,\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        readOnly: true,\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      etag: {\n        readOnly: true,\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        readOnly: true,\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SharedAccessSignatureAuthorizationRule: msRest.CompositeMapper = {\n  serializedName: \"SharedAccessSignatureAuthorizationRule\",\n  type: {\n    name: \"Composite\",\n    className: \"SharedAccessSignatureAuthorizationRule\",\n    modelProperties: {\n      keyName: {\n        required: true,\n        serializedName: \"keyName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      primaryKey: {\n        serializedName: \"primaryKey\",\n        type: {\n          name: \"String\"\n        }\n      },\n      secondaryKey: {\n        serializedName: \"secondaryKey\",\n        type: {\n          name: \"String\"\n        }\n      },\n      rights: {\n        required: true,\n        serializedName: \"rights\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"RegistryRead\",\n            \"RegistryWrite\",\n            \"ServiceConnect\",\n            \"DeviceConnect\",\n            \"RegistryRead, RegistryWrite\",\n            \"RegistryRead, ServiceConnect\",\n            \"RegistryRead, DeviceConnect\",\n            \"RegistryWrite, ServiceConnect\",\n            \"RegistryWrite, DeviceConnect\",\n            \"ServiceConnect, DeviceConnect\",\n            \"RegistryRead, RegistryWrite, ServiceConnect\",\n            \"RegistryRead, RegistryWrite, DeviceConnect\",\n            \"RegistryRead, ServiceConnect, DeviceConnect\",\n            \"RegistryWrite, ServiceConnect, DeviceConnect\",\n            \"RegistryRead, RegistryWrite, ServiceConnect, DeviceConnect\"\n          ]\n        }\n      }\n    }\n  }\n};\n\nexport const IpFilterRule: msRest.CompositeMapper = {\n  serializedName: \"IpFilterRule\",\n  type: {\n    name: \"Composite\",\n    className: \"IpFilterRule\",\n    modelProperties: {\n      filterName: {\n        required: true,\n        serializedName: \"filterName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      action: {\n        required: true,\n        serializedName: \"action\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"Accept\",\n            \"Reject\"\n          ]\n        }\n      },\n      ipMask: {\n        required: true,\n        serializedName: \"ipMask\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PrivateEndpoint: msRest.CompositeMapper = {\n  serializedName: \"PrivateEndpoint\",\n  type: {\n    name: \"Composite\",\n    className: \"PrivateEndpoint\",\n    modelProperties: {\n      id: {\n        readOnly: true,\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PrivateLinkServiceConnectionState: msRest.CompositeMapper = {\n  serializedName: \"PrivateLinkServiceConnectionState\",\n  type: {\n    name: \"Composite\",\n    className: \"PrivateLinkServiceConnectionState\",\n    modelProperties: {\n      status: {\n        required: true,\n        serializedName: \"status\",\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        required: true,\n        serializedName: \"description\",\n        type: {\n          name: \"String\"\n        }\n      },\n      actionsRequired: {\n        serializedName: \"actionsRequired\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PrivateEndpointConnectionProperties: msRest.CompositeMapper = {\n  serializedName: \"PrivateEndpointConnectionProperties\",\n  type: {\n    name: \"Composite\",\n    className: \"PrivateEndpointConnectionProperties\",\n    modelProperties: {\n      privateEndpoint: {\n        serializedName: \"privateEndpoint\",\n        type: {\n          name: \"Composite\",\n          className: \"PrivateEndpoint\"\n        }\n      },\n      privateLinkServiceConnectionState: {\n        required: true,\n        serializedName: \"privateLinkServiceConnectionState\",\n        type: {\n          name: \"Composite\",\n          className: \"PrivateLinkServiceConnectionState\"\n        }\n      }\n    }\n  }\n};\n\nexport const PrivateEndpointConnection: msRest.CompositeMapper = {\n  serializedName: \"PrivateEndpointConnection\",\n  type: {\n    name: \"Composite\",\n    className: \"PrivateEndpointConnection\",\n    modelProperties: {\n      id: {\n        readOnly: true,\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        readOnly: true,\n        serializedName: \"name\",\n        constraints: {\n          Pattern: /^(?![0-9]+$)(?!-)[a-zA-Z0-9-]{2,49}[a-zA-Z0-9]$/\n        },\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        readOnly: true,\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        required: true,\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"PrivateEndpointConnectionProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const EventHubProperties: msRest.CompositeMapper = {\n  serializedName: \"EventHubProperties\",\n  type: {\n    name: \"Composite\",\n    className: \"EventHubProperties\",\n    modelProperties: {\n      retentionTimeInDays: {\n        serializedName: \"retentionTimeInDays\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      partitionCount: {\n        serializedName: \"partitionCount\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      partitionIds: {\n        readOnly: true,\n        serializedName: \"partitionIds\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      path: {\n        readOnly: true,\n        serializedName: \"path\",\n        type: {\n          name: \"String\"\n        }\n      },\n      endpoint: {\n        readOnly: true,\n        serializedName: \"endpoint\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RoutingServiceBusQueueEndpointProperties: msRest.CompositeMapper = {\n  serializedName: \"RoutingServiceBusQueueEndpointProperties\",\n  type: {\n    name: \"Composite\",\n    className: \"RoutingServiceBusQueueEndpointProperties\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      connectionString: {\n        serializedName: \"connectionString\",\n        type: {\n          name: \"String\"\n        }\n      },\n      endpointUri: {\n        serializedName: \"endpointUri\",\n        type: {\n          name: \"String\"\n        }\n      },\n      entityPath: {\n        serializedName: \"entityPath\",\n        type: {\n          name: \"String\"\n        }\n      },\n      authenticationType: {\n        serializedName: \"authenticationType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        required: true,\n        serializedName: \"name\",\n        constraints: {\n          Pattern: /^[A-Za-z0-9-._]{1,64}$/\n        },\n        type: {\n          name: \"String\"\n        }\n      },\n      subscriptionId: {\n        serializedName: \"subscriptionId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceGroup: {\n        serializedName: \"resourceGroup\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RoutingServiceBusTopicEndpointProperties: msRest.CompositeMapper = {\n  serializedName: \"RoutingServiceBusTopicEndpointProperties\",\n  type: {\n    name: \"Composite\",\n    className: \"RoutingServiceBusTopicEndpointProperties\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      connectionString: {\n        serializedName: \"connectionString\",\n        type: {\n          name: \"String\"\n        }\n      },\n      endpointUri: {\n        serializedName: \"endpointUri\",\n        type: {\n          name: \"String\"\n        }\n      },\n      entityPath: {\n        serializedName: \"entityPath\",\n        type: {\n          name: \"String\"\n        }\n      },\n      authenticationType: {\n        serializedName: \"authenticationType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        required: true,\n        serializedName: \"name\",\n        constraints: {\n          Pattern: /^[A-Za-z0-9-._]{1,64}$/\n        },\n        type: {\n          name: \"String\"\n        }\n      },\n      subscriptionId: {\n        serializedName: \"subscriptionId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceGroup: {\n        serializedName: \"resourceGroup\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RoutingEventHubProperties: msRest.CompositeMapper = {\n  serializedName: \"RoutingEventHubProperties\",\n  type: {\n    name: \"Composite\",\n    className: \"RoutingEventHubProperties\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      connectionString: {\n        serializedName: \"connectionString\",\n        type: {\n          name: \"String\"\n        }\n      },\n      endpointUri: {\n        serializedName: \"endpointUri\",\n        type: {\n          name: \"String\"\n        }\n      },\n      entityPath: {\n        serializedName: \"entityPath\",\n        type: {\n          name: \"String\"\n        }\n      },\n      authenticationType: {\n        serializedName: \"authenticationType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        required: true,\n        serializedName: \"name\",\n        constraints: {\n          Pattern: /^[A-Za-z0-9-._]{1,64}$/\n        },\n        type: {\n          name: \"String\"\n        }\n      },\n      subscriptionId: {\n        serializedName: \"subscriptionId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceGroup: {\n        serializedName: \"resourceGroup\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RoutingStorageContainerProperties: msRest.CompositeMapper = {\n  serializedName: \"RoutingStorageContainerProperties\",\n  type: {\n    name: \"Composite\",\n    className: \"RoutingStorageContainerProperties\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      connectionString: {\n        serializedName: \"connectionString\",\n        type: {\n          name: \"String\"\n        }\n      },\n      endpointUri: {\n        serializedName: \"endpointUri\",\n        type: {\n          name: \"String\"\n        }\n      },\n      authenticationType: {\n        serializedName: \"authenticationType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        required: true,\n        serializedName: \"name\",\n        constraints: {\n          Pattern: /^[A-Za-z0-9-._]{1,64}$/\n        },\n        type: {\n          name: \"String\"\n        }\n      },\n      subscriptionId: {\n        serializedName: \"subscriptionId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceGroup: {\n        serializedName: \"resourceGroup\",\n        type: {\n          name: \"String\"\n        }\n      },\n      containerName: {\n        required: true,\n        serializedName: \"containerName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fileNameFormat: {\n        serializedName: \"fileNameFormat\",\n        type: {\n          name: \"String\"\n        }\n      },\n      batchFrequencyInSeconds: {\n        serializedName: \"batchFrequencyInSeconds\",\n        constraints: {\n          InclusiveMaximum: 720,\n          InclusiveMinimum: 60\n        },\n        type: {\n          name: \"Number\"\n        }\n      },\n      maxChunkSizeInBytes: {\n        serializedName: \"maxChunkSizeInBytes\",\n        constraints: {\n          InclusiveMaximum: 524288000,\n          InclusiveMinimum: 10485760\n        },\n        type: {\n          name: \"Number\"\n        }\n      },\n      encoding: {\n        serializedName: \"encoding\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RoutingEndpoints: msRest.CompositeMapper = {\n  serializedName: \"RoutingEndpoints\",\n  type: {\n    name: \"Composite\",\n    className: \"RoutingEndpoints\",\n    modelProperties: {\n      serviceBusQueues: {\n        serializedName: \"serviceBusQueues\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"RoutingServiceBusQueueEndpointProperties\"\n            }\n          }\n        }\n      },\n      serviceBusTopics: {\n        serializedName: \"serviceBusTopics\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"RoutingServiceBusTopicEndpointProperties\"\n            }\n          }\n        }\n      },\n      eventHubs: {\n        serializedName: \"eventHubs\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"RoutingEventHubProperties\"\n            }\n          }\n        }\n      },\n      storageContainers: {\n        serializedName: \"storageContainers\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"RoutingStorageContainerProperties\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const RouteProperties: msRest.CompositeMapper = {\n  serializedName: \"RouteProperties\",\n  type: {\n    name: \"Composite\",\n    className: \"RouteProperties\",\n    modelProperties: {\n      name: {\n        required: true,\n        serializedName: \"name\",\n        constraints: {\n          Pattern: /^[A-Za-z0-9-._]{1,64}$/\n        },\n        type: {\n          name: \"String\"\n        }\n      },\n      source: {\n        required: true,\n        serializedName: \"source\",\n        type: {\n          name: \"String\"\n        }\n      },\n      condition: {\n        serializedName: \"condition\",\n        type: {\n          name: \"String\"\n        }\n      },\n      endpointNames: {\n        required: true,\n        serializedName: \"endpointNames\",\n        constraints: {\n          MaxItems: 1,\n          MinItems: 1\n        },\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      isEnabled: {\n        required: true,\n        serializedName: \"isEnabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const FallbackRouteProperties: msRest.CompositeMapper = {\n  serializedName: \"FallbackRouteProperties\",\n  type: {\n    name: \"Composite\",\n    className: \"FallbackRouteProperties\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      source: {\n        required: true,\n        isConstant: true,\n        serializedName: \"source\",\n        defaultValue: 'DeviceMessages',\n        type: {\n          name: \"String\"\n        }\n      },\n      condition: {\n        serializedName: \"condition\",\n        type: {\n          name: \"String\"\n        }\n      },\n      endpointNames: {\n        required: true,\n        serializedName: \"endpointNames\",\n        constraints: {\n          MaxItems: 1,\n          MinItems: 1\n        },\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      isEnabled: {\n        required: true,\n        serializedName: \"isEnabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const EnrichmentProperties: msRest.CompositeMapper = {\n  serializedName: \"EnrichmentProperties\",\n  type: {\n    name: \"Composite\",\n    className: \"EnrichmentProperties\",\n    modelProperties: {\n      key: {\n        required: true,\n        serializedName: \"key\",\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        required: true,\n        serializedName: \"value\",\n        type: {\n          name: \"String\"\n        }\n      },\n      endpointNames: {\n        required: true,\n        serializedName: \"endpointNames\",\n        constraints: {\n          MinItems: 1\n        },\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const RoutingProperties: msRest.CompositeMapper = {\n  serializedName: \"RoutingProperties\",\n  type: {\n    name: \"Composite\",\n    className: \"RoutingProperties\",\n    modelProperties: {\n      endpoints: {\n        serializedName: \"endpoints\",\n        type: {\n          name: \"Composite\",\n          className: \"RoutingEndpoints\"\n        }\n      },\n      routes: {\n        serializedName: \"routes\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"RouteProperties\"\n            }\n          }\n        }\n      },\n      fallbackRoute: {\n        serializedName: \"fallbackRoute\",\n        type: {\n          name: \"Composite\",\n          className: \"FallbackRouteProperties\"\n        }\n      },\n      enrichments: {\n        serializedName: \"enrichments\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"EnrichmentProperties\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const StorageEndpointProperties: msRest.CompositeMapper = {\n  serializedName: \"StorageEndpointProperties\",\n  type: {\n    name: \"Composite\",\n    className: \"StorageEndpointProperties\",\n    modelProperties: {\n      sasTtlAsIso8601: {\n        serializedName: \"sasTtlAsIso8601\",\n        type: {\n          name: \"TimeSpan\"\n        }\n      },\n      connectionString: {\n        required: true,\n        serializedName: \"connectionString\",\n        type: {\n          name: \"String\"\n        }\n      },\n      containerName: {\n        required: true,\n        serializedName: \"containerName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      authenticationType: {\n        serializedName: \"authenticationType\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const MessagingEndpointProperties: msRest.CompositeMapper = {\n  serializedName: \"MessagingEndpointProperties\",\n  type: {\n    name: \"Composite\",\n    className: \"MessagingEndpointProperties\",\n    modelProperties: {\n      lockDurationAsIso8601: {\n        serializedName: \"lockDurationAsIso8601\",\n        type: {\n          name: \"TimeSpan\"\n        }\n      },\n      ttlAsIso8601: {\n        serializedName: \"ttlAsIso8601\",\n        type: {\n          name: \"TimeSpan\"\n        }\n      },\n      maxDeliveryCount: {\n        serializedName: \"maxDeliveryCount\",\n        constraints: {\n          InclusiveMaximum: 100,\n          InclusiveMinimum: 1\n        },\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const FeedbackProperties: msRest.CompositeMapper = {\n  serializedName: \"FeedbackProperties\",\n  type: {\n    name: \"Composite\",\n    className: \"FeedbackProperties\",\n    modelProperties: {\n      lockDurationAsIso8601: {\n        serializedName: \"lockDurationAsIso8601\",\n        type: {\n          name: \"TimeSpan\"\n        }\n      },\n      ttlAsIso8601: {\n        serializedName: \"ttlAsIso8601\",\n        type: {\n          name: \"TimeSpan\"\n        }\n      },\n      maxDeliveryCount: {\n        serializedName: \"maxDeliveryCount\",\n        constraints: {\n          InclusiveMaximum: 100,\n          InclusiveMinimum: 1\n        },\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const CloudToDeviceProperties: msRest.CompositeMapper = {\n  serializedName: \"CloudToDeviceProperties\",\n  type: {\n    name: \"Composite\",\n    className: \"CloudToDeviceProperties\",\n    modelProperties: {\n      maxDeliveryCount: {\n        serializedName: \"maxDeliveryCount\",\n        constraints: {\n          InclusiveMaximum: 100,\n          InclusiveMinimum: 1\n        },\n        type: {\n          name: \"Number\"\n        }\n      },\n      defaultTtlAsIso8601: {\n        serializedName: \"defaultTtlAsIso8601\",\n        type: {\n          name: \"TimeSpan\"\n        }\n      },\n      feedback: {\n        serializedName: \"feedback\",\n        type: {\n          name: \"Composite\",\n          className: \"FeedbackProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const IotHubPropertiesDeviceStreams: msRest.CompositeMapper = {\n  serializedName: \"IotHubProperties_deviceStreams\",\n  type: {\n    name: \"Composite\",\n    className: \"IotHubPropertiesDeviceStreams\",\n    modelProperties: {\n      streamingEndpoints: {\n        serializedName: \"streamingEndpoints\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const KeyVaultKeyProperties: msRest.CompositeMapper = {\n  serializedName: \"KeyVaultKeyProperties\",\n  type: {\n    name: \"Composite\",\n    className: \"KeyVaultKeyProperties\",\n    modelProperties: {\n      keyIdentifier: {\n        serializedName: \"keyIdentifier\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const EncryptionPropertiesDescription: msRest.CompositeMapper = {\n  serializedName: \"EncryptionPropertiesDescription\",\n  type: {\n    name: \"Composite\",\n    className: \"EncryptionPropertiesDescription\",\n    modelProperties: {\n      keySource: {\n        serializedName: \"keySource\",\n        type: {\n          name: \"String\"\n        }\n      },\n      keyVaultProperties: {\n        serializedName: \"keyVaultProperties\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"KeyVaultKeyProperties\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const IotHubLocationDescription: msRest.CompositeMapper = {\n  serializedName: \"IotHubLocationDescription\",\n  type: {\n    name: \"Composite\",\n    className: \"IotHubLocationDescription\",\n    modelProperties: {\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      role: {\n        serializedName: \"role\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const IotHubProperties: msRest.CompositeMapper = {\n  serializedName: \"IotHubProperties\",\n  type: {\n    name: \"Composite\",\n    className: \"IotHubProperties\",\n    modelProperties: {\n      authorizationPolicies: {\n        serializedName: \"authorizationPolicies\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SharedAccessSignatureAuthorizationRule\"\n            }\n          }\n        }\n      },\n      publicNetworkAccess: {\n        serializedName: \"publicNetworkAccess\",\n        type: {\n          name: \"String\"\n        }\n      },\n      ipFilterRules: {\n        serializedName: \"ipFilterRules\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"IpFilterRule\"\n            }\n          }\n        }\n      },\n      minTlsVersion: {\n        serializedName: \"minTlsVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      privateEndpointConnections: {\n        serializedName: \"privateEndpointConnections\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"PrivateEndpointConnection\"\n            }\n          }\n        }\n      },\n      provisioningState: {\n        readOnly: true,\n        serializedName: \"provisioningState\",\n        type: {\n          name: \"String\"\n        }\n      },\n      state: {\n        readOnly: true,\n        serializedName: \"state\",\n        type: {\n          name: \"String\"\n        }\n      },\n      hostName: {\n        readOnly: true,\n        serializedName: \"hostName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      eventHubEndpoints: {\n        serializedName: \"eventHubEndpoints\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"Composite\",\n              className: \"EventHubProperties\"\n            }\n          }\n        }\n      },\n      routing: {\n        serializedName: \"routing\",\n        type: {\n          name: \"Composite\",\n          className: \"RoutingProperties\"\n        }\n      },\n      storageEndpoints: {\n        serializedName: \"storageEndpoints\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"Composite\",\n              className: \"StorageEndpointProperties\"\n            }\n          }\n        }\n      },\n      messagingEndpoints: {\n        serializedName: \"messagingEndpoints\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"Composite\",\n              className: \"MessagingEndpointProperties\"\n            }\n          }\n        }\n      },\n      enableFileUploadNotifications: {\n        serializedName: \"enableFileUploadNotifications\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      cloudToDevice: {\n        serializedName: \"cloudToDevice\",\n        type: {\n          name: \"Composite\",\n          className: \"CloudToDeviceProperties\"\n        }\n      },\n      comments: {\n        serializedName: \"comments\",\n        type: {\n          name: \"String\"\n        }\n      },\n      deviceStreams: {\n        serializedName: \"deviceStreams\",\n        type: {\n          name: \"Composite\",\n          className: \"IotHubPropertiesDeviceStreams\"\n        }\n      },\n      features: {\n        serializedName: \"features\",\n        type: {\n          name: \"String\"\n        }\n      },\n      encryption: {\n        serializedName: \"encryption\",\n        type: {\n          name: \"Composite\",\n          className: \"EncryptionPropertiesDescription\"\n        }\n      },\n      locations: {\n        readOnly: true,\n        serializedName: \"locations\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"IotHubLocationDescription\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const IotHubSkuInfo: msRest.CompositeMapper = {\n  serializedName: \"IotHubSkuInfo\",\n  type: {\n    name: \"Composite\",\n    className: \"IotHubSkuInfo\",\n    modelProperties: {\n      name: {\n        required: true,\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tier: {\n        readOnly: true,\n        serializedName: \"tier\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"Free\",\n            \"Standard\",\n            \"Basic\"\n          ]\n        }\n      },\n      capacity: {\n        serializedName: \"capacity\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const GroupIdInformationProperties: msRest.CompositeMapper = {\n  serializedName: \"GroupIdInformationProperties\",\n  type: {\n    name: \"Composite\",\n    className: \"GroupIdInformationProperties\",\n    modelProperties: {\n      groupId: {\n        serializedName: \"groupId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requiredMembers: {\n        serializedName: \"requiredMembers\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      requiredZoneNames: {\n        serializedName: \"requiredZoneNames\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const GroupIdInformation: msRest.CompositeMapper = {\n  serializedName: \"GroupIdInformation\",\n  type: {\n    name: \"Composite\",\n    className: \"GroupIdInformation\",\n    modelProperties: {\n      id: {\n        readOnly: true,\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        readOnly: true,\n        serializedName: \"name\",\n        constraints: {\n          Pattern: /^(?![0-9]+$)(?!-)[a-zA-Z0-9-]{2,49}[a-zA-Z0-9]$/\n        },\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        readOnly: true,\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        required: true,\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"GroupIdInformationProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const PrivateLinkResources: msRest.CompositeMapper = {\n  serializedName: \"PrivateLinkResources\",\n  type: {\n    name: \"Composite\",\n    className: \"PrivateLinkResources\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"GroupIdInformation\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Resource: msRest.CompositeMapper = {\n  serializedName: \"Resource\",\n  type: {\n    name: \"Composite\",\n    className: \"Resource\",\n    modelProperties: {\n      id: {\n        readOnly: true,\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        readOnly: true,\n        serializedName: \"name\",\n        constraints: {\n          Pattern: /^(?![0-9]+$)(?!-)[a-zA-Z0-9-]{2,49}[a-zA-Z0-9]$/\n        },\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        readOnly: true,\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      location: {\n        required: true,\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const IotHubDescription: msRest.CompositeMapper = {\n  serializedName: \"IotHubDescription\",\n  type: {\n    name: \"Composite\",\n    className: \"IotHubDescription\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"IotHubProperties\"\n        }\n      },\n      sku: {\n        required: true,\n        serializedName: \"sku\",\n        type: {\n          name: \"Composite\",\n          className: \"IotHubSkuInfo\"\n        }\n      }\n    }\n  }\n};\n\nexport const OperationDisplay: msRest.CompositeMapper = {\n  serializedName: \"Operation_display\",\n  type: {\n    name: \"Composite\",\n    className: \"OperationDisplay\",\n    modelProperties: {\n      provider: {\n        readOnly: true,\n        serializedName: \"provider\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resource: {\n        readOnly: true,\n        serializedName: \"resource\",\n        type: {\n          name: \"String\"\n        }\n      },\n      operation: {\n        readOnly: true,\n        serializedName: \"operation\",\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        readOnly: true,\n        serializedName: \"description\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Operation: msRest.CompositeMapper = {\n  serializedName: \"Operation\",\n  type: {\n    name: \"Composite\",\n    className: \"Operation\",\n    modelProperties: {\n      name: {\n        readOnly: true,\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      display: {\n        serializedName: \"display\",\n        type: {\n          name: \"Composite\",\n          className: \"OperationDisplay\"\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorDetails: msRest.CompositeMapper = {\n  serializedName: \"ErrorDetails\",\n  type: {\n    name: \"Composite\",\n    className: \"ErrorDetails\",\n    modelProperties: {\n      code: {\n        readOnly: true,\n        serializedName: \"code\",\n        type: {\n          name: \"String\"\n        }\n      },\n      httpStatusCode: {\n        readOnly: true,\n        serializedName: \"httpStatusCode\",\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        readOnly: true,\n        serializedName: \"message\",\n        type: {\n          name: \"String\"\n        }\n      },\n      details: {\n        readOnly: true,\n        serializedName: \"details\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const IotHubQuotaMetricInfo: msRest.CompositeMapper = {\n  serializedName: \"IotHubQuotaMetricInfo\",\n  type: {\n    name: \"Composite\",\n    className: \"IotHubQuotaMetricInfo\",\n    modelProperties: {\n      name: {\n        readOnly: true,\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      currentValue: {\n        readOnly: true,\n        serializedName: \"currentValue\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      maxValue: {\n        readOnly: true,\n        serializedName: \"maxValue\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const EndpointHealthData: msRest.CompositeMapper = {\n  serializedName: \"EndpointHealthData\",\n  type: {\n    name: \"Composite\",\n    className: \"EndpointHealthData\",\n    modelProperties: {\n      endpointId: {\n        serializedName: \"endpointId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      healthStatus: {\n        serializedName: \"healthStatus\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastKnownError: {\n        serializedName: \"lastKnownError\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastKnownErrorTime: {\n        serializedName: \"lastKnownErrorTime\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      lastSuccessfulSendAttemptTime: {\n        serializedName: \"lastSuccessfulSendAttemptTime\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      lastSendAttemptTime: {\n        serializedName: \"lastSendAttemptTime\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      }\n    }\n  }\n};\n\nexport const RegistryStatistics: msRest.CompositeMapper = {\n  serializedName: \"RegistryStatistics\",\n  type: {\n    name: \"Composite\",\n    className: \"RegistryStatistics\",\n    modelProperties: {\n      totalDeviceCount: {\n        readOnly: true,\n        serializedName: \"totalDeviceCount\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      enabledDeviceCount: {\n        readOnly: true,\n        serializedName: \"enabledDeviceCount\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      disabledDeviceCount: {\n        readOnly: true,\n        serializedName: \"disabledDeviceCount\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const JobResponse: msRest.CompositeMapper = {\n  serializedName: \"JobResponse\",\n  type: {\n    name: \"Composite\",\n    className: \"JobResponse\",\n    modelProperties: {\n      jobId: {\n        readOnly: true,\n        serializedName: \"jobId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      startTimeUtc: {\n        readOnly: true,\n        serializedName: \"startTimeUtc\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      endTimeUtc: {\n        readOnly: true,\n        serializedName: \"endTimeUtc\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      type: {\n        readOnly: true,\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      status: {\n        readOnly: true,\n        serializedName: \"status\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"unknown\",\n            \"enqueued\",\n            \"running\",\n            \"completed\",\n            \"failed\",\n            \"cancelled\"\n          ]\n        }\n      },\n      failureReason: {\n        readOnly: true,\n        serializedName: \"failureReason\",\n        type: {\n          name: \"String\"\n        }\n      },\n      statusMessage: {\n        readOnly: true,\n        serializedName: \"statusMessage\",\n        type: {\n          name: \"String\"\n        }\n      },\n      parentJobId: {\n        readOnly: true,\n        serializedName: \"parentJobId\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const IotHubCapacity: msRest.CompositeMapper = {\n  serializedName: \"IotHubCapacity\",\n  type: {\n    name: \"Composite\",\n    className: \"IotHubCapacity\",\n    modelProperties: {\n      minimum: {\n        readOnly: true,\n        serializedName: \"minimum\",\n        constraints: {\n          InclusiveMaximum: 1,\n          InclusiveMinimum: 1\n        },\n        type: {\n          name: \"Number\"\n        }\n      },\n      maximum: {\n        readOnly: true,\n        serializedName: \"maximum\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      default: {\n        readOnly: true,\n        serializedName: \"default\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      scaleType: {\n        readOnly: true,\n        serializedName: \"scaleType\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"Automatic\",\n            \"Manual\",\n            \"None\"\n          ]\n        }\n      }\n    }\n  }\n};\n\nexport const IotHubSkuDescription: msRest.CompositeMapper = {\n  serializedName: \"IotHubSkuDescription\",\n  type: {\n    name: \"Composite\",\n    className: \"IotHubSkuDescription\",\n    modelProperties: {\n      resourceType: {\n        readOnly: true,\n        serializedName: \"resourceType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sku: {\n        required: true,\n        serializedName: \"sku\",\n        type: {\n          name: \"Composite\",\n          className: \"IotHubSkuInfo\"\n        }\n      },\n      capacity: {\n        required: true,\n        serializedName: \"capacity\",\n        type: {\n          name: \"Composite\",\n          className: \"IotHubCapacity\"\n        }\n      }\n    }\n  }\n};\n\nexport const TagsResource: msRest.CompositeMapper = {\n  serializedName: \"TagsResource\",\n  type: {\n    name: \"Composite\",\n    className: \"TagsResource\",\n    modelProperties: {\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const EventHubConsumerGroupInfo: msRest.CompositeMapper = {\n  serializedName: \"EventHubConsumerGroupInfo\",\n  type: {\n    name: \"Composite\",\n    className: \"EventHubConsumerGroupInfo\",\n    modelProperties: {\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      id: {\n        readOnly: true,\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        readOnly: true,\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        readOnly: true,\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      etag: {\n        readOnly: true,\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const EventHubConsumerGroupName: msRest.CompositeMapper = {\n  serializedName: \"EventHubConsumerGroupName\",\n  type: {\n    name: \"Composite\",\n    className: \"EventHubConsumerGroupName\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const EventHubConsumerGroupBodyDescription: msRest.CompositeMapper = {\n  serializedName: \"EventHubConsumerGroupBodyDescription\",\n  type: {\n    name: \"Composite\",\n    className: \"EventHubConsumerGroupBodyDescription\",\n    modelProperties: {\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"EventHubConsumerGroupName\"\n        }\n      }\n    }\n  }\n};\n\nexport const OperationInputs: msRest.CompositeMapper = {\n  serializedName: \"OperationInputs\",\n  type: {\n    name: \"Composite\",\n    className: \"OperationInputs\",\n    modelProperties: {\n      name: {\n        required: true,\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const IotHubNameAvailabilityInfo: msRest.CompositeMapper = {\n  serializedName: \"IotHubNameAvailabilityInfo\",\n  type: {\n    name: \"Composite\",\n    className: \"IotHubNameAvailabilityInfo\",\n    modelProperties: {\n      nameAvailable: {\n        readOnly: true,\n        serializedName: \"nameAvailable\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      reason: {\n        readOnly: true,\n        serializedName: \"reason\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"Invalid\",\n            \"AlreadyExists\"\n          ]\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Name: msRest.CompositeMapper = {\n  serializedName: \"Name\",\n  type: {\n    name: \"Composite\",\n    className: \"Name\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"String\"\n        }\n      },\n      localizedValue: {\n        serializedName: \"localizedValue\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const UserSubscriptionQuota: msRest.CompositeMapper = {\n  serializedName: \"UserSubscriptionQuota\",\n  type: {\n    name: \"Composite\",\n    className: \"UserSubscriptionQuota\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      unit: {\n        serializedName: \"unit\",\n        type: {\n          name: \"String\"\n        }\n      },\n      currentValue: {\n        serializedName: \"currentValue\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      limit: {\n        serializedName: \"limit\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"Composite\",\n          className: \"Name\"\n        }\n      }\n    }\n  }\n};\n\nexport const UserSubscriptionQuotaListResult: msRest.CompositeMapper = {\n  serializedName: \"UserSubscriptionQuotaListResult\",\n  type: {\n    name: \"Composite\",\n    className: \"UserSubscriptionQuotaListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"UserSubscriptionQuota\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        readOnly: true,\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RoutingMessage: msRest.CompositeMapper = {\n  serializedName: \"RoutingMessage\",\n  type: {\n    name: \"Composite\",\n    className: \"RoutingMessage\",\n    modelProperties: {\n      body: {\n        serializedName: \"body\",\n        type: {\n          name: \"String\"\n        }\n      },\n      appProperties: {\n        serializedName: \"appProperties\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      systemProperties: {\n        serializedName: \"systemProperties\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const RoutingTwinProperties: msRest.CompositeMapper = {\n  serializedName: \"RoutingTwin_properties\",\n  type: {\n    name: \"Composite\",\n    className: \"RoutingTwinProperties\",\n    modelProperties: {\n      desired: {\n        serializedName: \"desired\",\n        type: {\n          name: \"Object\"\n        }\n      },\n      reported: {\n        serializedName: \"reported\",\n        type: {\n          name: \"Object\"\n        }\n      }\n    }\n  }\n};\n\nexport const RoutingTwin: msRest.CompositeMapper = {\n  serializedName: \"RoutingTwin\",\n  type: {\n    name: \"Composite\",\n    className: \"RoutingTwin\",\n    modelProperties: {\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Object\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"RoutingTwinProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const TestAllRoutesInput: msRest.CompositeMapper = {\n  serializedName: \"TestAllRoutesInput\",\n  type: {\n    name: \"Composite\",\n    className: \"TestAllRoutesInput\",\n    modelProperties: {\n      routingSource: {\n        serializedName: \"routingSource\",\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        type: {\n          name: \"Composite\",\n          className: \"RoutingMessage\"\n        }\n      },\n      twin: {\n        serializedName: \"twin\",\n        type: {\n          name: \"Composite\",\n          className: \"RoutingTwin\"\n        }\n      }\n    }\n  }\n};\n\nexport const MatchedRoute: msRest.CompositeMapper = {\n  serializedName: \"MatchedRoute\",\n  type: {\n    name: \"Composite\",\n    className: \"MatchedRoute\",\n    modelProperties: {\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"RouteProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const TestAllRoutesResult: msRest.CompositeMapper = {\n  serializedName: \"TestAllRoutesResult\",\n  type: {\n    name: \"Composite\",\n    className: \"TestAllRoutesResult\",\n    modelProperties: {\n      routes: {\n        serializedName: \"routes\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MatchedRoute\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const TestRouteInput: msRest.CompositeMapper = {\n  serializedName: \"TestRouteInput\",\n  type: {\n    name: \"Composite\",\n    className: \"TestRouteInput\",\n    modelProperties: {\n      message: {\n        serializedName: \"message\",\n        type: {\n          name: \"Composite\",\n          className: \"RoutingMessage\"\n        }\n      },\n      route: {\n        required: true,\n        serializedName: \"route\",\n        type: {\n          name: \"Composite\",\n          className: \"RouteProperties\"\n        }\n      },\n      twin: {\n        serializedName: \"twin\",\n        type: {\n          name: \"Composite\",\n          className: \"RoutingTwin\"\n        }\n      }\n    }\n  }\n};\n\nexport const RouteErrorPosition: msRest.CompositeMapper = {\n  serializedName: \"RouteErrorPosition\",\n  type: {\n    name: \"Composite\",\n    className: \"RouteErrorPosition\",\n    modelProperties: {\n      line: {\n        serializedName: \"line\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      column: {\n        serializedName: \"column\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const RouteErrorRange: msRest.CompositeMapper = {\n  serializedName: \"RouteErrorRange\",\n  type: {\n    name: \"Composite\",\n    className: \"RouteErrorRange\",\n    modelProperties: {\n      start: {\n        serializedName: \"start\",\n        type: {\n          name: \"Composite\",\n          className: \"RouteErrorPosition\"\n        }\n      },\n      end: {\n        serializedName: \"end\",\n        type: {\n          name: \"Composite\",\n          className: \"RouteErrorPosition\"\n        }\n      }\n    }\n  }\n};\n\nexport const RouteCompilationError: msRest.CompositeMapper = {\n  serializedName: \"RouteCompilationError\",\n  type: {\n    name: \"Composite\",\n    className: \"RouteCompilationError\",\n    modelProperties: {\n      message: {\n        serializedName: \"message\",\n        type: {\n          name: \"String\"\n        }\n      },\n      severity: {\n        serializedName: \"severity\",\n        type: {\n          name: \"String\"\n        }\n      },\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"Composite\",\n          className: \"RouteErrorRange\"\n        }\n      }\n    }\n  }\n};\n\nexport const TestRouteResultDetails: msRest.CompositeMapper = {\n  serializedName: \"TestRouteResultDetails\",\n  type: {\n    name: \"Composite\",\n    className: \"TestRouteResultDetails\",\n    modelProperties: {\n      compilationErrors: {\n        serializedName: \"compilationErrors\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"RouteCompilationError\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const TestRouteResult: msRest.CompositeMapper = {\n  serializedName: \"TestRouteResult\",\n  type: {\n    name: \"Composite\",\n    className: \"TestRouteResult\",\n    modelProperties: {\n      result: {\n        serializedName: \"result\",\n        type: {\n          name: \"String\"\n        }\n      },\n      details: {\n        serializedName: \"details\",\n        type: {\n          name: \"Composite\",\n          className: \"TestRouteResultDetails\"\n        }\n      }\n    }\n  }\n};\n\nexport const ExportDevicesRequest: msRest.CompositeMapper = {\n  serializedName: \"ExportDevicesRequest\",\n  type: {\n    name: \"Composite\",\n    className: \"ExportDevicesRequest\",\n    modelProperties: {\n      exportBlobContainerUri: {\n        required: true,\n        serializedName: \"exportBlobContainerUri\",\n        type: {\n          name: \"String\"\n        }\n      },\n      excludeKeys: {\n        required: true,\n        serializedName: \"excludeKeys\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      exportBlobName: {\n        serializedName: \"exportBlobName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      authenticationType: {\n        serializedName: \"authenticationType\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ImportDevicesRequest: msRest.CompositeMapper = {\n  serializedName: \"ImportDevicesRequest\",\n  type: {\n    name: \"Composite\",\n    className: \"ImportDevicesRequest\",\n    modelProperties: {\n      inputBlobContainerUri: {\n        required: true,\n        serializedName: \"inputBlobContainerUri\",\n        type: {\n          name: \"String\"\n        }\n      },\n      outputBlobContainerUri: {\n        required: true,\n        serializedName: \"outputBlobContainerUri\",\n        type: {\n          name: \"String\"\n        }\n      },\n      inputBlobName: {\n        serializedName: \"inputBlobName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      outputBlobName: {\n        serializedName: \"outputBlobName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      authenticationType: {\n        serializedName: \"authenticationType\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FailoverInput: msRest.CompositeMapper = {\n  serializedName: \"FailoverInput\",\n  type: {\n    name: \"Composite\",\n    className: \"FailoverInput\",\n    modelProperties: {\n      failoverRegion: {\n        required: true,\n        serializedName: \"failoverRegion\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const OperationListResult: msRest.CompositeMapper = {\n  serializedName: \"OperationListResult\",\n  type: {\n    name: \"Composite\",\n    className: \"OperationListResult\",\n    modelProperties: {\n      value: {\n        readOnly: true,\n        serializedName: \"\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Operation\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        readOnly: true,\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const IotHubDescriptionListResult: msRest.CompositeMapper = {\n  serializedName: \"IotHubDescriptionListResult\",\n  type: {\n    name: \"Composite\",\n    className: \"IotHubDescriptionListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"IotHubDescription\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        readOnly: true,\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const IotHubSkuDescriptionListResult: msRest.CompositeMapper = {\n  serializedName: \"IotHubSkuDescriptionListResult\",\n  type: {\n    name: \"Composite\",\n    className: \"IotHubSkuDescriptionListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"IotHubSkuDescription\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        readOnly: true,\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const EventHubConsumerGroupsListResult: msRest.CompositeMapper = {\n  serializedName: \"EventHubConsumerGroupsListResult\",\n  type: {\n    name: \"Composite\",\n    className: \"EventHubConsumerGroupsListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"EventHubConsumerGroupInfo\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        readOnly: true,\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const JobResponseListResult: msRest.CompositeMapper = {\n  serializedName: \"JobResponseListResult\",\n  type: {\n    name: \"Composite\",\n    className: \"JobResponseListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"JobResponse\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        readOnly: true,\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const IotHubQuotaMetricInfoListResult: msRest.CompositeMapper = {\n  serializedName: \"IotHubQuotaMetricInfoListResult\",\n  type: {\n    name: \"Composite\",\n    className: \"IotHubQuotaMetricInfoListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"IotHubQuotaMetricInfo\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        readOnly: true,\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const EndpointHealthDataListResult: msRest.CompositeMapper = {\n  serializedName: \"EndpointHealthDataListResult\",\n  type: {\n    name: \"Composite\",\n    className: \"EndpointHealthDataListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"EndpointHealthData\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        readOnly: true,\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SharedAccessSignatureAuthorizationRuleListResult: msRest.CompositeMapper = {\n  serializedName: \"SharedAccessSignatureAuthorizationRuleListResult\",\n  type: {\n    name: \"Composite\",\n    className: \"SharedAccessSignatureAuthorizationRuleListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SharedAccessSignatureAuthorizationRule\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        readOnly: true,\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  ErrorDetails,\n  Operation,\n  OperationDisplay,\n  OperationListResult\n} from \"../models/mappers\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\n\nexport const acceptLanguage: msRest.OperationParameter = {\n  parameterPath: \"acceptLanguage\",\n  mapper: {\n    serializedName: \"accept-language\",\n    defaultValue: 'en-US',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const apiVersion: msRest.OperationQueryParameter = {\n  parameterPath: \"apiVersion\",\n  mapper: {\n    required: true,\n    serializedName: \"api-version\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const certificateName: msRest.OperationURLParameter = {\n  parameterPath: \"certificateName\",\n  mapper: {\n    required: true,\n    serializedName: \"certificateName\",\n    constraints: {\n      Pattern: /^[A-Za-z0-9-._]{1,64}$/\n    },\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const eventHubEndpointName: msRest.OperationURLParameter = {\n  parameterPath: \"eventHubEndpointName\",\n  mapper: {\n    required: true,\n    serializedName: \"eventHubEndpointName\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const groupId: msRest.OperationURLParameter = {\n  parameterPath: \"groupId\",\n  mapper: {\n    required: true,\n    serializedName: \"groupId\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const ifMatch0: msRest.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"ifMatch\"\n  ],\n  mapper: {\n    serializedName: \"If-Match\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const ifMatch1: msRest.OperationParameter = {\n  parameterPath: \"ifMatch\",\n  mapper: {\n    required: true,\n    serializedName: \"If-Match\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const iotHubName: msRest.OperationURLParameter = {\n  parameterPath: \"iotHubName\",\n  mapper: {\n    required: true,\n    serializedName: \"iotHubName\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const jobId: msRest.OperationURLParameter = {\n  parameterPath: \"jobId\",\n  mapper: {\n    required: true,\n    serializedName: \"jobId\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const keyName: msRest.OperationURLParameter = {\n  parameterPath: \"keyName\",\n  mapper: {\n    required: true,\n    serializedName: \"keyName\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const name: msRest.OperationURLParameter = {\n  parameterPath: \"name\",\n  mapper: {\n    required: true,\n    serializedName: \"name\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const nextPageLink: msRest.OperationURLParameter = {\n  parameterPath: \"nextPageLink\",\n  mapper: {\n    required: true,\n    serializedName: \"nextLink\",\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\nexport const privateEndpointConnectionName: msRest.OperationURLParameter = {\n  parameterPath: \"privateEndpointConnectionName\",\n  mapper: {\n    required: true,\n    serializedName: \"privateEndpointConnectionName\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const resourceGroupName: msRest.OperationURLParameter = {\n  parameterPath: \"resourceGroupName\",\n  mapper: {\n    required: true,\n    serializedName: \"resourceGroupName\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const resourceName: msRest.OperationURLParameter = {\n  parameterPath: \"resourceName\",\n  mapper: {\n    required: true,\n    serializedName: \"resourceName\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const subscriptionId: msRest.OperationURLParameter = {\n  parameterPath: \"subscriptionId\",\n  mapper: {\n    required: true,\n    serializedName: \"subscriptionId\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/operationsMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { IotHubClientContext } from \"../iotHubClientContext\";\n\n/** Class representing a Operations. */\nexport class Operations {\n  private readonly client: IotHubClientContext;\n\n  /**\n   * Create a Operations.\n   * @param {IotHubClientContext} client Reference to the service client.\n   */\n  constructor(client: IotHubClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * Lists all of the available IoT Hub REST API operations.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.OperationsListResponse>\n   */\n  list(options?: msRest.RequestOptionsBase): Promise<Models.OperationsListResponse>;\n  /**\n   * @param callback The callback\n   */\n  list(callback: msRest.ServiceCallback<Models.OperationListResult>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  list(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.OperationListResult>): void;\n  list(options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.OperationListResult>, callback?: msRest.ServiceCallback<Models.OperationListResult>): Promise<Models.OperationsListResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      listOperationSpec,\n      callback) as Promise<Models.OperationsListResponse>;\n  }\n\n  /**\n   * Lists all of the available IoT Hub REST API operations.\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.OperationsListNextResponse>\n   */\n  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.OperationsListNextResponse>;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param callback The callback\n   */\n  listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.OperationListResult>): void;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.OperationListResult>): void;\n  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.OperationListResult>, callback?: msRest.ServiceCallback<Models.OperationListResult>): Promise<Models.OperationsListNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        nextPageLink,\n        options\n      },\n      listNextOperationSpec,\n      callback) as Promise<Models.OperationsListNextResponse>;\n  }\n}\n\n// Operation Specifications\nconst serializer = new msRest.Serializer(Mappers);\nconst listOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"providers/Microsoft.Devices/operations\",\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.OperationListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  serializer\n};\n\nconst listNextOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  baseUrl: \"https://management.azure.com\",\n  path: \"{nextLink}\",\n  urlParameters: [\n    Parameters.nextPageLink\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.OperationListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  BaseResource,\n  CertificateDescription,\n  CertificateProperties,\n  CertificatePropertiesWithNonce,\n  CertificateWithNonceDescription,\n  CloudError,\n  CloudToDeviceProperties,\n  EncryptionPropertiesDescription,\n  EndpointHealthData,\n  EndpointHealthDataListResult,\n  EnrichmentProperties,\n  ErrorDetails,\n  EventHubConsumerGroupBodyDescription,\n  EventHubConsumerGroupInfo,\n  EventHubConsumerGroupName,\n  EventHubConsumerGroupsListResult,\n  EventHubProperties,\n  ExportDevicesRequest,\n  FallbackRouteProperties,\n  FeedbackProperties,\n  ImportDevicesRequest,\n  IotHubCapacity,\n  IotHubDescription,\n  IotHubDescriptionListResult,\n  IotHubLocationDescription,\n  IotHubNameAvailabilityInfo,\n  IotHubProperties,\n  IotHubPropertiesDeviceStreams,\n  IotHubQuotaMetricInfo,\n  IotHubQuotaMetricInfoListResult,\n  IotHubSkuDescription,\n  IotHubSkuDescriptionListResult,\n  IotHubSkuInfo,\n  IpFilterRule,\n  JobResponse,\n  JobResponseListResult,\n  KeyVaultKeyProperties,\n  MatchedRoute,\n  MessagingEndpointProperties,\n  OperationInputs,\n  PrivateEndpoint,\n  PrivateEndpointConnection,\n  PrivateEndpointConnectionProperties,\n  PrivateLinkServiceConnectionState,\n  RegistryStatistics,\n  Resource,\n  RouteCompilationError,\n  RouteErrorPosition,\n  RouteErrorRange,\n  RouteProperties,\n  RoutingEndpoints,\n  RoutingEventHubProperties,\n  RoutingMessage,\n  RoutingProperties,\n  RoutingServiceBusQueueEndpointProperties,\n  RoutingServiceBusTopicEndpointProperties,\n  RoutingStorageContainerProperties,\n  RoutingTwin,\n  RoutingTwinProperties,\n  SharedAccessSignatureAuthorizationRule,\n  SharedAccessSignatureAuthorizationRuleListResult,\n  StorageEndpointProperties,\n  TagsResource,\n  TestAllRoutesInput,\n  TestAllRoutesResult,\n  TestRouteInput,\n  TestRouteResult,\n  TestRouteResultDetails\n} from \"../models/mappers\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as msRestAzure from \"@azure/ms-rest-azure-js\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/iotHubResourceMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { IotHubClientContext } from \"../iotHubClientContext\";\n\n/** Class representing a IotHubResource. */\nexport class IotHubResource {\n  private readonly client: IotHubClientContext;\n\n  /**\n   * Create a IotHubResource.\n   * @param {IotHubClientContext} client Reference to the service client.\n   */\n  constructor(client: IotHubClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * Get the non-security related metadata of an IoT hub.\n   * @summary Get the non-security related metadata of an IoT hub\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.IotHubResourceGetResponse>\n   */\n  get(resourceGroupName: string, resourceName: string, options?: msRest.RequestOptionsBase): Promise<Models.IotHubResourceGetResponse>;\n  /**\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param callback The callback\n   */\n  get(resourceGroupName: string, resourceName: string, callback: msRest.ServiceCallback<Models.IotHubDescription>): void;\n  /**\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  get(resourceGroupName: string, resourceName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.IotHubDescription>): void;\n  get(resourceGroupName: string, resourceName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.IotHubDescription>, callback?: msRest.ServiceCallback<Models.IotHubDescription>): Promise<Models.IotHubResourceGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        resourceName,\n        options\n      },\n      getOperationSpec,\n      callback) as Promise<Models.IotHubResourceGetResponse>;\n  }\n\n  /**\n   * Create or update the metadata of an Iot hub. The usual pattern to modify a property is to\n   * retrieve the IoT hub metadata and security metadata, and then combine them with the modified\n   * values in a new body to update the IoT hub.\n   * @summary Create or update the metadata of an IoT hub.\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param iotHubDescription The IoT hub metadata and security metadata.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.IotHubResourceCreateOrUpdateResponse>\n   */\n  createOrUpdate(resourceGroupName: string, resourceName: string, iotHubDescription: Models.IotHubDescription, options?: Models.IotHubResourceCreateOrUpdateOptionalParams): Promise<Models.IotHubResourceCreateOrUpdateResponse> {\n    return this.beginCreateOrUpdate(resourceGroupName,resourceName,iotHubDescription,options)\n      .then(lroPoller => lroPoller.pollUntilFinished()) as Promise<Models.IotHubResourceCreateOrUpdateResponse>;\n  }\n\n  /**\n   * Update an existing IoT Hub tags. to update other fields use the CreateOrUpdate method\n   * @summary Update an existing IoT Hubs tags.\n   * @param resourceGroupName Resource group identifier.\n   * @param resourceName Name of iot hub to update.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.IotHubResourceUpdateResponse>\n   */\n  update(resourceGroupName: string, resourceName: string, options?: Models.IotHubResourceUpdateOptionalParams): Promise<Models.IotHubResourceUpdateResponse> {\n    return this.beginUpdate(resourceGroupName,resourceName,options)\n      .then(lroPoller => lroPoller.pollUntilFinished()) as Promise<Models.IotHubResourceUpdateResponse>;\n  }\n\n  /**\n   * Delete an IoT hub.\n   * @summary Delete an IoT hub\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.IotHubResourceDeleteMethodResponse>\n   */\n  deleteMethod(resourceGroupName: string, resourceName: string, options?: msRest.RequestOptionsBase): Promise<Models.IotHubResourceDeleteMethodResponse> {\n    return this.beginDeleteMethod(resourceGroupName,resourceName,options)\n      .then(lroPoller => lroPoller.pollUntilFinished()) as Promise<Models.IotHubResourceDeleteMethodResponse>;\n  }\n\n  /**\n   * Get all the IoT hubs in a subscription.\n   * @summary Get all the IoT hubs in a subscription\n   * @param [options] The optional parameters\n   * @returns Promise<Models.IotHubResourceListBySubscriptionResponse>\n   */\n  listBySubscription(options?: msRest.RequestOptionsBase): Promise<Models.IotHubResourceListBySubscriptionResponse>;\n  /**\n   * @param callback The callback\n   */\n  listBySubscription(callback: msRest.ServiceCallback<Models.IotHubDescriptionListResult>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listBySubscription(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.IotHubDescriptionListResult>): void;\n  listBySubscription(options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.IotHubDescriptionListResult>, callback?: msRest.ServiceCallback<Models.IotHubDescriptionListResult>): Promise<Models.IotHubResourceListBySubscriptionResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      listBySubscriptionOperationSpec,\n      callback) as Promise<Models.IotHubResourceListBySubscriptionResponse>;\n  }\n\n  /**\n   * Get all the IoT hubs in a resource group.\n   * @summary Get all the IoT hubs in a resource group\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.IotHubResourceListByResourceGroupResponse>\n   */\n  listByResourceGroup(resourceGroupName: string, options?: msRest.RequestOptionsBase): Promise<Models.IotHubResourceListByResourceGroupResponse>;\n  /**\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param callback The callback\n   */\n  listByResourceGroup(resourceGroupName: string, callback: msRest.ServiceCallback<Models.IotHubDescriptionListResult>): void;\n  /**\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listByResourceGroup(resourceGroupName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.IotHubDescriptionListResult>): void;\n  listByResourceGroup(resourceGroupName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.IotHubDescriptionListResult>, callback?: msRest.ServiceCallback<Models.IotHubDescriptionListResult>): Promise<Models.IotHubResourceListByResourceGroupResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        options\n      },\n      listByResourceGroupOperationSpec,\n      callback) as Promise<Models.IotHubResourceListByResourceGroupResponse>;\n  }\n\n  /**\n   * Get the statistics from an IoT hub.\n   * @summary Get the statistics from an IoT hub\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.IotHubResourceGetStatsResponse>\n   */\n  getStats(resourceGroupName: string, resourceName: string, options?: msRest.RequestOptionsBase): Promise<Models.IotHubResourceGetStatsResponse>;\n  /**\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param callback The callback\n   */\n  getStats(resourceGroupName: string, resourceName: string, callback: msRest.ServiceCallback<Models.RegistryStatistics>): void;\n  /**\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getStats(resourceGroupName: string, resourceName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.RegistryStatistics>): void;\n  getStats(resourceGroupName: string, resourceName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.RegistryStatistics>, callback?: msRest.ServiceCallback<Models.RegistryStatistics>): Promise<Models.IotHubResourceGetStatsResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        resourceName,\n        options\n      },\n      getStatsOperationSpec,\n      callback) as Promise<Models.IotHubResourceGetStatsResponse>;\n  }\n\n  /**\n   * Get the list of valid SKUs for an IoT hub.\n   * @summary Get the list of valid SKUs for an IoT hub\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.IotHubResourceGetValidSkusResponse>\n   */\n  getValidSkus(resourceGroupName: string, resourceName: string, options?: msRest.RequestOptionsBase): Promise<Models.IotHubResourceGetValidSkusResponse>;\n  /**\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param callback The callback\n   */\n  getValidSkus(resourceGroupName: string, resourceName: string, callback: msRest.ServiceCallback<Models.IotHubSkuDescriptionListResult>): void;\n  /**\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getValidSkus(resourceGroupName: string, resourceName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.IotHubSkuDescriptionListResult>): void;\n  getValidSkus(resourceGroupName: string, resourceName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.IotHubSkuDescriptionListResult>, callback?: msRest.ServiceCallback<Models.IotHubSkuDescriptionListResult>): Promise<Models.IotHubResourceGetValidSkusResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        resourceName,\n        options\n      },\n      getValidSkusOperationSpec,\n      callback) as Promise<Models.IotHubResourceGetValidSkusResponse>;\n  }\n\n  /**\n   * Get a list of the consumer groups in the Event Hub-compatible device-to-cloud endpoint in an IoT\n   * hub.\n   * @summary Get a list of the consumer groups in the Event Hub-compatible device-to-cloud endpoint\n   * in an IoT hub\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param eventHubEndpointName The name of the Event Hub-compatible endpoint.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.IotHubResourceListEventHubConsumerGroupsResponse>\n   */\n  listEventHubConsumerGroups(resourceGroupName: string, resourceName: string, eventHubEndpointName: string, options?: msRest.RequestOptionsBase): Promise<Models.IotHubResourceListEventHubConsumerGroupsResponse>;\n  /**\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param eventHubEndpointName The name of the Event Hub-compatible endpoint.\n   * @param callback The callback\n   */\n  listEventHubConsumerGroups(resourceGroupName: string, resourceName: string, eventHubEndpointName: string, callback: msRest.ServiceCallback<Models.EventHubConsumerGroupsListResult>): void;\n  /**\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param eventHubEndpointName The name of the Event Hub-compatible endpoint.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listEventHubConsumerGroups(resourceGroupName: string, resourceName: string, eventHubEndpointName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.EventHubConsumerGroupsListResult>): void;\n  listEventHubConsumerGroups(resourceGroupName: string, resourceName: string, eventHubEndpointName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.EventHubConsumerGroupsListResult>, callback?: msRest.ServiceCallback<Models.EventHubConsumerGroupsListResult>): Promise<Models.IotHubResourceListEventHubConsumerGroupsResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        resourceName,\n        eventHubEndpointName,\n        options\n      },\n      listEventHubConsumerGroupsOperationSpec,\n      callback) as Promise<Models.IotHubResourceListEventHubConsumerGroupsResponse>;\n  }\n\n  /**\n   * Get a consumer group from the Event Hub-compatible device-to-cloud endpoint for an IoT hub.\n   * @summary Get a consumer group from the Event Hub-compatible device-to-cloud endpoint for an IoT\n   * hub\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param eventHubEndpointName The name of the Event Hub-compatible endpoint in the IoT hub.\n   * @param name The name of the consumer group to retrieve.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.IotHubResourceGetEventHubConsumerGroupResponse>\n   */\n  getEventHubConsumerGroup(resourceGroupName: string, resourceName: string, eventHubEndpointName: string, name: string, options?: msRest.RequestOptionsBase): Promise<Models.IotHubResourceGetEventHubConsumerGroupResponse>;\n  /**\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param eventHubEndpointName The name of the Event Hub-compatible endpoint in the IoT hub.\n   * @param name The name of the consumer group to retrieve.\n   * @param callback The callback\n   */\n  getEventHubConsumerGroup(resourceGroupName: string, resourceName: string, eventHubEndpointName: string, name: string, callback: msRest.ServiceCallback<Models.EventHubConsumerGroupInfo>): void;\n  /**\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param eventHubEndpointName The name of the Event Hub-compatible endpoint in the IoT hub.\n   * @param name The name of the consumer group to retrieve.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getEventHubConsumerGroup(resourceGroupName: string, resourceName: string, eventHubEndpointName: string, name: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.EventHubConsumerGroupInfo>): void;\n  getEventHubConsumerGroup(resourceGroupName: string, resourceName: string, eventHubEndpointName: string, name: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.EventHubConsumerGroupInfo>, callback?: msRest.ServiceCallback<Models.EventHubConsumerGroupInfo>): Promise<Models.IotHubResourceGetEventHubConsumerGroupResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        resourceName,\n        eventHubEndpointName,\n        name,\n        options\n      },\n      getEventHubConsumerGroupOperationSpec,\n      callback) as Promise<Models.IotHubResourceGetEventHubConsumerGroupResponse>;\n  }\n\n  /**\n   * Add a consumer group to an Event Hub-compatible endpoint in an IoT hub.\n   * @summary Add a consumer group to an Event Hub-compatible endpoint in an IoT hub\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param eventHubEndpointName The name of the Event Hub-compatible endpoint in the IoT hub.\n   * @param name The name of the consumer group to add.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.IotHubResourceCreateEventHubConsumerGroupResponse>\n   */\n  createEventHubConsumerGroup(resourceGroupName: string, resourceName: string, eventHubEndpointName: string, name: string, options?: Models.IotHubResourceCreateEventHubConsumerGroupOptionalParams): Promise<Models.IotHubResourceCreateEventHubConsumerGroupResponse>;\n  /**\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param eventHubEndpointName The name of the Event Hub-compatible endpoint in the IoT hub.\n   * @param name The name of the consumer group to add.\n   * @param callback The callback\n   */\n  createEventHubConsumerGroup(resourceGroupName: string, resourceName: string, eventHubEndpointName: string, name: string, callback: msRest.ServiceCallback<Models.EventHubConsumerGroupInfo>): void;\n  /**\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param eventHubEndpointName The name of the Event Hub-compatible endpoint in the IoT hub.\n   * @param name The name of the consumer group to add.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  createEventHubConsumerGroup(resourceGroupName: string, resourceName: string, eventHubEndpointName: string, name: string, options: Models.IotHubResourceCreateEventHubConsumerGroupOptionalParams, callback: msRest.ServiceCallback<Models.EventHubConsumerGroupInfo>): void;\n  createEventHubConsumerGroup(resourceGroupName: string, resourceName: string, eventHubEndpointName: string, name: string, options?: Models.IotHubResourceCreateEventHubConsumerGroupOptionalParams | msRest.ServiceCallback<Models.EventHubConsumerGroupInfo>, callback?: msRest.ServiceCallback<Models.EventHubConsumerGroupInfo>): Promise<Models.IotHubResourceCreateEventHubConsumerGroupResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        resourceName,\n        eventHubEndpointName,\n        name,\n        options\n      },\n      createEventHubConsumerGroupOperationSpec,\n      callback) as Promise<Models.IotHubResourceCreateEventHubConsumerGroupResponse>;\n  }\n\n  /**\n   * Delete a consumer group from an Event Hub-compatible endpoint in an IoT hub.\n   * @summary Delete a consumer group from an Event Hub-compatible endpoint in an IoT hub\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param eventHubEndpointName The name of the Event Hub-compatible endpoint in the IoT hub.\n   * @param name The name of the consumer group to delete.\n   * @param [options] The optional parameters\n   * @returns Promise<msRest.RestResponse>\n   */\n  deleteEventHubConsumerGroup(resourceGroupName: string, resourceName: string, eventHubEndpointName: string, name: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;\n  /**\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param eventHubEndpointName The name of the Event Hub-compatible endpoint in the IoT hub.\n   * @param name The name of the consumer group to delete.\n   * @param callback The callback\n   */\n  deleteEventHubConsumerGroup(resourceGroupName: string, resourceName: string, eventHubEndpointName: string, name: string, callback: msRest.ServiceCallback<void>): void;\n  /**\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param eventHubEndpointName The name of the Event Hub-compatible endpoint in the IoT hub.\n   * @param name The name of the consumer group to delete.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  deleteEventHubConsumerGroup(resourceGroupName: string, resourceName: string, eventHubEndpointName: string, name: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;\n  deleteEventHubConsumerGroup(resourceGroupName: string, resourceName: string, eventHubEndpointName: string, name: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<msRest.RestResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        resourceName,\n        eventHubEndpointName,\n        name,\n        options\n      },\n      deleteEventHubConsumerGroupOperationSpec,\n      callback);\n  }\n\n  /**\n   * Get a list of all the jobs in an IoT hub. For more information, see:\n   * https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-identity-registry.\n   * @summary Get a list of all the jobs in an IoT hub. For more information, see:\n   * https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-identity-registry\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.IotHubResourceListJobsResponse>\n   */\n  listJobs(resourceGroupName: string, resourceName: string, options?: msRest.RequestOptionsBase): Promise<Models.IotHubResourceListJobsResponse>;\n  /**\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param callback The callback\n   */\n  listJobs(resourceGroupName: string, resourceName: string, callback: msRest.ServiceCallback<Models.JobResponseListResult>): void;\n  /**\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listJobs(resourceGroupName: string, resourceName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.JobResponseListResult>): void;\n  listJobs(resourceGroupName: string, resourceName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.JobResponseListResult>, callback?: msRest.ServiceCallback<Models.JobResponseListResult>): Promise<Models.IotHubResourceListJobsResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        resourceName,\n        options\n      },\n      listJobsOperationSpec,\n      callback) as Promise<Models.IotHubResourceListJobsResponse>;\n  }\n\n  /**\n   * Get the details of a job from an IoT hub. For more information, see:\n   * https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-identity-registry.\n   * @summary Get the details of a job from an IoT hub. For more information, see:\n   * https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-identity-registry\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param jobId The job identifier.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.IotHubResourceGetJobResponse>\n   */\n  getJob(resourceGroupName: string, resourceName: string, jobId: string, options?: msRest.RequestOptionsBase): Promise<Models.IotHubResourceGetJobResponse>;\n  /**\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param jobId The job identifier.\n   * @param callback The callback\n   */\n  getJob(resourceGroupName: string, resourceName: string, jobId: string, callback: msRest.ServiceCallback<Models.JobResponse>): void;\n  /**\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param jobId The job identifier.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getJob(resourceGroupName: string, resourceName: string, jobId: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.JobResponse>): void;\n  getJob(resourceGroupName: string, resourceName: string, jobId: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.JobResponse>, callback?: msRest.ServiceCallback<Models.JobResponse>): Promise<Models.IotHubResourceGetJobResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        resourceName,\n        jobId,\n        options\n      },\n      getJobOperationSpec,\n      callback) as Promise<Models.IotHubResourceGetJobResponse>;\n  }\n\n  /**\n   * Get the quota metrics for an IoT hub.\n   * @summary Get the quota metrics for an IoT hub\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.IotHubResourceGetQuotaMetricsResponse>\n   */\n  getQuotaMetrics(resourceGroupName: string, resourceName: string, options?: msRest.RequestOptionsBase): Promise<Models.IotHubResourceGetQuotaMetricsResponse>;\n  /**\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param callback The callback\n   */\n  getQuotaMetrics(resourceGroupName: string, resourceName: string, callback: msRest.ServiceCallback<Models.IotHubQuotaMetricInfoListResult>): void;\n  /**\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getQuotaMetrics(resourceGroupName: string, resourceName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.IotHubQuotaMetricInfoListResult>): void;\n  getQuotaMetrics(resourceGroupName: string, resourceName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.IotHubQuotaMetricInfoListResult>, callback?: msRest.ServiceCallback<Models.IotHubQuotaMetricInfoListResult>): Promise<Models.IotHubResourceGetQuotaMetricsResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        resourceName,\n        options\n      },\n      getQuotaMetricsOperationSpec,\n      callback) as Promise<Models.IotHubResourceGetQuotaMetricsResponse>;\n  }\n\n  /**\n   * Get the health for routing endpoints.\n   * @summary Get the health for routing endpoints\n   * @param resourceGroupName\n   * @param iotHubName\n   * @param [options] The optional parameters\n   * @returns Promise<Models.IotHubResourceGetEndpointHealthResponse>\n   */\n  getEndpointHealth(resourceGroupName: string, iotHubName: string, options?: msRest.RequestOptionsBase): Promise<Models.IotHubResourceGetEndpointHealthResponse>;\n  /**\n   * @param resourceGroupName\n   * @param iotHubName\n   * @param callback The callback\n   */\n  getEndpointHealth(resourceGroupName: string, iotHubName: string, callback: msRest.ServiceCallback<Models.EndpointHealthDataListResult>): void;\n  /**\n   * @param resourceGroupName\n   * @param iotHubName\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getEndpointHealth(resourceGroupName: string, iotHubName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.EndpointHealthDataListResult>): void;\n  getEndpointHealth(resourceGroupName: string, iotHubName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.EndpointHealthDataListResult>, callback?: msRest.ServiceCallback<Models.EndpointHealthDataListResult>): Promise<Models.IotHubResourceGetEndpointHealthResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        iotHubName,\n        options\n      },\n      getEndpointHealthOperationSpec,\n      callback) as Promise<Models.IotHubResourceGetEndpointHealthResponse>;\n  }\n\n  /**\n   * Check if an IoT hub name is available.\n   * @summary Check if an IoT hub name is available\n   * @param name The name of the IoT hub to check.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.IotHubResourceCheckNameAvailabilityResponse>\n   */\n  checkNameAvailability(name: string, options?: msRest.RequestOptionsBase): Promise<Models.IotHubResourceCheckNameAvailabilityResponse>;\n  /**\n   * @param name The name of the IoT hub to check.\n   * @param callback The callback\n   */\n  checkNameAvailability(name: string, callback: msRest.ServiceCallback<Models.IotHubNameAvailabilityInfo>): void;\n  /**\n   * @param name The name of the IoT hub to check.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  checkNameAvailability(name: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.IotHubNameAvailabilityInfo>): void;\n  checkNameAvailability(name: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.IotHubNameAvailabilityInfo>, callback?: msRest.ServiceCallback<Models.IotHubNameAvailabilityInfo>): Promise<Models.IotHubResourceCheckNameAvailabilityResponse> {\n    return this.client.sendOperationRequest(\n      {\n        name,\n        options\n      },\n      checkNameAvailabilityOperationSpec,\n      callback) as Promise<Models.IotHubResourceCheckNameAvailabilityResponse>;\n  }\n\n  /**\n   * Test all routes configured in this Iot Hub\n   * @summary Test all routes\n   * @param input Input for testing all routes\n   * @param iotHubName IotHub to be tested\n   * @param resourceGroupName resource group which Iot Hub belongs to\n   * @param [options] The optional parameters\n   * @returns Promise<Models.IotHubResourceTestAllRoutesResponse>\n   */\n  testAllRoutes(input: Models.TestAllRoutesInput, iotHubName: string, resourceGroupName: string, options?: msRest.RequestOptionsBase): Promise<Models.IotHubResourceTestAllRoutesResponse>;\n  /**\n   * @param input Input for testing all routes\n   * @param iotHubName IotHub to be tested\n   * @param resourceGroupName resource group which Iot Hub belongs to\n   * @param callback The callback\n   */\n  testAllRoutes(input: Models.TestAllRoutesInput, iotHubName: string, resourceGroupName: string, callback: msRest.ServiceCallback<Models.TestAllRoutesResult>): void;\n  /**\n   * @param input Input for testing all routes\n   * @param iotHubName IotHub to be tested\n   * @param resourceGroupName resource group which Iot Hub belongs to\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  testAllRoutes(input: Models.TestAllRoutesInput, iotHubName: string, resourceGroupName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.TestAllRoutesResult>): void;\n  testAllRoutes(input: Models.TestAllRoutesInput, iotHubName: string, resourceGroupName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.TestAllRoutesResult>, callback?: msRest.ServiceCallback<Models.TestAllRoutesResult>): Promise<Models.IotHubResourceTestAllRoutesResponse> {\n    return this.client.sendOperationRequest(\n      {\n        input,\n        iotHubName,\n        resourceGroupName,\n        options\n      },\n      testAllRoutesOperationSpec,\n      callback) as Promise<Models.IotHubResourceTestAllRoutesResponse>;\n  }\n\n  /**\n   * Test the new route for this Iot Hub\n   * @summary Test the new route\n   * @param input Route that needs to be tested\n   * @param iotHubName IotHub to be tested\n   * @param resourceGroupName resource group which Iot Hub belongs to\n   * @param [options] The optional parameters\n   * @returns Promise<Models.IotHubResourceTestRouteResponse>\n   */\n  testRoute(input: Models.TestRouteInput, iotHubName: string, resourceGroupName: string, options?: msRest.RequestOptionsBase): Promise<Models.IotHubResourceTestRouteResponse>;\n  /**\n   * @param input Route that needs to be tested\n   * @param iotHubName IotHub to be tested\n   * @param resourceGroupName resource group which Iot Hub belongs to\n   * @param callback The callback\n   */\n  testRoute(input: Models.TestRouteInput, iotHubName: string, resourceGroupName: string, callback: msRest.ServiceCallback<Models.TestRouteResult>): void;\n  /**\n   * @param input Route that needs to be tested\n   * @param iotHubName IotHub to be tested\n   * @param resourceGroupName resource group which Iot Hub belongs to\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  testRoute(input: Models.TestRouteInput, iotHubName: string, resourceGroupName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.TestRouteResult>): void;\n  testRoute(input: Models.TestRouteInput, iotHubName: string, resourceGroupName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.TestRouteResult>, callback?: msRest.ServiceCallback<Models.TestRouteResult>): Promise<Models.IotHubResourceTestRouteResponse> {\n    return this.client.sendOperationRequest(\n      {\n        input,\n        iotHubName,\n        resourceGroupName,\n        options\n      },\n      testRouteOperationSpec,\n      callback) as Promise<Models.IotHubResourceTestRouteResponse>;\n  }\n\n  /**\n   * Get the security metadata for an IoT hub. For more information, see:\n   * https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-security.\n   * @summary Get the security metadata for an IoT hub. For more information, see:\n   * https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-security\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.IotHubResourceListKeysResponse>\n   */\n  listKeys(resourceGroupName: string, resourceName: string, options?: msRest.RequestOptionsBase): Promise<Models.IotHubResourceListKeysResponse>;\n  /**\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param callback The callback\n   */\n  listKeys(resourceGroupName: string, resourceName: string, callback: msRest.ServiceCallback<Models.SharedAccessSignatureAuthorizationRuleListResult>): void;\n  /**\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listKeys(resourceGroupName: string, resourceName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.SharedAccessSignatureAuthorizationRuleListResult>): void;\n  listKeys(resourceGroupName: string, resourceName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.SharedAccessSignatureAuthorizationRuleListResult>, callback?: msRest.ServiceCallback<Models.SharedAccessSignatureAuthorizationRuleListResult>): Promise<Models.IotHubResourceListKeysResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        resourceName,\n        options\n      },\n      listKeysOperationSpec,\n      callback) as Promise<Models.IotHubResourceListKeysResponse>;\n  }\n\n  /**\n   * Get a shared access policy by name from an IoT hub. For more information, see:\n   * https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-security.\n   * @summary Get a shared access policy by name from an IoT hub. For more information, see:\n   * https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-security\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param keyName The name of the shared access policy.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.IotHubResourceGetKeysForKeyNameResponse>\n   */\n  getKeysForKeyName(resourceGroupName: string, resourceName: string, keyName: string, options?: msRest.RequestOptionsBase): Promise<Models.IotHubResourceGetKeysForKeyNameResponse>;\n  /**\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param keyName The name of the shared access policy.\n   * @param callback The callback\n   */\n  getKeysForKeyName(resourceGroupName: string, resourceName: string, keyName: string, callback: msRest.ServiceCallback<Models.SharedAccessSignatureAuthorizationRule>): void;\n  /**\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param keyName The name of the shared access policy.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getKeysForKeyName(resourceGroupName: string, resourceName: string, keyName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.SharedAccessSignatureAuthorizationRule>): void;\n  getKeysForKeyName(resourceGroupName: string, resourceName: string, keyName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.SharedAccessSignatureAuthorizationRule>, callback?: msRest.ServiceCallback<Models.SharedAccessSignatureAuthorizationRule>): Promise<Models.IotHubResourceGetKeysForKeyNameResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        resourceName,\n        keyName,\n        options\n      },\n      getKeysForKeyNameOperationSpec,\n      callback) as Promise<Models.IotHubResourceGetKeysForKeyNameResponse>;\n  }\n\n  /**\n   * Exports all the device identities in the IoT hub identity registry to an Azure Storage blob\n   * container. For more information, see:\n   * https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-identity-registry#import-and-export-device-identities.\n   * @summary Exports all the device identities in the IoT hub identity registry to an Azure Storage\n   * blob container. For more information, see:\n   * https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-identity-registry#import-and-export-device-identities\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param exportDevicesParameters The parameters that specify the export devices operation.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.IotHubResourceExportDevicesResponse>\n   */\n  exportDevices(resourceGroupName: string, resourceName: string, exportDevicesParameters: Models.ExportDevicesRequest, options?: msRest.RequestOptionsBase): Promise<Models.IotHubResourceExportDevicesResponse>;\n  /**\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param exportDevicesParameters The parameters that specify the export devices operation.\n   * @param callback The callback\n   */\n  exportDevices(resourceGroupName: string, resourceName: string, exportDevicesParameters: Models.ExportDevicesRequest, callback: msRest.ServiceCallback<Models.JobResponse>): void;\n  /**\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param exportDevicesParameters The parameters that specify the export devices operation.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  exportDevices(resourceGroupName: string, resourceName: string, exportDevicesParameters: Models.ExportDevicesRequest, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.JobResponse>): void;\n  exportDevices(resourceGroupName: string, resourceName: string, exportDevicesParameters: Models.ExportDevicesRequest, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.JobResponse>, callback?: msRest.ServiceCallback<Models.JobResponse>): Promise<Models.IotHubResourceExportDevicesResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        resourceName,\n        exportDevicesParameters,\n        options\n      },\n      exportDevicesOperationSpec,\n      callback) as Promise<Models.IotHubResourceExportDevicesResponse>;\n  }\n\n  /**\n   * Import, update, or delete device identities in the IoT hub identity registry from a blob. For\n   * more information, see:\n   * https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-identity-registry#import-and-export-device-identities.\n   * @summary Import, update, or delete device identities in the IoT hub identity registry from a\n   * blob. For more information, see:\n   * https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-identity-registry#import-and-export-device-identities\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param importDevicesParameters The parameters that specify the import devices operation.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.IotHubResourceImportDevicesResponse>\n   */\n  importDevices(resourceGroupName: string, resourceName: string, importDevicesParameters: Models.ImportDevicesRequest, options?: msRest.RequestOptionsBase): Promise<Models.IotHubResourceImportDevicesResponse>;\n  /**\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param importDevicesParameters The parameters that specify the import devices operation.\n   * @param callback The callback\n   */\n  importDevices(resourceGroupName: string, resourceName: string, importDevicesParameters: Models.ImportDevicesRequest, callback: msRest.ServiceCallback<Models.JobResponse>): void;\n  /**\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param importDevicesParameters The parameters that specify the import devices operation.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  importDevices(resourceGroupName: string, resourceName: string, importDevicesParameters: Models.ImportDevicesRequest, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.JobResponse>): void;\n  importDevices(resourceGroupName: string, resourceName: string, importDevicesParameters: Models.ImportDevicesRequest, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.JobResponse>, callback?: msRest.ServiceCallback<Models.JobResponse>): Promise<Models.IotHubResourceImportDevicesResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        resourceName,\n        importDevicesParameters,\n        options\n      },\n      importDevicesOperationSpec,\n      callback) as Promise<Models.IotHubResourceImportDevicesResponse>;\n  }\n\n  /**\n   * Create or update the metadata of an Iot hub. The usual pattern to modify a property is to\n   * retrieve the IoT hub metadata and security metadata, and then combine them with the modified\n   * values in a new body to update the IoT hub.\n   * @summary Create or update the metadata of an IoT hub.\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param iotHubDescription The IoT hub metadata and security metadata.\n   * @param [options] The optional parameters\n   * @returns Promise<msRestAzure.LROPoller>\n   */\n  beginCreateOrUpdate(resourceGroupName: string, resourceName: string, iotHubDescription: Models.IotHubDescription, options?: Models.IotHubResourceBeginCreateOrUpdateOptionalParams): Promise<msRestAzure.LROPoller> {\n    return this.client.sendLRORequest(\n      {\n        resourceGroupName,\n        resourceName,\n        iotHubDescription,\n        options\n      },\n      beginCreateOrUpdateOperationSpec,\n      options);\n  }\n\n  /**\n   * Update an existing IoT Hub tags. to update other fields use the CreateOrUpdate method\n   * @summary Update an existing IoT Hubs tags.\n   * @param resourceGroupName Resource group identifier.\n   * @param resourceName Name of iot hub to update.\n   * @param [options] The optional parameters\n   * @returns Promise<msRestAzure.LROPoller>\n   */\n  beginUpdate(resourceGroupName: string, resourceName: string, options?: Models.IotHubResourceBeginUpdateOptionalParams): Promise<msRestAzure.LROPoller> {\n    return this.client.sendLRORequest(\n      {\n        resourceGroupName,\n        resourceName,\n        options\n      },\n      beginUpdateOperationSpec,\n      options);\n  }\n\n  /**\n   * Delete an IoT hub.\n   * @summary Delete an IoT hub\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param [options] The optional parameters\n   * @returns Promise<msRestAzure.LROPoller>\n   */\n  beginDeleteMethod(resourceGroupName: string, resourceName: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {\n    return this.client.sendLRORequest(\n      {\n        resourceGroupName,\n        resourceName,\n        options\n      },\n      beginDeleteMethodOperationSpec,\n      options);\n  }\n\n  /**\n   * Get all the IoT hubs in a subscription.\n   * @summary Get all the IoT hubs in a subscription\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.IotHubResourceListBySubscriptionNextResponse>\n   */\n  listBySubscriptionNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.IotHubResourceListBySubscriptionNextResponse>;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param callback The callback\n   */\n  listBySubscriptionNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.IotHubDescriptionListResult>): void;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listBySubscriptionNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.IotHubDescriptionListResult>): void;\n  listBySubscriptionNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.IotHubDescriptionListResult>, callback?: msRest.ServiceCallback<Models.IotHubDescriptionListResult>): Promise<Models.IotHubResourceListBySubscriptionNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        nextPageLink,\n        options\n      },\n      listBySubscriptionNextOperationSpec,\n      callback) as Promise<Models.IotHubResourceListBySubscriptionNextResponse>;\n  }\n\n  /**\n   * Get all the IoT hubs in a resource group.\n   * @summary Get all the IoT hubs in a resource group\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.IotHubResourceListByResourceGroupNextResponse>\n   */\n  listByResourceGroupNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.IotHubResourceListByResourceGroupNextResponse>;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param callback The callback\n   */\n  listByResourceGroupNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.IotHubDescriptionListResult>): void;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listByResourceGroupNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.IotHubDescriptionListResult>): void;\n  listByResourceGroupNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.IotHubDescriptionListResult>, callback?: msRest.ServiceCallback<Models.IotHubDescriptionListResult>): Promise<Models.IotHubResourceListByResourceGroupNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        nextPageLink,\n        options\n      },\n      listByResourceGroupNextOperationSpec,\n      callback) as Promise<Models.IotHubResourceListByResourceGroupNextResponse>;\n  }\n\n  /**\n   * Get the list of valid SKUs for an IoT hub.\n   * @summary Get the list of valid SKUs for an IoT hub\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.IotHubResourceGetValidSkusNextResponse>\n   */\n  getValidSkusNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.IotHubResourceGetValidSkusNextResponse>;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param callback The callback\n   */\n  getValidSkusNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.IotHubSkuDescriptionListResult>): void;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getValidSkusNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.IotHubSkuDescriptionListResult>): void;\n  getValidSkusNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.IotHubSkuDescriptionListResult>, callback?: msRest.ServiceCallback<Models.IotHubSkuDescriptionListResult>): Promise<Models.IotHubResourceGetValidSkusNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        nextPageLink,\n        options\n      },\n      getValidSkusNextOperationSpec,\n      callback) as Promise<Models.IotHubResourceGetValidSkusNextResponse>;\n  }\n\n  /**\n   * Get a list of the consumer groups in the Event Hub-compatible device-to-cloud endpoint in an IoT\n   * hub.\n   * @summary Get a list of the consumer groups in the Event Hub-compatible device-to-cloud endpoint\n   * in an IoT hub\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.IotHubResourceListEventHubConsumerGroupsNextResponse>\n   */\n  listEventHubConsumerGroupsNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.IotHubResourceListEventHubConsumerGroupsNextResponse>;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param callback The callback\n   */\n  listEventHubConsumerGroupsNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.EventHubConsumerGroupsListResult>): void;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listEventHubConsumerGroupsNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.EventHubConsumerGroupsListResult>): void;\n  listEventHubConsumerGroupsNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.EventHubConsumerGroupsListResult>, callback?: msRest.ServiceCallback<Models.EventHubConsumerGroupsListResult>): Promise<Models.IotHubResourceListEventHubConsumerGroupsNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        nextPageLink,\n        options\n      },\n      listEventHubConsumerGroupsNextOperationSpec,\n      callback) as Promise<Models.IotHubResourceListEventHubConsumerGroupsNextResponse>;\n  }\n\n  /**\n   * Get a list of all the jobs in an IoT hub. For more information, see:\n   * https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-identity-registry.\n   * @summary Get a list of all the jobs in an IoT hub. For more information, see:\n   * https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-identity-registry\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.IotHubResourceListJobsNextResponse>\n   */\n  listJobsNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.IotHubResourceListJobsNextResponse>;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param callback The callback\n   */\n  listJobsNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.JobResponseListResult>): void;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listJobsNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.JobResponseListResult>): void;\n  listJobsNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.JobResponseListResult>, callback?: msRest.ServiceCallback<Models.JobResponseListResult>): Promise<Models.IotHubResourceListJobsNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        nextPageLink,\n        options\n      },\n      listJobsNextOperationSpec,\n      callback) as Promise<Models.IotHubResourceListJobsNextResponse>;\n  }\n\n  /**\n   * Get the quota metrics for an IoT hub.\n   * @summary Get the quota metrics for an IoT hub\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.IotHubResourceGetQuotaMetricsNextResponse>\n   */\n  getQuotaMetricsNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.IotHubResourceGetQuotaMetricsNextResponse>;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param callback The callback\n   */\n  getQuotaMetricsNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.IotHubQuotaMetricInfoListResult>): void;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getQuotaMetricsNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.IotHubQuotaMetricInfoListResult>): void;\n  getQuotaMetricsNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.IotHubQuotaMetricInfoListResult>, callback?: msRest.ServiceCallback<Models.IotHubQuotaMetricInfoListResult>): Promise<Models.IotHubResourceGetQuotaMetricsNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        nextPageLink,\n        options\n      },\n      getQuotaMetricsNextOperationSpec,\n      callback) as Promise<Models.IotHubResourceGetQuotaMetricsNextResponse>;\n  }\n\n  /**\n   * Get the health for routing endpoints.\n   * @summary Get the health for routing endpoints\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.IotHubResourceGetEndpointHealthNextResponse>\n   */\n  getEndpointHealthNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.IotHubResourceGetEndpointHealthNextResponse>;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param callback The callback\n   */\n  getEndpointHealthNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.EndpointHealthDataListResult>): void;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getEndpointHealthNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.EndpointHealthDataListResult>): void;\n  getEndpointHealthNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.EndpointHealthDataListResult>, callback?: msRest.ServiceCallback<Models.EndpointHealthDataListResult>): Promise<Models.IotHubResourceGetEndpointHealthNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        nextPageLink,\n        options\n      },\n      getEndpointHealthNextOperationSpec,\n      callback) as Promise<Models.IotHubResourceGetEndpointHealthNextResponse>;\n  }\n\n  /**\n   * Get the security metadata for an IoT hub. For more information, see:\n   * https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-security.\n   * @summary Get the security metadata for an IoT hub. For more information, see:\n   * https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-security\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.IotHubResourceListKeysNextResponse>\n   */\n  listKeysNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.IotHubResourceListKeysNextResponse>;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param callback The callback\n   */\n  listKeysNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.SharedAccessSignatureAuthorizationRuleListResult>): void;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listKeysNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.SharedAccessSignatureAuthorizationRuleListResult>): void;\n  listKeysNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.SharedAccessSignatureAuthorizationRuleListResult>, callback?: msRest.ServiceCallback<Models.SharedAccessSignatureAuthorizationRuleListResult>): Promise<Models.IotHubResourceListKeysNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        nextPageLink,\n        options\n      },\n      listKeysNextOperationSpec,\n      callback) as Promise<Models.IotHubResourceListKeysNextResponse>;\n  }\n}\n\n// Operation Specifications\nconst serializer = new msRest.Serializer(Mappers);\nconst getOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.IotHubDescription\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  serializer\n};\n\nconst listBySubscriptionOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/providers/Microsoft.Devices/IotHubs\",\n  urlParameters: [\n    Parameters.subscriptionId\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.IotHubDescriptionListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  serializer\n};\n\nconst listByResourceGroupOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.IotHubDescriptionListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  serializer\n};\n\nconst getStatsOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/IotHubStats\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.RegistryStatistics\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  serializer\n};\n\nconst getValidSkusOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/skus\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.IotHubSkuDescriptionListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  serializer\n};\n\nconst listEventHubConsumerGroupsOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/eventHubEndpoints/{eventHubEndpointName}/ConsumerGroups\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName,\n    Parameters.eventHubEndpointName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.EventHubConsumerGroupsListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  serializer\n};\n\nconst getEventHubConsumerGroupOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/eventHubEndpoints/{eventHubEndpointName}/ConsumerGroups/{name}\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName,\n    Parameters.eventHubEndpointName,\n    Parameters.name\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.EventHubConsumerGroupInfo\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  serializer\n};\n\nconst createEventHubConsumerGroupOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/eventHubEndpoints/{eventHubEndpointName}/ConsumerGroups/{name}\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName,\n    Parameters.eventHubEndpointName,\n    Parameters.name\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  requestBody: {\n    parameterPath: {\n      properties: [\n        \"options\",\n        \"properties\"\n      ]\n    },\n    mapper: {\n      ...Mappers.EventHubConsumerGroupBodyDescription,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.EventHubConsumerGroupInfo\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  serializer\n};\n\nconst deleteEventHubConsumerGroupOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"DELETE\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/eventHubEndpoints/{eventHubEndpointName}/ConsumerGroups/{name}\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName,\n    Parameters.eventHubEndpointName,\n    Parameters.name\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {},\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  serializer\n};\n\nconst listJobsOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/jobs\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.JobResponseListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  serializer\n};\n\nconst getJobOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/jobs/{jobId}\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName,\n    Parameters.jobId\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.JobResponse\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  serializer\n};\n\nconst getQuotaMetricsOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/quotaMetrics\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.IotHubQuotaMetricInfoListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  serializer\n};\n\nconst getEndpointHealthOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{iotHubName}/routingEndpointsHealth\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.iotHubName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.EndpointHealthDataListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  serializer\n};\n\nconst checkNameAvailabilityOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"subscriptions/{subscriptionId}/providers/Microsoft.Devices/checkNameAvailability\",\n  urlParameters: [\n    Parameters.subscriptionId\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  requestBody: {\n    parameterPath: {\n      name: \"name\"\n    },\n    mapper: {\n      ...Mappers.OperationInputs,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.IotHubNameAvailabilityInfo\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  serializer\n};\n\nconst testAllRoutesOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{iotHubName}/routing/routes/$testall\",\n  urlParameters: [\n    Parameters.iotHubName,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  requestBody: {\n    parameterPath: \"input\",\n    mapper: {\n      ...Mappers.TestAllRoutesInput,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.TestAllRoutesResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  serializer\n};\n\nconst testRouteOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{iotHubName}/routing/routes/$testnew\",\n  urlParameters: [\n    Parameters.iotHubName,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  requestBody: {\n    parameterPath: \"input\",\n    mapper: {\n      ...Mappers.TestRouteInput,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.TestRouteResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  serializer\n};\n\nconst listKeysOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/listkeys\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.SharedAccessSignatureAuthorizationRuleListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  serializer\n};\n\nconst getKeysForKeyNameOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/IotHubKeys/{keyName}/listkeys\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName,\n    Parameters.keyName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.SharedAccessSignatureAuthorizationRule\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  serializer\n};\n\nconst exportDevicesOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/exportDevices\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  requestBody: {\n    parameterPath: \"exportDevicesParameters\",\n    mapper: {\n      ...Mappers.ExportDevicesRequest,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.JobResponse\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  serializer\n};\n\nconst importDevicesOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/importDevices\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  requestBody: {\n    parameterPath: \"importDevicesParameters\",\n    mapper: {\n      ...Mappers.ImportDevicesRequest,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.JobResponse\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  serializer\n};\n\nconst beginCreateOrUpdateOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.ifMatch0,\n    Parameters.acceptLanguage\n  ],\n  requestBody: {\n    parameterPath: \"iotHubDescription\",\n    mapper: {\n      ...Mappers.IotHubDescription,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.IotHubDescription\n    },\n    201: {\n      bodyMapper: Mappers.IotHubDescription\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  serializer\n};\n\nconst beginUpdateOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PATCH\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  requestBody: {\n    parameterPath: {\n      tags: [\n        \"options\",\n        \"tags\"\n      ]\n    },\n    mapper: {\n      ...Mappers.TagsResource,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.IotHubDescription\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst beginDeleteMethodOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"DELETE\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.IotHubDescription\n    },\n    202: {\n      bodyMapper: Mappers.IotHubDescription\n    },\n    204: {},\n    404: {\n      bodyMapper: Mappers.ErrorDetails\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  serializer\n};\n\nconst listBySubscriptionNextOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  baseUrl: \"https://management.azure.com\",\n  path: \"{nextLink}\",\n  urlParameters: [\n    Parameters.nextPageLink\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.IotHubDescriptionListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  serializer\n};\n\nconst listByResourceGroupNextOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  baseUrl: \"https://management.azure.com\",\n  path: \"{nextLink}\",\n  urlParameters: [\n    Parameters.nextPageLink\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.IotHubDescriptionListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  serializer\n};\n\nconst getValidSkusNextOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  baseUrl: \"https://management.azure.com\",\n  path: \"{nextLink}\",\n  urlParameters: [\n    Parameters.nextPageLink\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.IotHubSkuDescriptionListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  serializer\n};\n\nconst listEventHubConsumerGroupsNextOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  baseUrl: \"https://management.azure.com\",\n  path: \"{nextLink}\",\n  urlParameters: [\n    Parameters.nextPageLink\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.EventHubConsumerGroupsListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  serializer\n};\n\nconst listJobsNextOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  baseUrl: \"https://management.azure.com\",\n  path: \"{nextLink}\",\n  urlParameters: [\n    Parameters.nextPageLink\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.JobResponseListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  serializer\n};\n\nconst getQuotaMetricsNextOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  baseUrl: \"https://management.azure.com\",\n  path: \"{nextLink}\",\n  urlParameters: [\n    Parameters.nextPageLink\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.IotHubQuotaMetricInfoListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  serializer\n};\n\nconst getEndpointHealthNextOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  baseUrl: \"https://management.azure.com\",\n  path: \"{nextLink}\",\n  urlParameters: [\n    Parameters.nextPageLink\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.EndpointHealthDataListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  serializer\n};\n\nconst listKeysNextOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  baseUrl: \"https://management.azure.com\",\n  path: \"{nextLink}\",\n  urlParameters: [\n    Parameters.nextPageLink\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.SharedAccessSignatureAuthorizationRuleListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  ErrorDetails,\n  Name,\n  UserSubscriptionQuota,\n  UserSubscriptionQuotaListResult\n} from \"../models/mappers\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/resourceProviderCommonMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { IotHubClientContext } from \"../iotHubClientContext\";\n\n/** Class representing a ResourceProviderCommon. */\nexport class ResourceProviderCommon {\n  private readonly client: IotHubClientContext;\n\n  /**\n   * Create a ResourceProviderCommon.\n   * @param {IotHubClientContext} client Reference to the service client.\n   */\n  constructor(client: IotHubClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * Get the number of free and paid iot hubs in the subscription\n   * @summary Get the number of iot hubs in the subscription\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ResourceProviderCommonGetSubscriptionQuotaResponse>\n   */\n  getSubscriptionQuota(options?: msRest.RequestOptionsBase): Promise<Models.ResourceProviderCommonGetSubscriptionQuotaResponse>;\n  /**\n   * @param callback The callback\n   */\n  getSubscriptionQuota(callback: msRest.ServiceCallback<Models.UserSubscriptionQuotaListResult>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getSubscriptionQuota(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.UserSubscriptionQuotaListResult>): void;\n  getSubscriptionQuota(options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.UserSubscriptionQuotaListResult>, callback?: msRest.ServiceCallback<Models.UserSubscriptionQuotaListResult>): Promise<Models.ResourceProviderCommonGetSubscriptionQuotaResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      getSubscriptionQuotaOperationSpec,\n      callback) as Promise<Models.ResourceProviderCommonGetSubscriptionQuotaResponse>;\n  }\n}\n\n// Operation Specifications\nconst serializer = new msRest.Serializer(Mappers);\nconst getSubscriptionQuotaOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/providers/Microsoft.Devices/usages\",\n  urlParameters: [\n    Parameters.subscriptionId\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.UserSubscriptionQuotaListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  BaseResource,\n  CertificateDescription,\n  CertificateListDescription,\n  CertificateProperties,\n  CertificatePropertiesWithNonce,\n  CertificateVerificationDescription,\n  CertificateWithNonceDescription,\n  CloudToDeviceProperties,\n  EncryptionPropertiesDescription,\n  EnrichmentProperties,\n  ErrorDetails,\n  EventHubConsumerGroupInfo,\n  EventHubProperties,\n  FallbackRouteProperties,\n  FeedbackProperties,\n  IotHubDescription,\n  IotHubLocationDescription,\n  IotHubProperties,\n  IotHubPropertiesDeviceStreams,\n  IotHubSkuInfo,\n  IpFilterRule,\n  KeyVaultKeyProperties,\n  MessagingEndpointProperties,\n  PrivateEndpoint,\n  PrivateEndpointConnection,\n  PrivateEndpointConnectionProperties,\n  PrivateLinkServiceConnectionState,\n  Resource,\n  RouteProperties,\n  RoutingEndpoints,\n  RoutingEventHubProperties,\n  RoutingProperties,\n  RoutingServiceBusQueueEndpointProperties,\n  RoutingServiceBusTopicEndpointProperties,\n  RoutingStorageContainerProperties,\n  SharedAccessSignatureAuthorizationRule,\n  StorageEndpointProperties\n} from \"../models/mappers\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/certificatesMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { IotHubClientContext } from \"../iotHubClientContext\";\n\n/** Class representing a Certificates. */\nexport class Certificates {\n  private readonly client: IotHubClientContext;\n\n  /**\n   * Create a Certificates.\n   * @param {IotHubClientContext} client Reference to the service client.\n   */\n  constructor(client: IotHubClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * Returns the list of certificates.\n   * @summary Get the certificate list.\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.CertificatesListByIotHubResponse>\n   */\n  listByIotHub(resourceGroupName: string, resourceName: string, options?: msRest.RequestOptionsBase): Promise<Models.CertificatesListByIotHubResponse>;\n  /**\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param callback The callback\n   */\n  listByIotHub(resourceGroupName: string, resourceName: string, callback: msRest.ServiceCallback<Models.CertificateListDescription>): void;\n  /**\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listByIotHub(resourceGroupName: string, resourceName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.CertificateListDescription>): void;\n  listByIotHub(resourceGroupName: string, resourceName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.CertificateListDescription>, callback?: msRest.ServiceCallback<Models.CertificateListDescription>): Promise<Models.CertificatesListByIotHubResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        resourceName,\n        options\n      },\n      listByIotHubOperationSpec,\n      callback) as Promise<Models.CertificatesListByIotHubResponse>;\n  }\n\n  /**\n   * Returns the certificate.\n   * @summary Get the certificate.\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param certificateName The name of the certificate\n   * @param [options] The optional parameters\n   * @returns Promise<Models.CertificatesGetResponse>\n   */\n  get(resourceGroupName: string, resourceName: string, certificateName: string, options?: msRest.RequestOptionsBase): Promise<Models.CertificatesGetResponse>;\n  /**\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param certificateName The name of the certificate\n   * @param callback The callback\n   */\n  get(resourceGroupName: string, resourceName: string, certificateName: string, callback: msRest.ServiceCallback<Models.CertificateDescription>): void;\n  /**\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param certificateName The name of the certificate\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  get(resourceGroupName: string, resourceName: string, certificateName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.CertificateDescription>): void;\n  get(resourceGroupName: string, resourceName: string, certificateName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.CertificateDescription>, callback?: msRest.ServiceCallback<Models.CertificateDescription>): Promise<Models.CertificatesGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        resourceName,\n        certificateName,\n        options\n      },\n      getOperationSpec,\n      callback) as Promise<Models.CertificatesGetResponse>;\n  }\n\n  /**\n   * Adds new or replaces existing certificate.\n   * @summary Upload the certificate to the IoT hub.\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param certificateName The name of the certificate\n   * @param [options] The optional parameters\n   * @returns Promise<Models.CertificatesCreateOrUpdateResponse>\n   */\n  createOrUpdate(resourceGroupName: string, resourceName: string, certificateName: string, options?: Models.CertificatesCreateOrUpdateOptionalParams): Promise<Models.CertificatesCreateOrUpdateResponse>;\n  /**\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param certificateName The name of the certificate\n   * @param callback The callback\n   */\n  createOrUpdate(resourceGroupName: string, resourceName: string, certificateName: string, callback: msRest.ServiceCallback<Models.CertificateDescription>): void;\n  /**\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param certificateName The name of the certificate\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  createOrUpdate(resourceGroupName: string, resourceName: string, certificateName: string, options: Models.CertificatesCreateOrUpdateOptionalParams, callback: msRest.ServiceCallback<Models.CertificateDescription>): void;\n  createOrUpdate(resourceGroupName: string, resourceName: string, certificateName: string, options?: Models.CertificatesCreateOrUpdateOptionalParams | msRest.ServiceCallback<Models.CertificateDescription>, callback?: msRest.ServiceCallback<Models.CertificateDescription>): Promise<Models.CertificatesCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        resourceName,\n        certificateName,\n        options\n      },\n      createOrUpdateOperationSpec,\n      callback) as Promise<Models.CertificatesCreateOrUpdateResponse>;\n  }\n\n  /**\n   * Deletes an existing X509 certificate or does nothing if it does not exist.\n   * @summary Delete an X509 certificate.\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param certificateName The name of the certificate\n   * @param ifMatch ETag of the Certificate.\n   * @param [options] The optional parameters\n   * @returns Promise<msRest.RestResponse>\n   */\n  deleteMethod(resourceGroupName: string, resourceName: string, certificateName: string, ifMatch: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;\n  /**\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param certificateName The name of the certificate\n   * @param ifMatch ETag of the Certificate.\n   * @param callback The callback\n   */\n  deleteMethod(resourceGroupName: string, resourceName: string, certificateName: string, ifMatch: string, callback: msRest.ServiceCallback<void>): void;\n  /**\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param certificateName The name of the certificate\n   * @param ifMatch ETag of the Certificate.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  deleteMethod(resourceGroupName: string, resourceName: string, certificateName: string, ifMatch: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;\n  deleteMethod(resourceGroupName: string, resourceName: string, certificateName: string, ifMatch: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<msRest.RestResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        resourceName,\n        certificateName,\n        ifMatch,\n        options\n      },\n      deleteMethodOperationSpec,\n      callback);\n  }\n\n  /**\n   * Generates verification code for proof of possession flow. The verification code will be used to\n   * generate a leaf certificate.\n   * @summary Generate verification code for proof of possession flow.\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param certificateName The name of the certificate\n   * @param ifMatch ETag of the Certificate.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.CertificatesGenerateVerificationCodeResponse>\n   */\n  generateVerificationCode(resourceGroupName: string, resourceName: string, certificateName: string, ifMatch: string, options?: msRest.RequestOptionsBase): Promise<Models.CertificatesGenerateVerificationCodeResponse>;\n  /**\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param certificateName The name of the certificate\n   * @param ifMatch ETag of the Certificate.\n   * @param callback The callback\n   */\n  generateVerificationCode(resourceGroupName: string, resourceName: string, certificateName: string, ifMatch: string, callback: msRest.ServiceCallback<Models.CertificateWithNonceDescription>): void;\n  /**\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param certificateName The name of the certificate\n   * @param ifMatch ETag of the Certificate.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  generateVerificationCode(resourceGroupName: string, resourceName: string, certificateName: string, ifMatch: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.CertificateWithNonceDescription>): void;\n  generateVerificationCode(resourceGroupName: string, resourceName: string, certificateName: string, ifMatch: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.CertificateWithNonceDescription>, callback?: msRest.ServiceCallback<Models.CertificateWithNonceDescription>): Promise<Models.CertificatesGenerateVerificationCodeResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        resourceName,\n        certificateName,\n        ifMatch,\n        options\n      },\n      generateVerificationCodeOperationSpec,\n      callback) as Promise<Models.CertificatesGenerateVerificationCodeResponse>;\n  }\n\n  /**\n   * Verifies the certificate's private key possession by providing the leaf cert issued by the\n   * verifying pre uploaded certificate.\n   * @summary Verify certificate's private key possession.\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param certificateName The name of the certificate\n   * @param ifMatch ETag of the Certificate.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.CertificatesVerifyResponse>\n   */\n  verify(resourceGroupName: string, resourceName: string, certificateName: string, ifMatch: string, options?: Models.CertificatesVerifyOptionalParams): Promise<Models.CertificatesVerifyResponse>;\n  /**\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param certificateName The name of the certificate\n   * @param ifMatch ETag of the Certificate.\n   * @param callback The callback\n   */\n  verify(resourceGroupName: string, resourceName: string, certificateName: string, ifMatch: string, callback: msRest.ServiceCallback<Models.CertificateDescription>): void;\n  /**\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param certificateName The name of the certificate\n   * @param ifMatch ETag of the Certificate.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  verify(resourceGroupName: string, resourceName: string, certificateName: string, ifMatch: string, options: Models.CertificatesVerifyOptionalParams, callback: msRest.ServiceCallback<Models.CertificateDescription>): void;\n  verify(resourceGroupName: string, resourceName: string, certificateName: string, ifMatch: string, options?: Models.CertificatesVerifyOptionalParams | msRest.ServiceCallback<Models.CertificateDescription>, callback?: msRest.ServiceCallback<Models.CertificateDescription>): Promise<Models.CertificatesVerifyResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        resourceName,\n        certificateName,\n        ifMatch,\n        options\n      },\n      verifyOperationSpec,\n      callback) as Promise<Models.CertificatesVerifyResponse>;\n  }\n}\n\n// Operation Specifications\nconst serializer = new msRest.Serializer(Mappers);\nconst listByIotHubOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/certificates\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.CertificateListDescription\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  serializer\n};\n\nconst getOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/certificates/{certificateName}\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName,\n    Parameters.certificateName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.CertificateDescription\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  serializer\n};\n\nconst createOrUpdateOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/certificates/{certificateName}\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName,\n    Parameters.certificateName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.ifMatch0,\n    Parameters.acceptLanguage\n  ],\n  requestBody: {\n    parameterPath: {\n      properties: [\n        \"options\",\n        \"properties\"\n      ]\n    },\n    mapper: {\n      ...Mappers.CertificateDescription,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.CertificateDescription\n    },\n    201: {\n      bodyMapper: Mappers.CertificateDescription\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  serializer\n};\n\nconst deleteMethodOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"DELETE\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/certificates/{certificateName}\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName,\n    Parameters.certificateName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.ifMatch1,\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  serializer\n};\n\nconst generateVerificationCodeOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/certificates/{certificateName}/generateVerificationCode\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName,\n    Parameters.certificateName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.ifMatch1,\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.CertificateWithNonceDescription\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  serializer\n};\n\nconst verifyOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/certificates/{certificateName}/verify\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName,\n    Parameters.certificateName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.ifMatch1,\n    Parameters.acceptLanguage\n  ],\n  requestBody: {\n    parameterPath: {\n      certificate: [\n        \"options\",\n        \"certificate\"\n      ]\n    },\n    mapper: {\n      ...Mappers.CertificateVerificationDescription,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.CertificateDescription\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  ErrorDetails,\n  FailoverInput\n} from \"../models/mappers\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as msRestAzure from \"@azure/ms-rest-azure-js\";\nimport * as Mappers from \"../models/iotHubMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { IotHubClientContext } from \"../iotHubClientContext\";\n\n/** Class representing a IotHub. */\nexport class IotHub {\n  private readonly client: IotHubClientContext;\n\n  /**\n   * Create a IotHub.\n   * @param {IotHubClientContext} client Reference to the service client.\n   */\n  constructor(client: IotHubClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * Manually initiate a failover for the IoT Hub to its secondary region. To learn more, see\n   * https://aka.ms/manualfailover\n   * @summary Manually initiate a failover for the IoT Hub to its secondary region\n   * @param iotHubName Name of the IoT hub to failover\n   * @param resourceGroupName Name of the resource group containing the IoT hub resource\n   * @param failoverRegion Region the hub will be failed over to\n   * @param [options] The optional parameters\n   * @returns Promise<msRest.RestResponse>\n   */\n  manualFailover(iotHubName: string, resourceGroupName: string, failoverRegion: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse> {\n    return this.beginManualFailover(iotHubName,resourceGroupName,failoverRegion,options)\n      .then(lroPoller => lroPoller.pollUntilFinished());\n  }\n\n  /**\n   * Manually initiate a failover for the IoT Hub to its secondary region. To learn more, see\n   * https://aka.ms/manualfailover\n   * @summary Manually initiate a failover for the IoT Hub to its secondary region\n   * @param iotHubName Name of the IoT hub to failover\n   * @param resourceGroupName Name of the resource group containing the IoT hub resource\n   * @param failoverRegion Region the hub will be failed over to\n   * @param [options] The optional parameters\n   * @returns Promise<msRestAzure.LROPoller>\n   */\n  beginManualFailover(iotHubName: string, resourceGroupName: string, failoverRegion: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {\n    return this.client.sendLRORequest(\n      {\n        iotHubName,\n        resourceGroupName,\n        failoverRegion,\n        options\n      },\n      beginManualFailoverOperationSpec,\n      options);\n  }\n}\n\n// Operation Specifications\nconst serializer = new msRest.Serializer(Mappers);\nconst beginManualFailoverOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{iotHubName}/failover\",\n  urlParameters: [\n    Parameters.iotHubName,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  requestBody: {\n    parameterPath: {\n      failoverRegion: \"failoverRegion\"\n    },\n    mapper: {\n      ...Mappers.FailoverInput,\n      required: true\n    }\n  },\n  responses: {\n    200: {},\n    202: {},\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  ErrorDetails,\n  GroupIdInformation,\n  GroupIdInformationProperties,\n  PrivateLinkResources\n} from \"../models/mappers\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/privateLinkResourcesOperationsMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { IotHubClientContext } from \"../iotHubClientContext\";\n\n/** Class representing a PrivateLinkResourcesOperations. */\nexport class PrivateLinkResourcesOperations {\n  private readonly client: IotHubClientContext;\n\n  /**\n   * Create a PrivateLinkResourcesOperations.\n   * @param {IotHubClientContext} client Reference to the service client.\n   */\n  constructor(client: IotHubClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * List private link resources for the given IotHub\n   * @summary List private link resources\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.PrivateLinkResourcesListResponse>\n   */\n  list(resourceGroupName: string, resourceName: string, options?: msRest.RequestOptionsBase): Promise<Models.PrivateLinkResourcesListResponse>;\n  /**\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param callback The callback\n   */\n  list(resourceGroupName: string, resourceName: string, callback: msRest.ServiceCallback<Models.PrivateLinkResources>): void;\n  /**\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  list(resourceGroupName: string, resourceName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.PrivateLinkResources>): void;\n  list(resourceGroupName: string, resourceName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.PrivateLinkResources>, callback?: msRest.ServiceCallback<Models.PrivateLinkResources>): Promise<Models.PrivateLinkResourcesListResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        resourceName,\n        options\n      },\n      listOperationSpec,\n      callback) as Promise<Models.PrivateLinkResourcesListResponse>;\n  }\n\n  /**\n   * Get the specified private link resource for the given IotHub\n   * @summary Get the specified private link resource\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param groupId The name of the private link resource\n   * @param [options] The optional parameters\n   * @returns Promise<Models.PrivateLinkResourcesGetResponse>\n   */\n  get(resourceGroupName: string, resourceName: string, groupId: string, options?: msRest.RequestOptionsBase): Promise<Models.PrivateLinkResourcesGetResponse>;\n  /**\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param groupId The name of the private link resource\n   * @param callback The callback\n   */\n  get(resourceGroupName: string, resourceName: string, groupId: string, callback: msRest.ServiceCallback<Models.GroupIdInformation>): void;\n  /**\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param groupId The name of the private link resource\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  get(resourceGroupName: string, resourceName: string, groupId: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.GroupIdInformation>): void;\n  get(resourceGroupName: string, resourceName: string, groupId: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.GroupIdInformation>, callback?: msRest.ServiceCallback<Models.GroupIdInformation>): Promise<Models.PrivateLinkResourcesGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        resourceName,\n        groupId,\n        options\n      },\n      getOperationSpec,\n      callback) as Promise<Models.PrivateLinkResourcesGetResponse>;\n  }\n}\n\n// Operation Specifications\nconst serializer = new msRest.Serializer(Mappers);\nconst listOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/iotHubs/{resourceName}/privateLinkResources\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.PrivateLinkResources\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  serializer\n};\n\nconst getOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/iotHubs/{resourceName}/privateLinkResources/{groupId}\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName,\n    Parameters.groupId\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.GroupIdInformation\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  BaseResource,\n  CertificateDescription,\n  CertificateProperties,\n  CertificatePropertiesWithNonce,\n  CertificateWithNonceDescription,\n  CloudToDeviceProperties,\n  EncryptionPropertiesDescription,\n  EnrichmentProperties,\n  ErrorDetails,\n  EventHubConsumerGroupInfo,\n  EventHubProperties,\n  FallbackRouteProperties,\n  FeedbackProperties,\n  IotHubDescription,\n  IotHubLocationDescription,\n  IotHubProperties,\n  IotHubPropertiesDeviceStreams,\n  IotHubSkuInfo,\n  IpFilterRule,\n  KeyVaultKeyProperties,\n  MessagingEndpointProperties,\n  PrivateEndpoint,\n  PrivateEndpointConnection,\n  PrivateEndpointConnectionProperties,\n  PrivateLinkServiceConnectionState,\n  Resource,\n  RouteProperties,\n  RoutingEndpoints,\n  RoutingEventHubProperties,\n  RoutingProperties,\n  RoutingServiceBusQueueEndpointProperties,\n  RoutingServiceBusTopicEndpointProperties,\n  RoutingStorageContainerProperties,\n  SharedAccessSignatureAuthorizationRule,\n  StorageEndpointProperties\n} from \"../models/mappers\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as msRestAzure from \"@azure/ms-rest-azure-js\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/privateEndpointConnectionsMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { IotHubClientContext } from \"../iotHubClientContext\";\n\n/** Class representing a PrivateEndpointConnections. */\nexport class PrivateEndpointConnections {\n  private readonly client: IotHubClientContext;\n\n  /**\n   * Create a PrivateEndpointConnections.\n   * @param {IotHubClientContext} client Reference to the service client.\n   */\n  constructor(client: IotHubClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * List private endpoint connection properties\n   * @summary List private endpoint connections\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.PrivateEndpointConnectionsListResponse>\n   */\n  list(resourceGroupName: string, resourceName: string, options?: msRest.RequestOptionsBase): Promise<Models.PrivateEndpointConnectionsListResponse>;\n  /**\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param callback The callback\n   */\n  list(resourceGroupName: string, resourceName: string, callback: msRest.ServiceCallback<Models.PrivateEndpointConnection[]>): void;\n  /**\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  list(resourceGroupName: string, resourceName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.PrivateEndpointConnection[]>): void;\n  list(resourceGroupName: string, resourceName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.PrivateEndpointConnection[]>, callback?: msRest.ServiceCallback<Models.PrivateEndpointConnection[]>): Promise<Models.PrivateEndpointConnectionsListResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        resourceName,\n        options\n      },\n      listOperationSpec,\n      callback) as Promise<Models.PrivateEndpointConnectionsListResponse>;\n  }\n\n  /**\n   * Get private endpoint connection properties\n   * @summary Get private endpoint connection\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param privateEndpointConnectionName The name of the private endpoint connection\n   * @param [options] The optional parameters\n   * @returns Promise<Models.PrivateEndpointConnectionsGetResponse>\n   */\n  get(resourceGroupName: string, resourceName: string, privateEndpointConnectionName: string, options?: msRest.RequestOptionsBase): Promise<Models.PrivateEndpointConnectionsGetResponse>;\n  /**\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param privateEndpointConnectionName The name of the private endpoint connection\n   * @param callback The callback\n   */\n  get(resourceGroupName: string, resourceName: string, privateEndpointConnectionName: string, callback: msRest.ServiceCallback<Models.PrivateEndpointConnection>): void;\n  /**\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param privateEndpointConnectionName The name of the private endpoint connection\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  get(resourceGroupName: string, resourceName: string, privateEndpointConnectionName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.PrivateEndpointConnection>): void;\n  get(resourceGroupName: string, resourceName: string, privateEndpointConnectionName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.PrivateEndpointConnection>, callback?: msRest.ServiceCallback<Models.PrivateEndpointConnection>): Promise<Models.PrivateEndpointConnectionsGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        resourceName,\n        privateEndpointConnectionName,\n        options\n      },\n      getOperationSpec,\n      callback) as Promise<Models.PrivateEndpointConnectionsGetResponse>;\n  }\n\n  /**\n   * Update the status of a private endpoint connection with the specified name\n   * @summary Update private endpoint connection\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param privateEndpointConnectionName The name of the private endpoint connection\n   * @param properties\n   * @param [options] The optional parameters\n   * @returns Promise<Models.PrivateEndpointConnectionsUpdateResponse>\n   */\n  update(resourceGroupName: string, resourceName: string, privateEndpointConnectionName: string, properties: Models.PrivateEndpointConnectionProperties, options?: msRest.RequestOptionsBase): Promise<Models.PrivateEndpointConnectionsUpdateResponse> {\n    return this.beginUpdate(resourceGroupName,resourceName,privateEndpointConnectionName,properties,options)\n      .then(lroPoller => lroPoller.pollUntilFinished()) as Promise<Models.PrivateEndpointConnectionsUpdateResponse>;\n  }\n\n  /**\n   * Delete private endpoint connection with the specified name\n   * @summary Delete private endpoint connection\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param privateEndpointConnectionName The name of the private endpoint connection\n   * @param [options] The optional parameters\n   * @returns Promise<Models.PrivateEndpointConnectionsDeleteMethodResponse>\n   */\n  deleteMethod(resourceGroupName: string, resourceName: string, privateEndpointConnectionName: string, options?: msRest.RequestOptionsBase): Promise<Models.PrivateEndpointConnectionsDeleteMethodResponse> {\n    return this.beginDeleteMethod(resourceGroupName,resourceName,privateEndpointConnectionName,options)\n      .then(lroPoller => lroPoller.pollUntilFinished()) as Promise<Models.PrivateEndpointConnectionsDeleteMethodResponse>;\n  }\n\n  /**\n   * Update the status of a private endpoint connection with the specified name\n   * @summary Update private endpoint connection\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param privateEndpointConnectionName The name of the private endpoint connection\n   * @param properties\n   * @param [options] The optional parameters\n   * @returns Promise<msRestAzure.LROPoller>\n   */\n  beginUpdate(resourceGroupName: string, resourceName: string, privateEndpointConnectionName: string, properties: Models.PrivateEndpointConnectionProperties, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {\n    return this.client.sendLRORequest(\n      {\n        resourceGroupName,\n        resourceName,\n        privateEndpointConnectionName,\n        properties,\n        options\n      },\n      beginUpdateOperationSpec,\n      options);\n  }\n\n  /**\n   * Delete private endpoint connection with the specified name\n   * @summary Delete private endpoint connection\n   * @param resourceGroupName The name of the resource group that contains the IoT hub.\n   * @param resourceName The name of the IoT hub.\n   * @param privateEndpointConnectionName The name of the private endpoint connection\n   * @param [options] The optional parameters\n   * @returns Promise<msRestAzure.LROPoller>\n   */\n  beginDeleteMethod(resourceGroupName: string, resourceName: string, privateEndpointConnectionName: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller> {\n    return this.client.sendLRORequest(\n      {\n        resourceGroupName,\n        resourceName,\n        privateEndpointConnectionName,\n        options\n      },\n      beginDeleteMethodOperationSpec,\n      options);\n  }\n}\n\n// Operation Specifications\nconst serializer = new msRest.Serializer(Mappers);\nconst listOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/iotHubs/{resourceName}/privateEndpointConnections\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: {\n        serializedName: \"parsedResponse\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"PrivateEndpointConnection\"\n            }\n          }\n        }\n      }\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  serializer\n};\n\nconst getOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/iotHubs/{resourceName}/privateEndpointConnections/{privateEndpointConnectionName}\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName,\n    Parameters.privateEndpointConnectionName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.PrivateEndpointConnection\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  serializer\n};\n\nconst beginUpdateOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/iotHubs/{resourceName}/privateEndpointConnections/{privateEndpointConnectionName}\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName,\n    Parameters.privateEndpointConnectionName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  requestBody: {\n    parameterPath: {\n      properties: \"properties\"\n    },\n    mapper: {\n      ...Mappers.PrivateEndpointConnection,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.PrivateEndpointConnection\n    },\n    201: {\n      bodyMapper: Mappers.PrivateEndpointConnection\n    },\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  serializer\n};\n\nconst beginDeleteMethodOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"DELETE\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/iotHubs/{resourceName}/privateEndpointConnections/{privateEndpointConnectionName}\",\n  urlParameters: [\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceName,\n    Parameters.privateEndpointConnectionName\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.PrivateEndpointConnection\n    },\n    202: {\n      bodyMapper: Mappers.PrivateEndpointConnection\n    },\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorDetails\n    }\n  },\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as Models from \"./models\";\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as msRestAzure from \"@azure/ms-rest-azure-js\";\n\nconst packageName = \"@azure/arm-iothub\";\nconst packageVersion = \"4.0.0\";\n\nexport class IotHubClientContext extends msRestAzure.AzureServiceClient {\n  credentials: msRest.ServiceClientCredentials;\n  subscriptionId: string;\n  apiVersion?: string;\n\n  /**\n   * Initializes a new instance of the IotHubClient class.\n   * @param credentials Credentials needed for the client to connect to Azure.\n   * @param subscriptionId The subscription identifier.\n   * @param [options] The parameter options\n   */\n  constructor(credentials: msRest.ServiceClientCredentials, subscriptionId: string, options?: Models.IotHubClientOptions) {\n    if (credentials == undefined) {\n      throw new Error('\\'credentials\\' cannot be null.');\n    }\n    if (subscriptionId == undefined) {\n      throw new Error('\\'subscriptionId\\' cannot be null.');\n    }\n\n    if (!options) {\n      options = {};\n    }\n    if(!options.userAgent) {\n      const defaultUserAgent = msRestAzure.getDefaultUserAgentValue();\n      options.userAgent = `${packageName}/${packageVersion} ${defaultUserAgent}`;\n    }\n\n    super(credentials, options);\n\n    this.apiVersion = '2020-07-10-preview';\n    this.acceptLanguage = 'en-US';\n    this.longRunningOperationRetryTimeout = 30;\n    this.baseUri = options.baseUri || this.baseUri || \"https://management.azure.com\";\n    this.requestContentType = \"application/json; charset=utf-8\";\n    this.credentials = credentials;\n    this.subscriptionId = subscriptionId;\n\n    if(options.acceptLanguage !== null && options.acceptLanguage !== undefined) {\n      this.acceptLanguage = options.acceptLanguage;\n    }\n    if(options.longRunningOperationRetryTimeout !== null && options.longRunningOperationRetryTimeout !== undefined) {\n      this.longRunningOperationRetryTimeout = options.longRunningOperationRetryTimeout;\n    }\n  }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as Models from \"./models\";\nimport * as Mappers from \"./models/mappers\";\nimport * as operations from \"./operations\";\nimport { IotHubClientContext } from \"./iotHubClientContext\";\n\n\nclass IotHubClient extends IotHubClientContext {\n  // Operation groups\n  operations: operations.Operations;\n  iotHubResource: operations.IotHubResource;\n  resourceProviderCommon: operations.ResourceProviderCommon;\n  certificates: operations.Certificates;\n  iotHub: operations.IotHub;\n  privateLinkResources: operations.PrivateLinkResourcesOperations;\n  privateEndpointConnections: operations.PrivateEndpointConnections;\n\n  /**\n   * Initializes a new instance of the IotHubClient class.\n   * @param credentials Credentials needed for the client to connect to Azure.\n   * @param subscriptionId The subscription identifier.\n   * @param [options] The parameter options\n   */\n  constructor(credentials: msRest.ServiceClientCredentials, subscriptionId: string, options?: Models.IotHubClientOptions) {\n    super(credentials, subscriptionId, options);\n    this.operations = new operations.Operations(this);\n    this.iotHubResource = new operations.IotHubResource(this);\n    this.resourceProviderCommon = new operations.ResourceProviderCommon(this);\n    this.certificates = new operations.Certificates(this);\n    this.iotHub = new operations.IotHub(this);\n    this.privateLinkResources = new operations.PrivateLinkResourcesOperations(this);\n    this.privateEndpointConnections = new operations.PrivateEndpointConnections(this);\n  }\n}\n\n// Operation Specifications\n\nexport {\n  IotHubClient,\n  IotHubClientContext,\n  Models as IotHubModels,\n  Mappers as IotHubMappers\n};\nexport * from \"./operations\";\n"],"names":["CloudErrorMapper","BaseResourceMapper","msRest.Serializer","Parameters.apiVersion","Parameters.acceptLanguage","Mappers.OperationListResult","Mappers.ErrorDetails","Parameters.nextPageLink","serializer","Mappers","Parameters.subscriptionId","Parameters.resourceGroupName","Parameters.resourceName","Mappers.IotHubDescription","Mappers.IotHubDescriptionListResult","Mappers.RegistryStatistics","Mappers.IotHubSkuDescriptionListResult","Parameters.eventHubEndpointName","Mappers.EventHubConsumerGroupsListResult","Parameters.name","Mappers.EventHubConsumerGroupInfo","Mappers.EventHubConsumerGroupBodyDescription","Mappers.JobResponseListResult","Parameters.jobId","Mappers.JobResponse","Mappers.IotHubQuotaMetricInfoListResult","Parameters.iotHubName","Mappers.EndpointHealthDataListResult","Mappers.OperationInputs","Mappers.IotHubNameAvailabilityInfo","Mappers.TestAllRoutesInput","Mappers.TestAllRoutesResult","Mappers.TestRouteInput","Mappers.TestRouteResult","Mappers.SharedAccessSignatureAuthorizationRuleListResult","Parameters.keyName","Mappers.SharedAccessSignatureAuthorizationRule","Mappers.ExportDevicesRequest","Mappers.ImportDevicesRequest","Parameters.ifMatch0","Mappers.TagsResource","Mappers.CloudError","Mappers.UserSubscriptionQuotaListResult","getOperationSpec","Mappers.CertificateListDescription","Parameters.certificateName","Mappers.CertificateDescription","Parameters.ifMatch1","Mappers.CertificateWithNonceDescription","Mappers.CertificateVerificationDescription","Mappers.FailoverInput","listOperationSpec","Mappers.PrivateLinkResources","Parameters.groupId","Mappers.GroupIdInformation","beginUpdateOperationSpec","beginDeleteMethodOperationSpec","Parameters.privateEndpointConnectionName","Mappers.PrivateEndpointConnection","msRestAzure.getDefaultUserAgentValue","msRestAzure.AzureServiceClient","operations.Operations","operations.IotHubResource","operations.ResourceProviderCommon","operations.Certificates","operations.IotHub","operations.PrivateLinkResourcesOperations","operations.PrivateEndpointConnections"],"mappings":"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"}